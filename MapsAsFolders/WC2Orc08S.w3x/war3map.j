//===========================================================================
// 
// WC2Orc08S
// 
//   Warcraft III map script
//   Generated by the Warcraft III World Editor
//   Map Author: LoreCraftDesigns
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************

globals
    // User-defined
    boolean                 udg_IntroCinematic         = false
    boolean                 udg_IntroSkipped           = false
    unit                    udg_Hero_Utok              = null
    unit                    udg_Hero_Doomhammer        = null
    unit                    udg_Hero_DalRend           = null
    unit                    udg_Hero_Zuljin            = null
    unit                    udg_Hero_Tharbek           = null
    unit                    udg_IntroGrunt01           = null
    unit                    udg_IntroGrunt02           = null
    unit                    udg_Hero_Eitrigg           = null
    group                   udg_Intro_Units            = null
    unit                    udg_IntroPeon01            = null
    unit                    udg_IntroPeon02            = null
    unit                    udg_IntroPig               = null
    quest                   udg_MainQuestSettlements   = null
    questitem               udg_MainQuestReqWildhammer = null
    questitem               udg_MainQuestReqTrolls     = null
    boolean                 udg_GameOver               = false
    boolean                 udg_IntroShuffle           = false
    unit                    udg_Hero_Garona            = null
    destructable            udg_Cage_Garona            = null
    timer                   udg_AllianceArrivalTimer   = null
    timerdialog             udg_AllianceArrivalWindow  = null
    minimapicon             udg_SettlementMarker01Blue = null
    minimapicon             udg_SettlementMarker03Red  = null
    minimapicon             udg_SettlementMarker04Green = null
    minimapicon             udg_SettlementMarker02Yellow = null
    minimapicon             udg_TrollMarker01          = null
    minimapicon             udg_TrollMarker02          = null
    minimapicon             udg_TrollMarker03          = null
    minimapicon             udg_TrollMarker04          = null
    minimapicon             udg_TrollMarker05          = null
    unit                    udg_IntroTroll01           = null
    unit                    udg_IntroTroll02           = null
    unit                    udg_VO_Thane               = null
    unit                    udg_VO_AmaniPriest         = null
    unit                    udg_TrollPriest01          = null
    unit                    udg_TrollPriest02          = null
    unit                    udg_TrollPriest03          = null
    unit                    udg_TrollPriest04          = null
    unit                    udg_TrollPriest05          = null
    integer                 udg_TrollRandomVO          = 0
    unit                    udg_TrollVOSpeaker         = null
    timer                   udg_ElvesTimer             = null
    player                  udg_PlayerElves            = null
    sound array             udg_sampleSound
    string array            udg_sampleText
    integer                 udg_maxIndex               = 0
    integer                 udg_index                  = 0
    quest                   udg_OptionalQuestElves     = null
    quest                   udg_MainQuestTrolls        = null
    questitem               udg_OptionalQuestReqElves  = null
    minimapicon             udg_ElvenMarker            = null
    quest                   udg_OptionalQuestSettlements = null
    quest                   udg_OptionalQuestTrolls    = null
    questitem               udg_OptionalQuestReqWildhammer = null
    questitem               udg_OptionalQuestReqTrolls = null
    integer                 udg_SettlementCount        = 0
    boolean                 udg_SettlementDead01Blue   = false
    boolean                 udg_SettlementDead02Yellow = false
    boolean                 udg_SettlementDead03Red    = false
    boolean                 udg_SettlementDead04Green  = false
    player                  udg_SettlementVictim       = null
    player                  udg_Player01               = null
    player                  udg_PlayerTribeBrown       = null
    player                  udg_PlayerTribeCoal        = null
    player                  udg_PlayerTribeMint        = null
    player                  udg_PlayerTribeLavender    = null
    player                  udg_PlayerTribePeach       = null
    player                  udg_PlayerWildBlue         = null
    player                  udg_PlayerWildYellow       = null
    player                  udg_PlayerWildMaroon       = null
    player                  udg_PlayerWildSnow         = null
    player                  udg_PlayerWildEmerald      = null
    integer                 udg_TrollCount             = 0
    boolean                 udg_TrollCap01             = false
    boolean                 udg_TrollCap02             = false
    boolean                 udg_TrollCap03             = false
    boolean                 udg_TrollCap04             = false
    boolean                 udg_TrollCap05             = false
    boolean                 udg_MidCinematic           = false
    boolean                 udg_MidSkipped             = false
    unit                    udg_Hero_Anduin            = null
    unit                    udg_Hero_Kurdran           = null
    group                   udg_Mid_Units              = null
    player                  udg_PlayerNoL              = null
    group                   udg_Mid_Chase              = null
    boolean                 udg_WaveStart              = false
    quest                   udg_MainQuestSurvive       = null
    questitem               udg_MainQuestReqSurviveA   = null
    minimapicon             udg_SurviveMarkerA         = null
    timer                   udg_HoardExitTimer         = null
    timerdialog             udg_HoardExitWindow        = null
    player                  udg_PlayerMidHeroesOrc     = null
    boolean                 udg_MidKnightSkip          = false
    player                  udg_PlayerMidHeroesAlliance = null
    integer                 udg_TrollDeadCount         = 0
    rect                    udg_MidMovingZone          = null
    group                   udg_AllianceForces         = null
    questitem               udg_MainQuestReqSurviveB   = null
    minimapicon             udg_SurviveMarkerB         = null
    group                   udg_Selection_Player       = null
    unit                    udg_AllianceGuard01        = null
    unit                    udg_AllianceGuard02        = null
    unit                    udg_AllianceGuard03        = null
    unit                    udg_AllianceGuard04        = null
    unit                    udg_AllianceGuard05        = null
    unit                    udg_AllianceGuard06        = null
    unit                    udg_AllianceGuard07        = null
    unit                    udg_AllianceGuard08        = null
    unit                    udg_AllianceGuard09        = null
    timer                   udg_HiddenUnitTimer        = null
    boolean                 udg_HiddenUnitsStart       = false
    timer                   udg_MidHeroesInsurance     = null
    questitem               udg_MainQuestReqSurviveC   = null
    boolean                 udg_OutroCinematic         = false
    boolean                 udg_EndingCancelled        = false
    boolean                 udg_OutroSkipped           = false
    group                   udg_OutroForce             = null
    group                   udg_OutroForceB            = null
    group                   udg_OutroHeroesHuman       = null
    group                   udg_OutroHeroesOrc         = null
    unit                    udg_Thrall                 = null
    boolean                 udg_GAMEOVER               = false
    integer                 udg_FailReason             = 0
    boolean                 udg_Failed                 = false
    string                  udg_Playlist
    boolean array           udg_CheckDeathInList
    boolean array           udg_IsUnitTransforming
    integer array           udg_UnitTypeOf
    string array            udg_UnitName
    real                    udg_UnitInActionEvent      = 0
    boolean array           udg_UnitInAction
    unit array              udg_KillerOfUnit
    boolean array           udg_IsUnitPreplaced
    integer array           udg_UDexPrev
    integer array           udg_UDexNext
    unit array              udg_SummonerOfUnit
    boolean array           udg_IsUnitNew
    real                    udg_WorldMaxY              = 0
    real                    udg_WorldMaxX              = 0
    real                    udg_UnitTypeEvent          = 0
    integer                 udg_DetectTransformAbility = 0
    boolean array           udg_IsUnitRemoved
    group array             udg_CargoTransportGroup
    unit array              udg_CargoTransportUnit
    real                    udg_CargoEvent             = 0
    boolean array           udg_IsUnitBeingUnloaded
    boolean array           udg_IsUnitReincarnating
    integer array           udg_CheckDeathList
    timer                   udg_CheckDeathTimer        = null
    real                    udg_DeathEvent             = 0
    boolean array           udg_IsUnitAlive
    integer                 udg_DetectRemoveAbility    = 0
    real                    udg_UnitIndexEvent         = 0
    integer                 udg_UDexLastRecycled       = 0
    boolean                 udg_UnitIndexerEnabled     = false
    integer                 udg_UDex                   = 0
    unit array              udg_UDexUnits
    integer                 udg_UDexMax                = 0
    real                    udg_UnitIndexExEvent       = 0
    boolean array           udg_IsUnitConstructing
    unit                    udg_IndexExUnit            = null
    unit                    udg_IntroPeonWorking       = null
    unit                    udg_DoomhammersWolf        = null
    gamecache               udg_Cache                  = null
    location                udg_TempPoint              = null
    unit                    udg_Dummy                  = null
    weathereffect array     udg_WeatherSnow
    boolean                 udg_ItIsAGoodDayToDie      = false
    boolean                 udg_OnScreen               = false
    boolean                 udg_Showpath               = false
    boolean                 udg_Snowing                = false
    group                   udg_LodgeWave              = null
    unit                    udg_LodgeWaveUnit          = null
    location                udg_LodgeWavePoint         = null
    group                   udg_LodgeWave_R            = null
    location                udg_LodgeWavePoint_R       = null
    unit                    udg_LodgeWaveUnit_R        = null
    unit                    udg_TrollCircle01          = null
    unit                    udg_TrollCircle02          = null
    unit                    udg_TrollCircle03          = null
    unit                    udg_TrollCircle04          = null
    unit                    udg_TrollCircle05          = null
    player                  udg_PlayerTribeWarriors    = null
    unit                    udg_OutroSapper01          = null
    unit                    udg_OutroSapper02          = null
    boolean                 udg_FailureCinematic       = false
    boolean                 udg_FailureSkipped         = false
    unit                    udg_FailureAnduin          = null
    integer                 udg_Chance                 = 0
    unit                    udg_DummyGrunt             = null
    location                udg_TempPointGrunt         = null
    integer                 udg_VOChance               = 0
    group                   udg_DoomhammersEscort      = null
    unit array              udg_EscapeGrunt
    boolean                 udg_EitrigPatrols          = false
    real                    udg_SettlementTimerDifficultyLevel = 0
    group                   udg_GryphonAttackGroup     = null
    integer                 udg_GryphonWaveSize        = 0
    boolean                 udg_GryphonsAttacking      = false
    effect array            udg_GoblinWorkDust
    group                   udg_LastStandGrunts        = null
    boolean                 udg_EitrigIsAttacked       = false
    unit                    udg_EitrigTarget           = null
    player                  udg_PlayerMidKurdran       = null
    boolean                 udg_HeavyHammersResearched = false
    boolean array           udg_VisibilityModOn
    boolean                 udg_Neutral_Smart_Order    = false
    integer                 udg_CreepHP                = 0
    integer                 udg_CreepDMG               = 0
    integer                 udg_GaronaClickChance      = 0
    location                udg_Doomhammer_TempPoint_Q = null
    location                udg_Doomhammer_TempPoint_R = null
    unit                    udg_Doomhammer_Dummy_Q     = null
    unit                    udg_Doomhammer_Dummy_R     = null
    location                udg_Zuljin_TempPoint_E     = null
    unit                    udg_Zuljin_Caster          = null
    unit                    udg_Zuljin_Dummy_Q         = null
    unit                    udg_Zuljin_Dummy_E         = null

    // Generated
    rect                    gg_rct_AllianceGuard01     = null
    rect                    gg_rct_AllianceGuard02     = null
    rect                    gg_rct_AllianceGuard03     = null
    rect                    gg_rct_AllianceGuard04     = null
    rect                    gg_rct_AllianceGuard05     = null
    rect                    gg_rct_AllianceGuard06     = null
    rect                    gg_rct_AllianceGuard07     = null
    rect                    gg_rct_AllianceGuard08     = null
    rect                    gg_rct_AllianceGuard09     = null
    rect                    gg_rct_AvalanchFog         = null
    rect                    gg_rct_BasePatrol01        = null
    rect                    gg_rct_BasePatrol02        = null
    rect                    gg_rct_BasePatrol03        = null
    rect                    gg_rct_BasePatrol04        = null
    rect                    gg_rct_CampfireControl     = null
    rect                    gg_rct_CutsceneHeroRevive  = null
    rect                    gg_rct_DoomhammersWolf     = null
    rect                    gg_rct_ElfBase             = null
    rect                    gg_rct_ElvenBase           = null
    rect                    gg_rct_Falstaaaad          = null
    rect                    gg_rct_GaronaCage          = null
    rect                    gg_rct_GaronaExit          = null
    rect                    gg_rct_IntroBlockers       = null
    rect                    gg_rct_IntroDH01           = null
    rect                    gg_rct_IntroDH02           = null
    rect                    gg_rct_IntroDH02Capture    = null
    rect                    gg_rct_IntroDH03B          = null
    rect                    gg_rct_IntroDR01           = null
    rect                    gg_rct_IntroDR02           = null
    rect                    gg_rct_IntroDR03           = null
    rect                    gg_rct_IntroDRGuardA01     = null
    rect                    gg_rct_IntroDRGuardA02     = null
    rect                    gg_rct_IntroDRGuardA03     = null
    rect                    gg_rct_IntroDRGuardB01     = null
    rect                    gg_rct_IntroDRGuardB02     = null
    rect                    gg_rct_IntroDRGuardB03     = null
    rect                    gg_rct_IntroEitrigg01      = null
    rect                    gg_rct_IntroEitrigg02      = null
    rect                    gg_rct_IntroEitrigg02Catch = null
    rect                    gg_rct_IntroEitrigg03      = null
    rect                    gg_rct_IntroEitriggCamera  = null
    rect                    gg_rct_IntroPeon01         = null
    rect                    gg_rct_IntroPeon02         = null
    rect                    gg_rct_IntroPig01          = null
    rect                    gg_rct_IntroPig02          = null
    rect                    gg_rct_IntroTharbek00      = null
    rect                    gg_rct_IntroTharbek01      = null
    rect                    gg_rct_IntroTharbek02      = null
    rect                    gg_rct_IntroTharbek03      = null
    rect                    gg_rct_IntroTharTurn       = null
    rect                    gg_rct_IntroTrollA00       = null
    rect                    gg_rct_IntroTrollA01       = null
    rect                    gg_rct_IntroTrollA02       = null
    rect                    gg_rct_IntroTrollB00       = null
    rect                    gg_rct_IntroTrollB01       = null
    rect                    gg_rct_IntroTrollB02       = null
    rect                    gg_rct_IntroUnits          = null
    rect                    gg_rct_IntroUtok01         = null
    rect                    gg_rct_IntroUtok02         = null
    rect                    gg_rct_IntroUtok03         = null
    rect                    gg_rct_IntroZuljin01       = null
    rect                    gg_rct_IntroZuljin02       = null
    rect                    gg_rct_IntroZuljin03       = null
    rect                    gg_rct_IntroZuljin04       = null
    rect                    gg_rct_KurdranMidOut       = null
    rect                    gg_rct_MidAlliance         = null
    rect                    gg_rct_MidAllianceSpawn00  = null
    rect                    gg_rct_MidAllianceSpawn01  = null
    rect                    gg_rct_MidAllianceSpawn02  = null
    rect                    gg_rct_MidAllianceSpawn03  = null
    rect                    gg_rct_MidAllianceSpawn04  = null
    rect                    gg_rct_MidAllianceSpawn05  = null
    rect                    gg_rct_MidAllianceSpawnGuard = null
    rect                    gg_rct_MidAnduin01         = null
    rect                    gg_rct_MidAnduin02         = null
    rect                    gg_rct_MidAnduin03         = null
    rect                    gg_rct_MidAnduin04         = null
    rect                    gg_rct_MidAnduin05         = null
    rect                    gg_rct_MidAnduin06         = null
    rect                    gg_rct_MidAnduin07         = null
    rect                    gg_rct_MidAnduinGuard01    = null
    rect                    gg_rct_MidAnduinGuard02    = null
    rect                    gg_rct_MidAnduinGuard03    = null
    rect                    gg_rct_MidAnduinGuard04    = null
    rect                    gg_rct_MidAnims01          = null
    rect                    gg_rct_MidCombat01         = null
    rect                    gg_rct_MidCombat02         = null
    rect                    gg_rct_MidDH01             = null
    rect                    gg_rct_MidDH02             = null
    rect                    gg_rct_MidDH03             = null
    rect                    gg_rct_MidDH04             = null
    rect                    gg_rct_MidDH05             = null
    rect                    gg_rct_MidDH06             = null
    rect                    gg_rct_MidDH07             = null
    rect                    gg_rct_MidDHFinalLines     = null
    rect                    gg_rct_MidDHGuard01        = null
    rect                    gg_rct_MidHeroExitFade     = null
    rect                    gg_rct_MidKurdran01        = null
    rect                    gg_rct_MidKurdran04        = null
    rect                    gg_rct_MidKurdran05        = null
    rect                    gg_rct_MidKurdran06        = null
    rect                    gg_rct_MidPlayerClear      = null
    rect                    gg_rct_MidWave01           = null
    rect                    gg_rct_MidWave01Check      = null
    rect                    gg_rct_MidWave02           = null
    rect                    gg_rct_MidWave02Check      = null
    rect                    gg_rct_MidWave03           = null
    rect                    gg_rct_MidWave03Check      = null
    rect                    gg_rct_MidZuljin01         = null
    rect                    gg_rct_MidZuljin02         = null
    rect                    gg_rct_MidZuljin03         = null
    rect                    gg_rct_MidZuljin04         = null
    rect                    gg_rct_MidZuljin05         = null
    rect                    gg_rct_MidZuljin06         = null
    rect                    gg_rct_MidZuljin07         = null
    rect                    gg_rct_OutroAnduin01       = null
    rect                    gg_rct_OutroAnduin02       = null
    rect                    gg_rct_OutroEitrigg01      = null
    rect                    gg_rct_OutroEitrigg02      = null
    rect                    gg_rct_OutroEitrigg03      = null
    rect                    gg_rct_OutroGarona01       = null
    rect                    gg_rct_OutroKurdran01      = null
    rect                    gg_rct_OutroKurdran02      = null
    rect                    gg_rct_OutroPlayerClear    = null
    rect                    gg_rct_OutroRocksHidden    = null
    rect                    gg_rct_OutroRocksMountain  = null
    rect                    gg_rct_OutroSappers01      = null
    rect                    gg_rct_OutroSappers02      = null
    rect                    gg_rct_OutroTarget         = null
    rect                    gg_rct_OutroVFX01          = null
    rect                    gg_rct_OutroVFX02          = null
    rect                    gg_rct_OutroVFX03          = null
    rect                    gg_rct_OutroVFX04          = null
    rect                    gg_rct_OutroVFX05          = null
    rect                    gg_rct_OutroVFX06          = null
    rect                    gg_rct_PlayerBase          = null
    rect                    gg_rct_PlayerRelocate      = null
    rect                    gg_rct_PlayerRelocateNoA   = null
    rect                    gg_rct_PlayerRelocateNoB   = null
    rect                    gg_rct_RedShirtGuyHiden    = null
    rect                    gg_rct_SnowedTrees01       = null
    rect                    gg_rct_SnowedTrees02       = null
    rect                    gg_rct_SnowedTrees03       = null
    rect                    gg_rct_SnowedTrees04       = null
    rect                    gg_rct_SnowedTrees05       = null
    rect                    gg_rct_SnowedTrees06       = null
    rect                    gg_rct_SnowedTrees07       = null
    rect                    gg_rct_SnowedTrees08       = null
    rect                    gg_rct_SurviveMarker       = null
    rect                    gg_rct_TrollBase01         = null
    rect                    gg_rct_TrollBase01VO       = null
    rect                    gg_rct_TrollBase02         = null
    rect                    gg_rct_TrollBase02VO       = null
    rect                    gg_rct_TrollBase03         = null
    rect                    gg_rct_TrollBase03Open     = null
    rect                    gg_rct_TrollBase03VO       = null
    rect                    gg_rct_TrollBase04         = null
    rect                    gg_rct_TrollBase04VO       = null
    rect                    gg_rct_TrollBase05         = null
    rect                    gg_rct_TrollBase05VO       = null
    rect                    gg_rct_TrollFade01         = null
    rect                    gg_rct_TrollFade02         = null
    rect                    gg_rct_TrollFade03         = null
    rect                    gg_rct_TrollFade04         = null
    rect                    gg_rct_TrollFade05         = null
    rect                    gg_rct_TrollFade06         = null
    rect                    gg_rct_TrollFade07         = null
    rect                    gg_rct_TrollFade08         = null
    rect                    gg_rct_TrollFade09         = null
    rect                    gg_rct_TrollFade10         = null
    rect                    gg_rct_TrollsExit          = null
    rect                    gg_rct_WildhammerBase01Blue = null
    rect                    gg_rct_WildhammerBase02Yellow = null
    rect                    gg_rct_WildhammerBase03Red = null
    rect                    gg_rct_WildhammerBase04Green = null
    rect                    gg_rct_WildhammerBase04GreenOpen = null
    rect                    gg_rct_WildhammerBaseDruids = null
    rect                    gg_rct_MidKurdran02        = null
    rect                    gg_rct_MidPlatforms        = null
    rect                    gg_rct_FailureAnduin       = null
    rect                    gg_rct_FailureArmyCreate   = null
    rect                    gg_rct_FailureArmyTarget   = null
    rect                    gg_rct_PeonBuildingCage    = null
    rect                    gg_rct_LoadDoomhammer      = null
    rect                    gg_rct_LoadZuljin          = null
    rect                    gg_rct_WaterSounds01       = null
    rect                    gg_rct_WaterfallSounds01   = null
    rect                    gg_rct_WaterfallSounds02   = null
    rect                    gg_rct_Watersounds02       = null
    rect                    gg_rct_Watersounds03       = null
    rect                    gg_rct_WaterfallSounds03   = null
    rect                    gg_rct_WaterfallSounds04   = null
    rect                    gg_rct_WaterfallSounds05   = null
    rect                    gg_rct_WaterfallSounds06   = null
    rect                    gg_rct_WaterfallSounds07   = null
    rect                    gg_rct_WaterfallSounds08   = null
    rect                    gg_rct_WaterfallSounds09   = null
    rect                    gg_rct_WaterfallSounds10   = null
    rect                    gg_rct_Watersounds04       = null
    rect                    gg_rct_Watersounds05       = null
    rect                    gg_rct_Watersounds06       = null
    rect                    gg_rct_BarrelsWIthExposives = null
    rect                    gg_rct_OrcsLeaving         = null
    rect                    gg_rct_FinalStandGrunt01   = null
    rect                    gg_rct_FinalStandGrunt02   = null
    rect                    gg_rct_FinalStandGrunt03   = null
    rect                    gg_rct_FinalStandGrunt04   = null
    rect                    gg_rct_FinalStandGrunt05   = null
    rect                    gg_rct_WaterfallFog01      = null
    rect                    gg_rct_OutroGarona00       = null
    rect                    gg_rct_VisibilityMod01     = null
    rect                    gg_rct_VisibilityMod02     = null
    rect                    gg_rct_VisibilityMod03     = null
    rect                    gg_rct_VisibilityMod04     = null
    rect                    gg_rct_VisibilityMod05     = null
    rect                    gg_rct_VisibilityMod06     = null
    rect                    gg_rct_VisibilityMod07     = null
    rect                    gg_rct_VisibilityMod08     = null
    rect                    gg_rct_VisibilityMod09     = null
    rect                    gg_rct_VisibilityMod10     = null
    rect                    gg_rct_VisibilityMod11     = null
    rect                    gg_rct_VisibilityMod12     = null
    rect                    gg_rct_VisibilityMod13     = null
    rect                    gg_rct_VisibilityMod14     = null
    camerasetup             gg_cam_EitrigWounded02     = null
    camerasetup             gg_cam_Camera_029          = null
    camerasetup             gg_cam_elven_city_01       = null
    camerasetup             gg_cam_elven_city_02       = null
    camerasetup             gg_cam_GaronaCam           = null
    camerasetup             gg_cam_Hinterlands_overview = null
    camerasetup             gg_cam_Intro01Pan01        = null
    camerasetup             gg_cam_Intro02Pan02        = null
    camerasetup             gg_cam_Intro03TaskMaster   = null
    camerasetup             gg_cam_Intro04ArrivalExit  = null
    camerasetup             gg_cam_Intro05Doomhammer   = null
    camerasetup             gg_cam_Intro06Rend         = null
    camerasetup             gg_cam_Intro07Group        = null
    camerasetup             gg_cam_Intro07ZJ           = null
    camerasetup             gg_cam_Intro09CageApproach = null
    camerasetup             gg_cam_Intro10Cage01       = null
    camerasetup             gg_cam_Intro10Cage02       = null
    camerasetup             gg_cam_Intro11             = null
    camerasetup             gg_cam_IntroDialogue       = null
    camerasetup             gg_cam_Mid01Oversee        = null
    camerasetup             gg_cam_Mid01OverseeB       = null
    camerasetup             gg_cam_Mid02               = null
    camerasetup             gg_cam_Mid03               = null
    camerasetup             gg_cam_MidOutro            = null
    camerasetup             gg_cam_Outro01             = null
    camerasetup             gg_cam_Outro02             = null
    camerasetup             gg_cam_Outro03             = null
    camerasetup             gg_cam_Mid04A              = null
    camerasetup             gg_cam_Mid04B              = null
    camerasetup             gg_cam_Mid05               = null
    camerasetup             gg_cam_Failure             = null
    camerasetup             gg_cam_EitrigWounded01     = null
    sound                   gg_snd_SecretFound         = null
    sound                   gg_snd_WC2Orc08SAmaniPriest1 = null
    sound                   gg_snd_WC2Orc08SAmaniPriest2 = null
    sound                   gg_snd_WC2Orc08SAmaniPriest3 = null
    sound                   gg_snd_WC2Orc08SDoomhammer1 = null
    sound                   gg_snd_WC2Orc08SDoomhammer10 = null
    sound                   gg_snd_WC2Orc08SDoomhammer11 = null
    sound                   gg_snd_WC2Orc08SDoomhammer12 = null
    sound                   gg_snd_WC2Orc08SDoomhammer2 = null
    sound                   gg_snd_WC2Orc08SDoomhammer3 = null
    sound                   gg_snd_WC2Orc08SDoomhammer4 = null
    sound                   gg_snd_WC2Orc08SDoomhammer5 = null
    sound                   gg_snd_WC2Orc08SDoomhammer6 = null
    sound                   gg_snd_WC2Orc08SDoomhammer7 = null
    sound                   gg_snd_WC2Orc08SDoomhammer8 = null
    sound                   gg_snd_WC2Orc08SEitrigg1   = null
    sound                   gg_snd_WC2Orc08SEitrigg2   = null
    sound                   gg_snd_WC2Orc08SEitrigg3   = null
    sound                   gg_snd_WC2Orc08SEitrigg4   = null
    sound                   gg_snd_WC2Orc08SEitrigg5   = null
    sound                   gg_snd_WC2Orc08SEitrigg6   = null
    sound                   gg_snd_WC2Orc08SElvenRanger1 = null
    sound                   gg_snd_WC2Orc08SFalstaaaaaaaad1 = null
    sound                   gg_snd_WC2Orc08SGarona1    = null
    sound                   gg_snd_WC2Orc08SGarona2    = null
    sound                   gg_snd_WC2Orc08SGoblinSappers1 = null
    sound                   gg_snd_WC2Orc08SGoblinSappers2 = null
    sound                   gg_snd_WC2Orc08SKurdran1   = null
    sound                   gg_snd_WC2Orc08SKurdran2   = null
    sound                   gg_snd_WC2Orc08SKurdran3   = null
    sound                   gg_snd_WC2Orc08SKurdran4   = null
    sound                   gg_snd_WC2Orc08SLothar1    = null
    sound                   gg_snd_WC2Orc08SLothar2    = null
    sound                   gg_snd_WC2Orc08SLothar3    = null
    sound                   gg_snd_WC2Orc08SLothar4    = null
    sound                   gg_snd_WC2Orc08SLothar5    = null
    sound                   gg_snd_WC2Orc08SRend1      = null
    sound                   gg_snd_WC2Orc08SRend2      = null
    sound                   gg_snd_WC2Orc08SRend3      = null
    sound                   gg_snd_WC2Orc08SRend4      = null
    sound                   gg_snd_WC2Orc08SRend5      = null
    sound                   gg_snd_WC2Orc08STharbek1   = null
    sound                   gg_snd_WC2Orc08STharbek2   = null
    sound                   gg_snd_WC2Orc08SWildhammerThane1 = null
    sound                   gg_snd_WC2Orc08SWildhammerThane2 = null
    sound                   gg_snd_WC2Orc08SZuljin1    = null
    sound                   gg_snd_WC2Orc08SZuljin2    = null
    sound                   gg_snd_WC2Orc08SZuljin3    = null
    sound                   gg_snd_WC2Orc08SZuljin6    = null
    sound                   gg_snd_WC2Orc08SZuljin7    = null
    sound                   gg_snd_WC2Orc08SEitrigg7   = null
    sound                   gg_snd_WC2Orc08SGarona3    = null
    sound                   gg_snd_GruntNoOil1         = null
    string                  gg_snd_OrcTheme1
    string                  gg_snd_OrcTheme2
    string                  gg_snd_OrcTheme3
    string                  gg_snd_OrcTheme4
    string                  gg_snd_OrcTheme5
    string                  gg_snd_OrcTheme7
    sound                   gg_snd_CS_H01b_Orc_gesture_v2 = null
    string                  gg_snd_DarkAgents
    sound                   gg_snd_DoorSlam1           = null
    sound                   gg_snd_CS_orc2_outro_rockfalls = null
    sound                   gg_snd_CS_orc2_outro_stomp = null
    sound                   gg_snd_WaterLakeLoop1      = null
    sound                   gg_snd_WaterStreamLoop1    = null
    sound                   gg_snd_WaterWaterFallLoop1 = null
    sound                   gg_snd_WC2Orc08SZuljin8    = null
    sound                   gg_snd_WC2Orc08SZuljin4    = null
    sound                   gg_snd_WC2Orc08SZuljin5    = null
    sound                   gg_snd_CS_H01b_group_walk_v2 = null
    sound                   gg_snd_CS_H01c_Arthas_horse_walks_out_v1 = null
    sound                   gg_snd_CS_HU_2_Intro_Foley2 = null
    sound                   gg_snd_CS_Prologue2_Foley1 = null
    sound                   gg_snd_CS_Prologue2_Foley2 = null
    sound                   gg_snd_CS_BG_Camp          = null
    sound                   gg_snd_CS_H01a_soldiers_walk_RtoL_a = null
    sound                   gg_snd_CS_Prologue2_Foley201 = null
    string                  gg_snd_OrcCinematicThemeTension
    sound                   gg_snd_ConstructionLoop1   = null
    sound                   gg_snd_ConstructionLoop101 = null
    sound                   gg_snd_ConstructionLoop102 = null
    sound                   gg_snd_Ability_ForTheHorde = null
    sound                   gg_snd_Ability_LocustJar   = null
    sound                   gg_snd_Ability_Tazdingo    = null
    sound                   gg_snd_TyrandePissed1      = null
    sound                   gg_snd_TyrandePissed3      = null
    sound                   gg_snd_TyrandePissed4      = null
    sound                   gg_snd_TyrandePissed5      = null
    trigger                 gg_trg_Unit_Event_Config   = null
    trigger                 gg_trg_Unit_Event          = null
    trigger                 gg_trg_SunderArmor         = null
    trigger                 gg_trg_HeavyHammersResearched = null
    trigger                 gg_trg_Mid                 = null
    trigger                 gg_trg_Outro               = null
    trigger                 gg_trg_HiddenUnitAssault   = null
    trigger                 gg_trg_KillUnit            = null
    trigger                 gg_trg_Failed              = null
    trigger                 gg_trg_PeonWeightOn        = null
    trigger                 gg_trg_PeonWeightOff       = null
    trigger                 gg_trg_PeonSwap            = null
    trigger                 gg_trg_OgreMagiUpgrade     = null
    trigger                 gg_trg_Creep_Multiplier    = null
    trigger                 gg_trg_Initialization      = null
    trigger                 gg_trg_FaceAnimLoader      = null
    trigger                 gg_trg_InitMusic           = null
    trigger                 gg_trg_SetupUnits          = null
    trigger                 gg_trg_LoadHeroes          = null
    trigger                 gg_trg_SetupQuests         = null
    trigger                 gg_trg_SetupVO             = null
    trigger                 gg_trg_SetupPlayers        = null
    trigger                 gg_trg_SetupDestructibles  = null
    trigger                 gg_trg_Neutral_Smart_Attack = null
    trigger                 gg_trg_LevelCap            = null
    trigger                 gg_trg_Easy                = null
    trigger                 gg_trg_Medium              = null
    trigger                 gg_trg_Hard                = null
    trigger                 gg_trg_SnowOn              = null
    trigger                 gg_trg_SnowOff             = null
    trigger                 gg_trg_SettlementsTimerCreate = null
    trigger                 gg_trg_SettlementsTimerDestroy = null
    trigger                 gg_trg_LodgeAttackTimerCreate = null
    trigger                 gg_trg_SurviveTimerCreate  = null
    trigger                 gg_trg_SurviveTimerDestroy = null
    trigger                 gg_trg_SurviveMusicTheme   = null
    trigger                 gg_trg_IntroCinQ           = null
    trigger                 gg_trg_IntroSkipped        = null
    trigger                 gg_trg_IntroCleanUp        = null
    trigger                 gg_trg_IntroDRPivot        = null
    trigger                 gg_trg_IntroDHPivot        = null
    trigger                 gg_trg_IntroUTPivot        = null
    trigger                 gg_trg_IntroZJPivot        = null
    trigger                 gg_trg_IntroTHPivot        = null
    trigger                 gg_trg_IntroGrunt01Pivot   = null
    trigger                 gg_trg_IntroGrunt02Pivot   = null
    trigger                 gg_trg_IntroTHAnim         = null
    trigger                 gg_trg_IntroT1Anim         = null
    trigger                 gg_trg_IntroT2Anim         = null
    trigger                 gg_trg_IntroPig            = null
    trigger                 gg_trg_IntroGroupExit      = null
    trigger                 gg_trg_IntroETMove         = null
    trigger                 gg_trg_IntroAnimReset      = null
    trigger                 gg_trg_MidCinQ             = null
    trigger                 gg_trg_MidSetup            = null
    trigger                 gg_trg_MidSkipped          = null
    trigger                 gg_trg_MidZuljinAnim       = null
    trigger                 gg_trg_MidCleanUp          = null
    trigger                 gg_trg_MidAnimReset        = null
    trigger                 gg_trg_MidChase            = null
    trigger                 gg_trg_MidInsurance        = null
    trigger                 gg_trg_MidHeroesAttack     = null
    trigger                 gg_trg_MidHeroesMove01     = null
    trigger                 gg_trg_MidHeroesMove02     = null
    trigger                 gg_trg_MidHeroesMove03Alliance = null
    trigger                 gg_trg_MidHeroesMove03Hoard = null
    trigger                 gg_trg_MidHeroesMove04     = null
    trigger                 gg_trg_OrcsLeavingWithDoomhammer = null
    trigger                 gg_trg_MidHeroesExit01Jass = null
    trigger                 gg_trg_MidHeroesExitOriginal = null
    trigger                 gg_trg_MidHeroLife         = null
    trigger                 gg_trg_MidSpawnControl     = null
    trigger                 gg_trg_MidSpawner          = null
    trigger                 gg_trg_MidSpawnOrder       = null
    trigger                 gg_trg_AllianceGuardReplace = null
    trigger                 gg_trg_OutroCinQ           = null
    trigger                 gg_trg_OutroSetup          = null
    trigger                 gg_trg_OutroSkipped        = null
    trigger                 gg_trg_OutroSway           = null
    trigger                 gg_trg_EitriggDeathSequence = null
    trigger                 gg_trg_FailureCinQ         = null
    trigger                 gg_trg_FailureSetup        = null
    trigger                 gg_trg_FailureArmyCreate   = null
    trigger                 gg_trg_FailureSkipped      = null
    trigger                 gg_trg_EitriggAquire       = null
    trigger                 gg_trg_EitriggLife         = null
    trigger                 gg_trg_Eitrigg_Patrol_A    = null
    trigger                 gg_trg_Eitrigg_Patrol_B    = null
    trigger                 gg_trg_Eitrigg_Patrol_C    = null
    trigger                 gg_trg_Eitrigg_Patrol_D    = null
    trigger                 gg_trg_ReturnEitrigToCamp  = null
    trigger                 gg_trg_EitrigKillsEnemies  = null
    trigger                 gg_trg_Garona_Patrol_A     = null
    trigger                 gg_trg_Garona_Patrol_B     = null
    trigger                 gg_trg_Garona_Patrol_C     = null
    trigger                 gg_trg_Garona_Patrol_D     = null
    trigger                 gg_trg_GaronaFlee          = null
    trigger                 gg_trg_GaronaExit          = null
    trigger                 gg_trg_GaronaClick         = null
    trigger                 gg_trg_GaronaClickResponse = null
    trigger                 gg_trg_Quests_Create       = null
    trigger                 gg_trg_Settlements_Discover_Q = null
    trigger                 gg_trg_Settlements_Update_Q = null
    trigger                 gg_trg_Settlements_Completed_Q = null
    trigger                 gg_trg_Settlements_Optional_Discover_Q = null
    trigger                 gg_trg_Settlements_Optional_Completed_Q = null
    trigger                 gg_trg_Settlements_Failed_Q = null
    trigger                 gg_trg_Trolls_Discover_Q   = null
    trigger                 gg_trg_Trolls_Update_Q     = null
    trigger                 gg_trg_Trolls_Completed_Q  = null
    trigger                 gg_trg_Trolls_Failed_Q     = null
    trigger                 gg_trg_Trolls_Optional_Discover_Q = null
    trigger                 gg_trg_Trolls_Optional_Update_Q = null
    trigger                 gg_trg_Trolls_Optional_Completed_Q = null
    trigger                 gg_trg_Trolls_Optional_Failed_Q = null
    trigger                 gg_trg_Elves_Discover_Q    = null
    trigger                 gg_trg_Elves_Completed_Q   = null
    trigger                 gg_trg_Survive_Discover_Q  = null
    trigger                 gg_trg_Survive_Update_Q    = null
    trigger                 gg_trg_Survive_Completed_Q = null
    trigger                 gg_trg_Survive_Failed_Q    = null
    trigger                 gg_trg_LodgeVOTrigger      = null
    trigger                 gg_trg_LodgeDestroyed      = null
    trigger                 gg_trg_SettlementCount     = null
    trigger                 gg_trg_Settement04GreenDiscoverDoor = null
    trigger                 gg_trg_Settlement04GreenDiscoverQuest = null
    trigger                 gg_trg_Settlement04GreenKill = null
    trigger                 gg_trg_SettementDruidsDiscoverDoor = null
    trigger                 gg_trg_HiddenPing01        = null
    trigger                 gg_trg_HiddenPing02        = null
    trigger                 gg_trg_TrollCount          = null
    trigger                 gg_trg_TrollRegion01       = null
    trigger                 gg_trg_TrollRegion02       = null
    trigger                 gg_trg_TrollRegion03       = null
    trigger                 gg_trg_TrollRegion04       = null
    trigger                 gg_trg_TrollRegion05       = null
    trigger                 gg_trg_TrollCamp03Open     = null
    trigger                 gg_trg_TrollCampDeath01    = null
    trigger                 gg_trg_TrollCampDeath02    = null
    trigger                 gg_trg_TrollCampDeath03    = null
    trigger                 gg_trg_TrollCampDeath04    = null
    trigger                 gg_trg_TrollCampDeath05    = null
    trigger                 gg_trg_TrollsExit01        = null
    trigger                 gg_trg_TrollsExit02        = null
    trigger                 gg_trg_TrollsExit03        = null
    trigger                 gg_trg_TrollsExit04        = null
    trigger                 gg_trg_TrollsExit05        = null
    trigger                 gg_trg_TrollsExit06        = null
    trigger                 gg_trg_TrollsExit07        = null
    trigger                 gg_trg_TrollsExit08        = null
    trigger                 gg_trg_TrollsExit09        = null
    trigger                 gg_trg_TrollsExit10        = null
    trigger                 gg_trg_EnoughTrolls        = null
    trigger                 gg_trg_TrollResetSounds    = null
    trigger                 gg_trg_TrollPlaySounds     = null
    trigger                 gg_trg_WildhammerAttackedVO = null
    trigger                 gg_trg_WilhammerVO01       = null
    trigger                 gg_trg_WilhammerVO02       = null
    trigger                 gg_trg_RedShirtGuyTriggered = null
    trigger                 gg_trg_WildhammerGreenVO   = null
    trigger                 gg_trg_RedShirtGuyHides    = null
    trigger                 gg_trg_LodgeIntroVO        = null
    trigger                 gg_trg_LodgeDestroyedVO    = null
    trigger                 gg_trg_TrollsAquiredVO1    = null
    trigger                 gg_trg_TrollsAquiredVO2    = null
    trigger                 gg_trg_TrollsAquiredVO3    = null
    trigger                 gg_trg_TrollsCompletedVO   = null
    trigger                 gg_trg_Goblins01VO         = null
    trigger                 gg_trg_Goblins02VO         = null
    trigger                 gg_trg_Garona01VO          = null
    trigger                 gg_trg_Garona02VO          = null
    trigger                 gg_trg_LodgeAttackTimerDestroy = null
    trigger                 gg_trg_LodgeAttackedStart  = null
    trigger                 gg_trg_LodgeAttackWaves    = null
    trigger                 gg_trg_LodgeAttackRecurring = null
    trigger                 gg_trg_ElvenTrollResponse01 = null
    trigger                 gg_trg_ElvenTrollResponse02 = null
    trigger                 gg_trg_ElvenTrollResponse03 = null
    trigger                 gg_trg_ElvenTrollResponse04 = null
    trigger                 gg_trg_ElvenTrollResponse05 = null
    trigger                 gg_trg_HiddenAssault       = null
    trigger                 gg_trg_SettlementsFailedAI = null
    trigger                 gg_trg_GryphonTraining     = null
    trigger                 gg_trg_GryphonTrained      = null
    trigger                 gg_trg_GryphonDies         = null
    trigger                 gg_trg_GryphonAttackWaveSend = null
    trigger                 gg_trg_PlayerBaseCount     = null
    trigger                 gg_trg_Next_Level_Prep     = null
    trigger                 gg_trg_Victory             = null
    trigger                 gg_trg_Defeat              = null
    trigger                 gg_trg_Glittering_Prizes   = null
    trigger                 gg_trg_Disco               = null
    trigger                 gg_trg_Deck_me_out         = null
    trigger                 gg_trg_Every_little_thing_she_does = null
    trigger                 gg_trg_Hatchet             = null
    trigger                 gg_trg_It_is_a_good_day_to_die = null
    trigger                 gg_trg_Make_it_so          = null
    trigger                 gg_trg_Noglues             = null
    trigger                 gg_trg_On_screen           = null
    trigger                 gg_trg_Showpath            = null
    trigger                 gg_trg_There_can_be_only_one = null
    trigger                 gg_trg_Unite_the_clans     = null
    trigger                 gg_trg_Tigerlily           = null
    trigger                 gg_trg_OilSpentForBuildings01 = null
    trigger                 gg_trg_OilSpentForBuildings02 = null
    trigger                 gg_trg_OilSpentForBuildings03 = null
    trigger                 gg_trg_OilSpentForBuildings04 = null
    trigger                 gg_trg_OilSpentForBuildings05 = null
    trigger                 gg_trg_OilReturnForBuildings01 = null
    trigger                 gg_trg_OilReturnForBuildings02 = null
    trigger                 gg_trg_OilReturnForBuildings03 = null
    trigger                 gg_trg_OilReturnForBuildings04 = null
    trigger                 gg_trg_OilReturnForBuildings05 = null
    trigger                 gg_trg_OilUIHide           = null
    trigger                 gg_trg_OilUIShow           = null
    trigger                 gg_trg_VisibilityMod01On   = null
    trigger                 gg_trg_VisibilityMod01Off  = null
    trigger                 gg_trg_VisibilityMod02On   = null
    trigger                 gg_trg_VisibilityMod02Off  = null
    trigger                 gg_trg_VisibilityMod03On   = null
    trigger                 gg_trg_VisibilityMod03Off  = null
    trigger                 gg_trg_VisibilityMod04On   = null
    trigger                 gg_trg_VisibilityMod04Off  = null
    trigger                 gg_trg_VisibilityMod05On   = null
    trigger                 gg_trg_VisibilityMod05Off  = null
    trigger                 gg_trg_VisibilityMod06On   = null
    trigger                 gg_trg_VisibilityMod06Off  = null
    trigger                 gg_trg_VisibilityMod07On   = null
    trigger                 gg_trg_VisibilityMod07Off  = null
    trigger                 gg_trg_VisibilityMod08On   = null
    trigger                 gg_trg_VisibilityMod08Off  = null
    trigger                 gg_trg_VisibilityMod09On   = null
    trigger                 gg_trg_VisibilityMod09Off  = null
    trigger                 gg_trg_VisibilityMod10On   = null
    trigger                 gg_trg_VisibilityMod10Off  = null
    trigger                 gg_trg_VisibilityMod11On   = null
    trigger                 gg_trg_VisibilityMod11Off  = null
    trigger                 gg_trg_VisibilityMod12On   = null
    trigger                 gg_trg_VisibilityMod12Off  = null
    trigger                 gg_trg_VisibilityMod13On   = null
    trigger                 gg_trg_VisibilityMod13Off  = null
    trigger                 gg_trg_VisibilityMod14On   = null
    trigger                 gg_trg_VisibilityMod14Off  = null
    trigger                 gg_trg_VisibilityMod15On   = null
    trigger                 gg_trg_VisibilityMod15Off  = null
    trigger                 gg_trg_VisibilityMod16On   = null
    trigger                 gg_trg_VisibilityMod16Off  = null
    trigger                 gg_trg_VisibilityMod17On   = null
    trigger                 gg_trg_VisibilityMod17Off  = null
    unit                    gg_unit_h60K_0310          = null
    unit                    gg_unit_o61I_0074          = null
    unit                    gg_unit_nfsh_0457          = null
    unit                    gg_unit_nfsh_0456          = null
    unit                    gg_unit_nfsh_0455          = null
    unit                    gg_unit_o619_0425          = null
    unit                    gg_unit_nspr_0105          = null
    unit                    gg_unit_h005_0108          = null
    unit                    gg_unit_h004_0111          = null
    unit                    gg_unit_h60K_0029          = null
    unit                    gg_unit_h60B_0268          = null
    unit                    gg_unit_h60K_0269          = null
    unit                    gg_unit_hcth_0237          = null
    unit                    gg_unit_h005_0027          = null
    unit                    gg_unit_h60B_0270          = null
    unit                    gg_unit_npig_0439          = null
    unit                    gg_unit_ngol_0122          = null
    unit                    gg_unit_h61I_0107          = null
    unit                    gg_unit_hbot_0115          = null
    unit                    gg_unit_n61N_0152          = null
    unit                    gg_unit_h60Z_0240          = null
    unit                    gg_unit_H62H_0260          = null
    unit                    gg_unit_h006_0363          = null
    unit                    gg_unit_h60Z_0241          = null
    unit                    gg_unit_ncop_0486          = null
    unit                    gg_unit_ncop_0487          = null
    unit                    gg_unit_h62A_0198          = null
    unit                    gg_unit_H61J_0057          = null
    unit                    gg_unit_ngsp_0234          = null
    unit                    gg_unit_h60K_0267          = null
    unit                    gg_unit_h60K_0262          = null
    unit                    gg_unit_h626_0248          = null
    unit                    gg_unit_ncop_0489          = null
    unit                    gg_unit_h006_0344          = null
    unit                    gg_unit_nfsh_0453          = null
    unit                    gg_unit_ncop_0272          = null
    unit                    gg_unit_edob_0039          = null
    unit                    gg_unit_hbot_0114          = null
    unit                    gg_unit_h60K_0311          = null
    unit                    gg_unit_h006_0364          = null
    unit                    gg_unit_o60D_0180          = null
    unit                    gg_unit_o60D_0422          = null
    unit                    gg_unit_o60D_0181          = null
    unit                    gg_unit_o60D_0423          = null
    unit                    gg_unit_o60D_0117          = null
    unit                    gg_unit_o608_0008          = null
    unit                    gg_unit_O61P_0009          = null
    unit                    gg_unit_o605_0010          = null
    unit                    gg_unit_O617_0011          = null
    unit                    gg_unit_O60B_0013          = null
    unit                    gg_unit_O602_0014          = null
    unit                    gg_unit_o619_0424          = null
    unit                    gg_unit_E602_0012          = null
    unit                    gg_unit_o60O_0435          = null
    unit                    gg_unit_o60O_0446          = null
    unit                    gg_unit_nfsh_0454          = null
    unit                    gg_unit_h005_0034          = null
    unit                    gg_unit_ncop_0488          = null
    unit                    gg_unit_ngsp_0232          = null
    unit                    gg_unit_nglm_0242          = null
    unit                    gg_unit_nglm_0255          = null
    unit                    gg_unit_nglm_0275          = null
    unit                    gg_unit_nglm_0276          = null
    unit                    gg_unit_nglm_0277          = null
    unit                    gg_unit_nglm_0278          = null
    unit                    gg_unit_nglm_0279          = null
    unit                    gg_unit_nglm_0285          = null
    unit                    gg_unit_h006_0288          = null
    unit                    gg_unit_h006_0289          = null
    unit                    gg_unit_h006_0291          = null
    unit                    gg_unit_h006_0294          = null
    unit                    gg_unit_h006_0297          = null
    unit                    gg_unit_h006_0298          = null
    unit                    gg_unit_h006_0299          = null
    unit                    gg_unit_h006_0300          = null
    unit                    gg_unit_h006_0302          = null
    unit                    gg_unit_h006_0305          = null
    unit                    gg_unit_h006_0313          = null
    unit                    gg_unit_h006_0315          = null
    unit                    gg_unit_h006_0330          = null
    unit                    gg_unit_h006_0341          = null
    unit                    gg_unit_h006_0343          = null
    destructable            gg_dest_VTlt_0194          = null
    destructable            gg_dest_VTlt_0196          = null
    destructable            gg_dest_B004_0095          = null
    destructable            gg_dest_B00C_6125          = null
    destructable            gg_dest_B00C_6124          = null
    destructable            gg_dest_B00C_6122          = null
    destructable            gg_dest_B00C_6121          = null
    destructable            gg_dest_B00C_6116          = null
    destructable            gg_dest_B00C_6113          = null
    destructable            gg_dest_B00C_6047          = null
    destructable            gg_dest_B00C_6025          = null
    destructable            gg_dest_B00C_6024          = null
    destructable            gg_dest_B00C_5922          = null
    destructable            gg_dest_B00C_5900          = null
    destructable            gg_dest_B00C_5899          = null
    destructable            gg_dest_B00C_0342          = null
    destructable            gg_dest_B00C_0304          = null
    destructable            gg_dest_OTip_3854          = null
    destructable            gg_dest_OTip_3853          = null
    destructable            gg_dest_OTip_3845          = null
    trigger                 gg_trg_Tharbek_I_Intimidating_Shout = null
    trigger                 gg_trg_Tharbek_I_Whiplash  = null
    trigger                 gg_trg_Zuljin_I_TazDingo   = null
    trigger                 gg_trg_Zuljin_I_Locust_Jar_I_Mana = null
    trigger                 gg_trg_Zuljin_I_Locust_Jar_I_Land = null
    trigger                 gg_trg_Zuljin_I_Locust_Jar_I_Launch = null
    trigger                 gg_trg_Zuljin_I_Grievous_Throw = null
    trigger                 gg_trg_Doohmammer_I_For_the_Horde = null
    trigger                 gg_trg_Doomhammer_I_Warbanner = null
    trigger                 gg_trg_Doomhammer_I_Doomstrike = null
endglobals

function InitGlobals takes nothing returns nothing
    local integer i = 0
    set udg_IntroCinematic = false
    set udg_IntroSkipped = false
    set udg_Intro_Units = CreateGroup()
    set udg_GameOver = false
    set udg_IntroShuffle = false
    set udg_AllianceArrivalTimer = CreateTimer()
    set udg_TrollRandomVO = 0
    set udg_ElvesTimer = CreateTimer()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_sampleText[i] = ""
        set i = i + 1
    endloop

    set udg_maxIndex = 0
    set udg_index = 0
    set udg_SettlementCount = 0
    set udg_SettlementDead01Blue = false
    set udg_SettlementDead02Yellow = false
    set udg_SettlementDead03Red = false
    set udg_SettlementDead04Green = false
    set udg_TrollCount = 0
    set udg_TrollCap01 = false
    set udg_TrollCap02 = false
    set udg_TrollCap03 = false
    set udg_TrollCap04 = false
    set udg_TrollCap05 = false
    set udg_MidCinematic = false
    set udg_MidSkipped = false
    set udg_Mid_Units = CreateGroup()
    set udg_Mid_Chase = CreateGroup()
    set udg_WaveStart = false
    set udg_HoardExitTimer = CreateTimer()
    set udg_MidKnightSkip = false
    set udg_TrollDeadCount = 0
    set udg_AllianceForces = CreateGroup()
    set udg_Selection_Player = CreateGroup()
    set udg_HiddenUnitTimer = CreateTimer()
    set udg_HiddenUnitsStart = false
    set udg_MidHeroesInsurance = CreateTimer()
    set udg_OutroCinematic = false
    set udg_EndingCancelled = false
    set udg_OutroSkipped = false
    set udg_OutroForce = CreateGroup()
    set udg_OutroForceB = CreateGroup()
    set udg_OutroHeroesHuman = CreateGroup()
    set udg_OutroHeroesOrc = CreateGroup()
    set udg_GAMEOVER = false
    set udg_FailReason = 0
    set udg_Failed = false
    set udg_Playlist = ""
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_CheckDeathInList[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_IsUnitTransforming[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UnitName[i] = ""
        set i = i + 1
    endloop

    set udg_UnitInActionEvent = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UnitInAction[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_IsUnitPreplaced[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UDexPrev[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UDexNext[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_IsUnitNew[i] = false
        set i = i + 1
    endloop

    set udg_WorldMaxY = 0
    set udg_WorldMaxX = 0
    set udg_UnitTypeEvent = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_IsUnitRemoved[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_CargoTransportGroup[i] = CreateGroup()
        set i = i + 1
    endloop

    set udg_CargoEvent = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_IsUnitBeingUnloaded[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_IsUnitReincarnating[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_CheckDeathList[i] = 0
        set i = i + 1
    endloop

    set udg_CheckDeathTimer = CreateTimer()
    set udg_DeathEvent = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_IsUnitAlive[i] = false
        set i = i + 1
    endloop

    set udg_UnitIndexEvent = 0
    set udg_UDexLastRecycled = 0
    set udg_UnitIndexerEnabled = false
    set udg_UDex = 0
    set udg_UDexMax = 0
    set udg_UnitIndexExEvent = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_IsUnitConstructing[i] = false
        set i = i + 1
    endloop

    set udg_ItIsAGoodDayToDie = false
    set udg_OnScreen = false
    set udg_Showpath = false
    set udg_Snowing = false
    set udg_LodgeWave = CreateGroup()
    set udg_LodgeWave_R = CreateGroup()
    set udg_FailureCinematic = false
    set udg_FailureSkipped = false
    set udg_Chance = 0
    set udg_VOChance = 0
    set udg_DoomhammersEscort = CreateGroup()
    set udg_EitrigPatrols = false
    set udg_SettlementTimerDifficultyLevel = 0
    set udg_GryphonAttackGroup = CreateGroup()
    set udg_GryphonWaveSize = 0
    set udg_GryphonsAttacking = false
    set udg_LastStandGrunts = CreateGroup()
    set udg_EitrigIsAttacked = false
    set udg_HeavyHammersResearched = false
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_VisibilityModOn[i] = false
        set i = i + 1
    endloop

    set udg_Neutral_Smart_Order = false
    set udg_CreepHP = 0
    set udg_CreepDMG = 0
    set udg_GaronaClickChance = 0
endfunction

//***************************************************************************
//*
//*  Custom Script Code
//*
//***************************************************************************
//***************************************************************************
//*  BlizzardMessage
library BlizzardMessage /* v1.0.0.4
*************************************************************************************
*
*   For creating Blizzard-like messages with a variety of sounds.
*
*************************************************************************************
*
*   Credits
*
*       Vexorian
*       -----------------------
*
*           The original SimError
*
*
*       Maker
*       -----------------------
*
*           Sound label help
*
************************************************************************************
*
*   Function
*   -----------------------
*
*        function BlizzardMessage takes string msg, string colorCode, integer soundLabel, player forPlayer returns nothing
*
*   Description
*   -----------------------
*
*       This function creates a Blizzard-like message with a sound for a player.
*
*   Takes
*   -----------------------
*
*       string msg
*           -   The message to be displayed.
*
*       string colorCode
*           -   Adds a color for the message through an ARBG color code. A null value creates a normal white text.
*      
*       integer soundLabel
*           -   The sound to be played.
*
*       player forPlayer
*           -   The player that receives the message.
*
*   Returns
*   -----------------------
*
*       nothing
*
*************************************************************************************
*
*   Function
*   -----------------------
*
*        function BlizzardMessageTimed takes string msg, string colorCode, real dur, integer soundLabel, player forPlayer returns nothing
*
*   Description
*   -----------------------
*
*       This function creates a timed Blizzard-like message with a sound for a player.
*
*   Takes
*   -----------------------
*
*       string msg
*           -   The message to be displayed.
*
*       string colorCode
*           -   Adds a color for the message through an ARBG color code. A null value creates a normal white text.
*
*       real dur
*           -   The duration of the message.
*
*       integer soundLabel
*           -   The sound to be played.
*
*       player forPlayer
*           -   The player that receives the message.
*
*   Returns
*   -----------------------
*
*       nothing
*
*************************************************************************************
*
*   SETTINGS
*   -----------------------
*
*/
    globals
   
        constant real MSG_DURATION = 2.00 //Message Duration
   
        /*************************************************************************************
        *
        *   Sound Labels
        *
        *************************************************************************************/
       
        constant integer ALLY_HERO_DIES_HUMAN = 0
        constant integer ALLY_HERO_DIES_NAGA = 1
        constant integer ALLY_HERO_DIES_NIGHTELF = 2
        constant integer ALLY_HERO_DIES_ORC = 3
        constant integer ALLY_HERO_DIES_UNDEAD = 4
        constant integer ALLY_TOWN_UNDER_ATTACK_HUMAN = 5
        constant integer ALLY_TOWN_UNDER_ATTACK_NAGA = 6
        constant integer ALLY_TOWN_UNDER_ATTACK_NIGHTELF = 7
        constant integer ALLY_TOWN_UNDER_ATTACK_ORC = 8
        constant integer ALLY_TOWN_UNDER_ATTACK_UNDEAD = 9
        constant integer ALLY_UNDER_ATTACK_HUMAN = 10
        constant integer ALLY_UNDER_ATTACK_NAGA = 11
        constant integer ALLY_UNDER_ATTACK_NIGHTELF = 12
        constant integer ALLY_UNDER_ATTACK_ORC = 13
        constant integer ALLY_UNDER_ATTACK_UNDEAD = 14
        constant integer ARRANGED_TEAM_INVITATION = 15
        constant integer AUTO_CAST_BUTTON_CLICK = 16
        constant integer CANT_PLACE_HUMAN = 17
        constant integer CANT_PLACE_NAGA = 18
        constant integer CANT_PLACE_NIGHTELF = 19
        constant integer CANT_PLACE_ORC = 20
        constant integer CANT_PLACE_UNDEAD = 21
        constant integer CANT_ROOT_NIGHTELF = 22
        constant integer CHATROOM_TIMER_TICK = 23
        constant integer CLAN_INVITATION = 24
        constant integer CONSTRUCTING_BUILDING_DEFAULT = 25
        constant integer CONSTRUCTING_BUILDING_NAGA = 26
        constant integer CONSTRUCTING_BUILDING_NIGHTELF = 27
        constant integer CONSTRUCTING_BUILDING_ORC = 28
        constant integer CONSTRUCTING_BUILDING_UNDEAD = 29
        constant integer CREEP_AGGRO = 30
        constant integer ERROR_MESSAGE = 31
        constant integer GAME_FOUND = 32
        constant integer GLUE_SCREEN_CLICK = 33
        constant integer GOLD_MINE_COLLAPSE_HUMAN = 34
        constant integer GOLD_MINE_COLLAPSE_NAGA = 35
        constant integer GOLD_MINE_COLLAPSE_NIGHTELF = 36
        constant integer GOLD_MINE_COLLAPSE_ORC = 37
        constant integer GOLD_MINE_COLLAPSE_UNDEAD = 38
        constant integer GOLD_MINE_LOW_GENERIC = 39
        constant integer GOLD_MINE_LOW_HUMAN = 40
        constant integer GOLD_MINE_LOW_NAGA = 41
        constant integer GOLD_MINE_LOW_NIGHTELF = 42
        constant integer GOLD_MINE_LOW_ORC = 43
        constant integer GOLD_MINE_LOW_UNDEAD = 44
        constant integer GOOD_JOB = 45
        constant integer HERO_DIES_GENERIC = 46
        constant integer HERO_DIES_HUMAN = 47
        constant integer HERO_DIES_NAGA = 48
        constant integer HERO_DIES_NIGHTELF = 49
        constant integer HERO_DIES_ORC = 50
        constant integer HERO_DIES_UNDEAD = 51
        constant integer HINT = 52
        constant integer IN_GAME_CHAT_WHAT = 53
        constant integer INTERFACE_CLICK = 54
        constant integer INTERFACE_ERROR = 55
        constant integer INVENTORY_FULL_HUMAN = 56
        constant integer INVENTORY_FULL_NAGA = 57
        constant integer INVENTORY_FULL_NIGHTELF = 58
        constant integer INVENTORY_FULL_ORC = 59
        constant integer INVENTORY_FULL_UNDEAD = 60
        constant integer ITEM_DROP = 61
        constant integer ITEM_GET = 62
        constant integer ITEM_REWARD = 63
        constant integer JOB_DONE_SOUND_HUMAN = 64
        constant integer JOB_DONE_SOUND_NAGA = 65
        constant integer JOB_DONE_SOUND_NIGHTELF = 66
        constant integer JOB_DONE_SOUND_ORC = 67
        constant integer JOB_DONE_SOUND_UNDEAD = 68
        constant integer MAP_PING = 69
        constant integer MENU_BUTTON_CLICK = 70
        constant integer NEW_TOURNAMENT = 71
        constant integer NO_FOOD_HUMAN = 72
        constant integer NO_FOOD_NAGA = 73
        constant integer NO_FOOD_NIGHTELF = 74
        constant integer NO_FOOD_ORC = 75
        constant integer NO_FOOD_UNDEAD = 76
        constant integer NO_GOLD_GENERIC = 77
        constant integer NO_GOLD_HUMAN = 78
        constant integer NO_GOLD_NAGA = 79
        constant integer NO_GOLD_NIGHTELF = 80
        constant integer NO_GOLD_ORC = 81
        constant integer NO_GOLD_UNDEAD = 82
        constant integer NO_LUMBER_HUMAN = 83
        constant integer NO_LUMBER_NAGA = 84
        constant integer NO_LUMBER_NIGHTELF = 85
        constant integer NO_LUMBER_ORC = 86
        constant integer NO_LUMBER_UNDEAD = 87
        constant integer NO_MANA_GENERIC = 88
        constant integer NO_MANA_HUMAN = 89
        constant integer NO_MANA_NAGA = 90
        constant integer NO_MANA_NIGHTELF = 91
        constant integer NO_MANA_ORC = 92
        constant integer NO_MANA_UNDEAD = 93
        constant integer OFF_BLIGHT_UNDEAD = 94
        constant integer PAUSE_GAME = 95
        constant integer PLACE_BUILDING_DEFAULT = 96
        constant integer QUEST_COMPLETED = 97
        constant integer QUEST_FAILED = 98
        constant integer QUEST_LOG_MODIFIED = 99
        constant integer QUEST_NEW = 100
        constant integer QUEST_UPDATE = 101
        constant integer RALLY_POINT_PLACE = 102
        constant integer RESCUE = 103
        constant integer RESEARCH_COMPLETE_GENERIC = 104
        constant integer RESEARCH_COMPLETE_HUMAN = 105
        constant integer RESEARCH_COMPLETE_NAGA = 106
        constant integer RESEARCH_COMPLETE_NIGHTELF = 107
        constant integer RESEARCH_COMPLETE_ORC = 108
        constant integer RESEARCH_COMPLETE_UNDEAD = 109
        constant integer SCORE_SCREEN_TAB_CLICK = 110
        constant integer SECRET_FOUND = 111
        constant integer SUB_GROUP_SELECTION_CHANGE = 112
        constant integer TOWN_ATTACK_GENERIC = 113
        constant integer TOWN_ATTACK_HUMAN = 114
        constant integer TOWN_ATTACK_NAGA = 115
        constant integer TOWN_ATTACK_NIGHTELF = 116
        constant integer TOWN_ATTACK_ORC = 117
        constant integer TOWN_ATTACK_UNDEAD = 118
        constant integer UNDER_ATTACK_HUMAN = 119
        constant integer UNDER_ATTACK_NAGA = 120
        constant integer UNDER_ATTACK_NIGHTELF = 121
        constant integer UNDER_ATTACK_ORC = 122
        constant integer UNDER_ATTACK_UNDEAD = 123
        constant integer UPGRADE_COMPLETE_GENERIC = 124
        constant integer UPGRADE_COMPLETE_HUMAN = 125
        constant integer UPGRADE_COMPLETE_NAGA = 126
        constant integer UPGRADE_COMPLETE_NIGHTELF = 127
        constant integer UPGRADE_COMPLETE_ORC = 128
        constant integer UPGRADE_COMPLETE_UNDEAD = 129
        constant integer UPKEEP_LEVEL = 130
        constant integer WARNING = 131
        constant integer WAYPOINT = 132
   
        /* private */ string array SOUND_LABEL
    endglobals
   
/*
************************************************************************************
*/

    function BlizzardMessage takes string msg, string colorCode, integer soundLabel, player forPlayer returns nothing
        local sound snd
        local string s
   
        debug if soundLabel >= 0 and soundLabel <= 132 and forPlayer != null then
       
            set snd = CreateSoundFromLabel (SOUND_LABEL[soundLabel], false, false, false, 10, 10)
           
            if colorCode != null then
                set s = "|r"
            else
                set colorCode = ""
                set s = ""
            endif
           
            if GetLocalPlayer () == forPlayer then
                call ClearTextMessages ()
                call DisplayTimedTextToPlayer (forPlayer, 0.52, 0.96, MSG_DURATION, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n" + colorCode + msg + s)
                call StartSound (snd)
            endif
           
            if s != null then
                set s = ""
            endif
           
            set snd = null
           
        debug else
            debug if msg == null then
                debug call DisplayTimedTextToPlayer(GetLocalPlayer(), 0, 0, 60, "[BlizzardMessage] [BlizzardMessage] Null message")
            debug endif            
            debug if forPlayer == null then
                debug call DisplayTimedTextToPlayer(GetLocalPlayer(), 0, 0, 60, "[BlizzardMessage] [BlizzardMessage] Null forPlayer")
            debug endif
            debug if soundLabel < 0 or soundLabel > 132 then
                debug call DisplayTimedTextToPlayer(GetLocalPlayer(), 0, 0, 60, "[BlizzardMessage] [BlizzardMessage] Invalid sound label")
            debug endif
        debug endif
    endfunction
   
    function BlizzardMessageTimed takes string msg, string colorCode, real dur, integer soundLabel, player forPlayer returns nothing
        local sound snd
        local string s
   
        debug if soundLabel >= 0 and soundLabel <= 132 and forPlayer != null then
       
            set snd = CreateSoundFromLabel (SOUND_LABEL[soundLabel], false, false, false, 10, 10)
           
            if colorCode != null then
                set s = "|r"
            else
                set colorCode = ""
                set s = ""
            endif
           
            if GetLocalPlayer () == forPlayer then
                call ClearTextMessages ()
                call DisplayTimedTextToPlayer (forPlayer, 0.52, 0.96, dur, "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n" + colorCode + msg + s)
                call StartSound (snd)
            endif
           
            if s != null then
                set s = ""
            endif
           
            set snd = null
           
        debug else
            debug if msg == null then
                debug call DisplayTimedTextToPlayer(GetLocalPlayer(), 0, 0, 60, "[BlizzardMessage] [BlizzardMessage] Null message")
            debug endif            
            debug if forPlayer == null then
                debug call DisplayTimedTextToPlayer(GetLocalPlayer(), 0, 0, 60, "[BlizzardMessage] [BlizzardMessage] Null forPlayer")
            debug endif
            debug if soundLabel < 0 or soundLabel > 132 then
                debug call DisplayTimedTextToPlayer(GetLocalPlayer(), 0, 0, 60, "[BlizzardMessage] [BlizzardMessage] Invalid sound label")
            debug endif
        debug endif
    endfunction

    private module BMInit
        private static method onInit takes nothing returns nothing
            call init()
        endmethod
    endmodule
   
    private struct InitStruct extends array
        private static method init takes nothing returns nothing
            set SOUND_LABEL[0] = "AllyHeroDiesHuman"
            set SOUND_LABEL[1] = "AllyHeroDiesNaga"
            set SOUND_LABEL[2] = "AllyHeroDiesNightElf"
            set SOUND_LABEL[3] = "AllyHeroDiesOrc"
            set SOUND_LABEL[4] = "AllyHeroDiesUndead"
            set SOUND_LABEL[5] = "AllyTownUnderAttackHuman"
            set SOUND_LABEL[6] = "AllyTownUnderAttackNaga"
            set SOUND_LABEL[7] = "AllyTownUnderAttackNightElf"
            set SOUND_LABEL[8] = "AllyTownUnderAttackOrc"
            set SOUND_LABEL[9] = "AllyTownUnderAttackUndead"
            set SOUND_LABEL[10] = "AllyUnderAttackHuman"
            set SOUND_LABEL[11] = "AllyUnderAttackNaga"
            set SOUND_LABEL[12] = "AllyUnderAttackNightElf"
            set SOUND_LABEL[13] = "AllyUnderAttackOrc"
            set SOUND_LABEL[14] = "AllyUnderAttackUndead"
            set SOUND_LABEL[15] = "ArrangedTeamInvitation"
            set SOUND_LABEL[16] = "AutoCastButtonClick"
            set SOUND_LABEL[17] = "CantPlaceHuman"
            set SOUND_LABEL[18] = "CantPlaceNaga"
            set SOUND_LABEL[19] = "CantPlaceNightElf"
            set SOUND_LABEL[20] = "CantPlaceOrc"
            set SOUND_LABEL[21] = "CantPlaceUndead"
            set SOUND_LABEL[22] = "CantRootNightElf"
            set SOUND_LABEL[23] = "ChatroomTimerTick"
            set SOUND_LABEL[24] = "ClanInvitation"
            set SOUND_LABEL[25] = "ConstructingBuildingDefault"
            set SOUND_LABEL[26] = "ConstructingBuildingNaga"
            set SOUND_LABEL[27] = "ConstructingBuildingNightElf"
            set SOUND_LABEL[28] = "ConstructingBuildingOrc"
            set SOUND_LABEL[29] = "ConstructingBuildingUndead"
            set SOUND_LABEL[30] = "CreepAggro"
            set SOUND_LABEL[31] = "ErrorMessage"
            set SOUND_LABEL[32] = "GameFound"
            set SOUND_LABEL[33] = "GlueScreenClick"
            set SOUND_LABEL[34] = "GoldMineCollapseHuman"
            set SOUND_LABEL[35] = "GoldMineCollapseNaga"
            set SOUND_LABEL[36] = "GoldMineCollapseNightElf"
            set SOUND_LABEL[37] = "GoldMineCollapseOrc"
            set SOUND_LABEL[38] = "GoldMineCollapseUndead"
            set SOUND_LABEL[39] = "GoldMineLowGeneric"
            set SOUND_LABEL[40] = "GoldMineLowHuman"
            set SOUND_LABEL[41] = "GoldMineLowNaga"
            set SOUND_LABEL[42] = "GoldMineLowNightElf"
            set SOUND_LABEL[43] = "GoldMineLowOrc"
            set SOUND_LABEL[44] = "GoldMineLowUndead"
            set SOUND_LABEL[45] = "GoodJob"
            set SOUND_LABEL[46] = "HeroDiesGeneric"
            set SOUND_LABEL[47] = "HeroDiesHuman"
            set SOUND_LABEL[48] = "HeroDiesNaga"
            set SOUND_LABEL[49] = "HeroDiesNightElf"
            set SOUND_LABEL[50] = "HeroDiesOrc"
            set SOUND_LABEL[51] = "HeroDiesUndead"
            set SOUND_LABEL[52] = "Hint"
            set SOUND_LABEL[53] = "InGameChatWhat"
            set SOUND_LABEL[54] = "InterfaceClick"
            set SOUND_LABEL[55] = "InterfaceError"
            set SOUND_LABEL[56] = "InventoryFullHuman"
            set SOUND_LABEL[57] = "InventoryFullNaga"
            set SOUND_LABEL[58] = "InventoryFullNightElf"
            set SOUND_LABEL[59] = "InventoryFullOrc"
            set SOUND_LABEL[60] = "InventoryFullUndead"
            set SOUND_LABEL[61] = "ItemDrop"
            set SOUND_LABEL[62] = "ItemGet"
            set SOUND_LABEL[63] = "ItemReward"
            set SOUND_LABEL[64] = "JobDoneSoundHuman"
            set SOUND_LABEL[65] = "JobDoneSoundNaga"
            set SOUND_LABEL[66] = "JobDoneSoundNightElf"
            set SOUND_LABEL[67] = "JobDoneSoundOrc"
            set SOUND_LABEL[68] = "JobDoneSoundUndead"
            set SOUND_LABEL[69] = "MapPing"
            set SOUND_LABEL[70] = "MenuButtonClick"
            set SOUND_LABEL[71] = "NewTournament"
            set SOUND_LABEL[72] = "NoFoodHuman"
            set SOUND_LABEL[73] = "NoFoodNaga"
            set SOUND_LABEL[74] = "NoFoodNightElf"
            set SOUND_LABEL[75] = "NoFoodOrc"
            set SOUND_LABEL[76] = "NoFoodUndead"
            set SOUND_LABEL[77] = "NoGoldGeneric"
            set SOUND_LABEL[78] = "NoGoldHuman"
            set SOUND_LABEL[79] = "NoGoldNaga"
            set SOUND_LABEL[80] = "NoGoldNightElf"
            set SOUND_LABEL[81] = "NoGoldOrc"
            set SOUND_LABEL[82] = "NoGoldUndead"
            set SOUND_LABEL[83] = "NoLumberHuman"
            set SOUND_LABEL[84] = "NoLumberNaga"
            set SOUND_LABEL[85] = "NoLumberNightElf"
            set SOUND_LABEL[86] = "NoLumberOrc"
            set SOUND_LABEL[87] = "NoLumberUndead"
            set SOUND_LABEL[88] = "NoManaGeneric"
            set SOUND_LABEL[89] = "NoManaHuman"
            set SOUND_LABEL[90] = "NoManaNaga"
            set SOUND_LABEL[91] = "NoManaNightElf"
            set SOUND_LABEL[92] = "NoManaOrc"
            set SOUND_LABEL[93] = "NoManaUndead"
            set SOUND_LABEL[94] = "OffBlightUndead"
            set SOUND_LABEL[95] = "PauseGame"
            set SOUND_LABEL[96] = "PlaceBuildingDefault"
            set SOUND_LABEL[97] = "QuestCompleted"
            set SOUND_LABEL[98] = "QuestFailed"
            set SOUND_LABEL[99] = "QuestLogModified"
            set SOUND_LABEL[100] = "QuestNew"
            set SOUND_LABEL[101] = "QuestUpdate"
            set SOUND_LABEL[102] = "RallyPointPlace"
            set SOUND_LABEL[103] = "Rescue"
            set SOUND_LABEL[104] = "ResearchCompleteGeneric"
            set SOUND_LABEL[105] = "ResearchCompleteHuman"
            set SOUND_LABEL[106] = "ResearchCompleteNaga"
            set SOUND_LABEL[107] = "ResearchCompleteNightElf"
            set SOUND_LABEL[108] = "ResearchCompleteOrc"
            set SOUND_LABEL[109] = "ResearchCompleteUndead"
            set SOUND_LABEL[110] = "ScoreScreenTabClick"
            set SOUND_LABEL[111] = "SecretFound"
            set SOUND_LABEL[112] = "SubGroupSelectionChange"
            set SOUND_LABEL[113] = "TownAttackGeneric"
            set SOUND_LABEL[114] = "TownAttackHuman"
            set SOUND_LABEL[115] = "TownAttackNaga"
            set SOUND_LABEL[116] = "TownAttackNightElf"
            set SOUND_LABEL[117] = "TownAttackOrc"
            set SOUND_LABEL[118] = "TownAttackUndead"
            set SOUND_LABEL[119] = "UnderAttackHuman"
            set SOUND_LABEL[120] = "UnderAttackNaga"
            set SOUND_LABEL[121] = "UnderAttackNightElf"
            set SOUND_LABEL[122] = "UnderAttackOrc"
            set SOUND_LABEL[123] = "UnderAttackUndead"
            set SOUND_LABEL[124] = "UpgradeCompleteGeneric"
            set SOUND_LABEL[125] = "UpgradeCompleteHuman"
            set SOUND_LABEL[126] = "UpgradeCompleteNaga"
            set SOUND_LABEL[127] = "UpgradeCompleteNightElf"
            set SOUND_LABEL[128] = "UpgradeCompleteOrc"
            set SOUND_LABEL[129] = "UpgradeCompleteUndead"
            set SOUND_LABEL[130] = "UpkeepLevel"
            set SOUND_LABEL[131] = "Warning"
            set SOUND_LABEL[132] = "WayPoint"
        endmethod
   
        implement BMInit
    endstruct
endlibrary
//***************************************************************************
//*  ConstructEvent
/*****************************************************************************
*
*    ConstructEvent v2.2.0.1
*       by Bannar
*
*    NB: This has been modified to use GUI Unit Event as a dependency rather than UnitDex
*
*    Provides complete solution to construction events.
*    Allows to retrieve unit which actually started construction of given structure.
*
******************************************************************************
*
*    Requirements:
*
*       RegisterPlayerUnitEvent by Bannar
*          hiveworkshop.com/threads/snippet-registerevent-pack.250266/
*
*       ListT by Bannar
*          hiveworkshop.com/threads/containers-list-t.249011/
*
*       GUI Unit Event by Bribe
*          hiveworkshop.com/threads/gui-unit-event-v2-5-2-0.201641/
*
******************************************************************************
*
*    Event API:
*
*       integer EVENT_UNIT_CONSTRUCTION_START
*
*       integer EVENT_UNIT_CONSTRUCTION_CANCEL
*          Intentional construction stop.
*
*       integer EVENT_UNIT_CONSTRUCTION_FINISH
*
*       integer EVENT_UNIT_CONSTRUCTION_INTERRUPT
*          Undesired construction stop e.g. unit death.
*
*       Use RegisterNativeEvent or RegisterIndexNativeEvent for event registration.
*       GetNativeEventTrigger and GetIndexNativeEventTrigger provide access to trigger handles.
*
*
*       function GetConstructingBuilder takes nothing returns unit
*          Retrieves event builder unit, valid only for START event.
*
*       function GetConstructingBuilderId takes nothing returns integer
*          Returns index of builder unit.
*
*       function GetTriggeringStructure takes nothing returns unit
*          Retrieves event structure unit.
*
*       function GetTriggeringStructureId takes nothing returns integer
*          Returns index of constructed structure unit.
*
******************************************************************************
*
*    Functions:
*
*       function GetStructureBuilder takes unit whichUnit returns unit
*          Gets unit which constructed given structure.
*
*       function GetStructureBuilderById takes integer whichIndex returns unit
*          Gets unit which constructed given structure.
*
*       function IsStructureFinished takes unit whichUnit returns boolean
*          Checks whether construction of provided structure has been completed.
*
*****************************************************************************/
library ConstructEvent requires RegisterPlayerUnitEvent, ListT

globals
    integer EVENT_UNIT_CONSTRUCTION_START
    integer EVENT_UNIT_CONSTRUCTION_FINISH
    integer EVENT_UNIT_CONSTRUCTION_CANCEL
    integer EVENT_UNIT_CONSTRUCTION_INTERRUPT
endglobals

native UnitAlive takes unit id returns boolean

globals
    private IntegerList ongoing = 0
    private timer looper = CreateTimer()
    private unit eventBuilder = null
    private unit eventConstruct = null

    private unit array builders
    private boolean array finished
    private integer array instances
    private boolean array cancelled
endglobals

function GetUnitId takes unit u returns integer
    return GetUnitUserData(u)
endfunction

function GetConstructingBuilder takes nothing returns unit
    return eventBuilder
endfunction

function GetConstructingBuilderId takes nothing returns integer
    return GetUnitId(eventBuilder)
endfunction

function GetTriggeringStructure takes nothing returns unit
    return eventConstruct
endfunction

function GetTriggeringStructureId takes nothing returns integer
    return GetUnitId(eventConstruct)
endfunction

function GetStructureBuilder takes unit whichUnit returns unit
    return builders[GetUnitId(whichUnit)]
endfunction

function GetStructureBuilderById takes integer whichIndex returns unit
    return builders[whichIndex]
endfunction

function IsStructureFinished takes unit whichUnit returns boolean
    return finished[GetUnitId(whichUnit)]
endfunction

private function FireEvent takes integer evt, unit builder, unit structure returns nothing
    local unit prevBuilder = eventBuilder
    local unit prevConstruct = eventConstruct
    local integer playerId = GetPlayerId(GetOwningPlayer(builder))

    set eventBuilder = builder
    set eventConstruct = structure

    call TriggerEvaluate(GetNativeEventTrigger(evt))
    if IsNativeEventRegistered(playerId, evt) then
        call TriggerEvaluate(GetIndexNativeEventTrigger(playerId, evt))
    endif

    set eventBuilder = prevBuilder
    set eventConstruct = prevConstruct
    set prevBuilder = null
    set prevConstruct = null
endfunction

/*
*  Unit with no path-texture can be placed in 'arbitrary' location, that is, its x and y
*  won't have integral values. Whatmore, those values will be modified, depending on quarter of
*  coordinate axis where unit is going to be built. This takes form of rounding up and down to
*  0.250-floor.
*
*  Calculus is different for positive (+x/+y) and negative values (-x/-y).
*  This function makes sure data is translated accordingly.
*/
private function TranslateXY takes real r returns real
    if r >= 0 then
        return R2I(r / 0.250) * 0.250
    else
        return (R2I(r / 0.250) - 1) * 0.250
    endif
endfunction

/*
*  Whether issued order can be counted as a build-ability order. Accounts for:
*  orders between useslot1 and useslot6, plus build tiny building - item ability.
*  Build type: start and forget, just like undead Acolytes do.
*/
private function IsBuildOrder takes integer o returns boolean
    return (o >= 852008 and o <= 852013) or (o == 852619)
endfunction

/*
*  On the contrary to what's described in TranslateXY regarding building position,
*  builder will have his coords "almost" unchanged. This creates situation
*  where builder and construct do not share the same location (x & y).
*
*  Additionally, builder's coords will differ from order's by a small margin. It could be
*  negligible if not for the fact that difference can be greater than or equal to 0.001.
*  In consequence, this invalidates usage of '==' operator when comparing coords
*  (i. e. jass reals - 3 significant digits displayed).
*/
private function IsUnitWithinCoords takes unit u, real x, real y returns boolean
    return (RAbsBJ(GetUnitX(u) - x) == 0) and (RAbsBJ(GetUnitY(u) - y) == 0)
endfunction

private struct PeriodicData extends array
    unit builder     // unit which started construction
    race btype       // build-type, race dependant
    real cx          // future construction point x
    real cy          // future construction point y
    real distance    // for distance measurement, UD/HUM only
    integer order    // unit-type order id
    real ox          // order point x
    real oy          // order point y

    implement Alloc

    method destroy takes nothing returns nothing
        set instances[GetUnitId(builder)] = 0
        set builder = null
        set btype = null

        call ongoing.erase(ongoing.find(this))
        if ongoing.empty() then
            call PauseTimer(looper)
        endif

        call deallocate()
    endmethod

    static method create takes thistype this, unit u, integer orderId, boolean flag, real x, real y returns thistype
        if this == 0 then
            set this = allocate()
            set builder = u
            set instances[GetUnitId(u)] = this
            call ongoing.push(this)
        endif

        set order = orderId
        if flag then // ability based build order
            set btype = RACE_UNDEAD
        else
            set btype = GetUnitRace(builder)
        endif

        set cx = x
        set cy = y
        set ox = cx
        set oy = cy

        if cx - I2R(R2I(cx)) != 0 then
            set cx = TranslateXY(cx)
        endif
        if cy - I2R(R2I(cy)) != 0 then
            set cy = TranslateXY(cy)
        endif

        return this
    endmethod
endstruct

private function OnCallback takes nothing returns nothing
    local IntegerListItem iter = ongoing.first
    local PeriodicData obj
    local real dx
    local real dy

    loop
        exitwhen iter == 0
        set obj = iter.data

        if not UnitAlive(obj.builder) then
            call obj.destroy()
        elseif obj.btype == RACE_UNDEAD or obj.btype == RACE_HUMAN then
            set dx = obj.cx - GetUnitX(obj.builder)
            set dy = obj.cy - GetUnitY(obj.builder)
            set obj.distance = dx*dx + dy*dy
        endif

        set iter = iter.next
    endloop
endfunction

private function OnNonPointOrder takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local unit target = GetOrderTargetUnit()
    local integer index = GetUnitId(u)
    local integer orderId = GetIssuedOrderId()
    local PeriodicData obj = instances[index]

    // Non handle-type orders usually take 852XXX form and are below 900000
    if orderId > 900000 and target != null then
        if ongoing.empty() then
            call TimerStart(looper, 0.031250000, true, function OnCallback)
        endif
        call PeriodicData.create(obj, u, orderId, true, GetUnitX(target), GetUnitY(target))

        set target =  null
    elseif obj != 0 then
        call obj.destroy()
    elseif orderId == 851976 and builders[index] != null and not finished[index] then // order cancel
        if not IsUnitType(u, UNIT_TYPE_STRUCTURE) then
            set cancelled[index] = true
            call FireEvent(EVENT_UNIT_CONSTRUCTION_CANCEL, null, u)
        endif
    endif

    set u = null
endfunction

private function OnPointOrder takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local integer orderId = GetIssuedOrderId()
    local PeriodicData obj = instances[GetUnitId(u)]
    local boolean isBuildOrder = IsBuildOrder(orderId)

    // Non handle-type orders usually take 852XXX form and are below 900000
    if orderId > 900000 or isBuildOrder then
        if ongoing.empty() then
            call TimerStart(looper, 0.031250000, true, function OnCallback)
        endif
        call PeriodicData.create(obj, u, orderId, isBuildOrder, GetOrderPointX(), GetOrderPointY())
    elseif obj != 0 then
        call obj.destroy()
    endif

    set u = null
endfunction

private function OnConstructCancel takes nothing returns nothing
    local unit u = GetTriggerUnit()

    set cancelled[GetUnitId(u)] = true
    call FireEvent(EVENT_UNIT_CONSTRUCTION_CANCEL, null, u)

    set u = null
endfunction

private function OnConstructFinish takes nothing returns nothing
    local unit u = GetTriggerUnit()

    set finished[GetUnitId(u)] = true
    call FireEvent(EVENT_UNIT_CONSTRUCTION_FINISH, null, u)

    set u = null
endfunction

private function OnIndex takes nothing returns nothing
    local unit u = udg_UDexUnits[udg_UDex]
    local integer id = GetUnitTypeId(u)
    local IntegerListItem iter = ongoing.first
    local PeriodicData obj
    local PeriodicData found = 0
    local real d = 1000000

    loop
        exitwhen iter == 0
        set obj = iter.data

        if obj.order == id or IsBuildOrder(obj.order) then
            if obj.cx == GetUnitX(u) and obj.cy == GetUnitY(u) then
                if obj.btype == RACE_HUMAN or obj.btype == RACE_UNDEAD then
                    if obj.distance < d then
                        set d = obj.distance
                        set found = obj
                    endif
                elseif IsUnitWithinCoords(obj.builder, obj.ox, obj.oy) then
                    set found = obj
                    exitwhen true
                endif
            endif
        endif

        set iter = iter.next
    endloop

    if found != 0 then
        set builders[udg_UDex] = found.builder
        call FireEvent(EVENT_UNIT_CONSTRUCTION_START, found.builder, u)
        call found.destroy()
    endif

    set u = null
endfunction

private function OnDeindex takes nothing returns nothing
    local integer index = udg_UDex

    if instances[index] != 0 then
        call PeriodicData(instances[index]).destroy()
    elseif builders[index] != null then
        if not (finished[index] or cancelled[index]) then
            call FireEvent(EVENT_UNIT_CONSTRUCTION_INTERRUPT, null, udg_UDexUnits[udg_UDex])
        endif

        set builders[index] = null
        set finished[index] = false
        set cancelled[index] = false
    endif
endfunction

private module ConstructEventInit
    private static method onInit takes nothing returns nothing
        local trigger trigIndex = CreateTrigger()
        local trigger trigDeindex = CreateTrigger()

        set EVENT_UNIT_CONSTRUCTION_START = CreateNativeEvent()
        set EVENT_UNIT_CONSTRUCTION_CANCEL = CreateNativeEvent()
        set EVENT_UNIT_CONSTRUCTION_FINISH = CreateNativeEvent()
        set EVENT_UNIT_CONSTRUCTION_INTERRUPT = CreateNativeEvent()
        set START = EVENT_UNIT_CONSTRUCTION_START
        set CANCEL = EVENT_UNIT_CONSTRUCTION_CANCEL
        set FINISH = EVENT_UNIT_CONSTRUCTION_FINISH
        set INTERRUPT = EVENT_UNIT_CONSTRUCTION_INTERRUPT

        set ongoing = IntegerList.create()

        call RegisterAnyPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER, function OnNonPointOrder)
        call RegisterAnyPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER, function OnPointOrder)
        call RegisterAnyPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_ORDER, function OnNonPointOrder)
        call RegisterAnyPlayerUnitEvent(EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL, function OnConstructCancel)
        call RegisterAnyPlayerUnitEvent(EVENT_PLAYER_UNIT_CONSTRUCT_FINISH, function OnConstructFinish)

        call TriggerRegisterVariableEvent(trigIndex, "udg_UnitIndexEvent", EQUAL, 1.00)
        call TriggerAddCondition(trigIndex, function OnIndex)
        set trigIndex = null

        call TriggerRegisterVariableEvent(trigDeindex, "udg_UnitIndexEvent", EQUAL, 2.00)
        call TriggerAddCondition(trigDeindex, function OnDeindex)
        set trigDeindex = null

        // call OnUnitIndex(function OnIndex)
        // call OnUnitDeindex(function OnDeindex)
        //call RegisterUnitIndexEvent(Condition(function OnIndex), EVENT_UNIT_INDEX)
        //call RegisterUnitIndexEvent(Condition(function OnDeindex), EVENT_UNIT_DEINDEX)
    endmethod
endmodule

struct ConstructEvent
    readonly static integer START
    readonly static integer CANCEL
    readonly static integer FINISH
    readonly static integer INTERRUPT

    implement ConstructEventInit
endstruct

function GetEventBuilder takes nothing returns unit
    debug call DisplayTimedTextToPlayer(GetLocalPlayer(),0,0,60,"Function GetEventBuilder is obsolete, use GetContructingBuilder instead.")
    return GetConstructingBuilder()
endfunction

function GetEventBuilderId takes nothing returns integer
    debug call DisplayTimedTextToPlayer(GetLocalPlayer(),0,0,60,"Function GetEventBuilderId is obsolete, use GetContructingBuilderId instead.")
    return GetConstructingBuilderId()
endfunction

function GetEventStructure takes nothing returns unit
    debug call DisplayTimedTextToPlayer(GetLocalPlayer(),0,0,60,"Function GetEventStructure is obsolete, use GetContructedStructure instead.")
    return GetTriggeringStructure()
endfunction

function GetEventStructureId takes nothing returns integer
    debug call DisplayTimedTextToPlayer(GetLocalPlayer(),0,0,60,"Function GetEventStructureId is obsolete, use GetContructedStructureId instead.")
    return GetTriggeringStructureId()
endfunction

function RegisterConstructEvent takes code func, integer whichEvent returns nothing
    debug call DisplayTimedTextToPlayer(GetLocalPlayer(),0,0,60,"Function RegisterConstructEvent is obsolete, use RegisterNativeEvent instead.")
    call RegisterNativeEvent(whichEvent, func)
endfunction

function GetConstructEventTrigger takes integer whichEvent returns trigger
    debug call DisplayTimedTextToPlayer(GetLocalPlayer(),0,0,60,"Function GetConstructEventTrigger is obsolete, use GetIndexNativeEventTrigger instead.")
    return GetNativeEventTrigger(whichEvent)
endfunction

endlibrary
//***************************************************************************
//*  Table
library Table /* made by Bribe, special thanks to Vexorian & Nestharus, version 4.1.0.1.
    
    One map, one hashtable. Welcome to NewTable 4.1.0.1
    
    This newest iteration of Table introduces the new HashTable struct.
    You can now instantiate HashTables which enables the use of large
    parent and large child keys, just like a standard hashtable. Previously,
    the user would have to instantiate a Table to do this on their own which -
    while doable - is something the user should not have to do if I can add it
    to this resource myself (especially if they are inexperienced).
    
    This library was originally called NewTable so it didn't conflict with
    the API of Table by Vexorian. However, the damage is done and it's too
    late to change the library name now. To help with damage control, I
    have provided an extension library called TableBC, which bridges all
    the functionality of Vexorian's Table except for 2-D string arrays &
    the ".flush(integer)" method. I use ".flush()" to flush a child hash-
    table, because I wanted the API in NewTable to reflect the API of real
    hashtables (I thought this would be more intuitive).
    
    API
    
    ------------
    struct Table
    | static method create takes nothing returns Table
    |     create a new Table
    |    
    | method destroy takes nothing returns nothing
    |     destroy it
    |    
    | method flush takes nothing returns nothing
    |     flush all stored values inside of it
    |    
    | method remove takes integer key returns nothing
    |     remove the value at index "key"
    |    
    | method operator []= takes integer key, $TYPE$ value returns nothing
    |     assign "value" to index "key"
    |    
    | method operator [] takes integer key returns $TYPE$
    |     load the value at index "key"
    |    
    | method has takes integer key returns boolean
    |     whether or not the key was assigned
    |
    ----------------
    struct TableArray
    | static method operator [] takes integer array_size returns TableArray
    |     create a new array of Tables of size "array_size"
    |
    | method destroy takes nothing returns nothing
    |     destroy it
    |
    | method flush takes nothing returns nothing
    |     flush and destroy it
    |
    | method operator size takes nothing returns integer
    |     returns the size of the TableArray
    |
    | method operator [] takes integer key returns Table
    |     returns a Table accessible exclusively to index "key"
*/
    
globals
    private integer less = 0    //Index generation for TableArrays (below 0).
    private integer more = 8190 //Index generation for Tables.
    //Configure it if you use more than 8190 "key" variables in your map (this will never happen though).
    
    private hashtable ht = InitHashtable()
    private key sizeK
    private key listK
endglobals
    
private struct dex extends array
    static method operator size takes nothing returns Table
        return sizeK
    endmethod
    static method operator list takes nothing returns Table
        return listK
    endmethod
endstruct
    
private struct handles extends array
    method has takes integer key returns boolean
        return HaveSavedHandle(ht, this, key)
    endmethod
    method remove takes integer key returns nothing
        call RemoveSavedHandle(ht, this, key)
    endmethod
endstruct
    
private struct agents extends array
    method operator []= takes integer key, agent value returns nothing
        call SaveAgentHandle(ht, this, key, value)
    endmethod
endstruct
    
//! textmacro NEW_ARRAY_BASIC takes SUPER, FUNC, TYPE
private struct $TYPE$s extends array
    method operator [] takes integer key returns $TYPE$
        return Load$FUNC$(ht, this, key)
    endmethod
    method operator []= takes integer key, $TYPE$ value returns nothing
        call Save$FUNC$(ht, this, key, value)
    endmethod
    method has takes integer key returns boolean
        return HaveSaved$SUPER$(ht, this, key)
    endmethod
    method remove takes integer key returns nothing
        call RemoveSaved$SUPER$(ht, this, key)
    endmethod
endstruct
private module $TYPE$m
    method operator $TYPE$ takes nothing returns $TYPE$s
        return this
    endmethod
endmodule
//! endtextmacro
    
//! textmacro NEW_ARRAY takes FUNC, TYPE
private struct $TYPE$s extends array
    method operator [] takes integer key returns $TYPE$
        return Load$FUNC$Handle(ht, this, key)
    endmethod
    method operator []= takes integer key, $TYPE$ value returns nothing
        call Save$FUNC$Handle(ht, this, key, value)
    endmethod
    method has takes integer key returns boolean
        return HaveSavedHandle(ht, this, key)
    endmethod
    method remove takes integer key returns nothing
        call RemoveSavedHandle(ht, this, key)
    endmethod
endstruct
private module $TYPE$m
    method operator $TYPE$ takes nothing returns $TYPE$s
        return this
    endmethod
endmodule
//! endtextmacro
    
//Run these textmacros to include the entire hashtable API as wrappers.
//Don't be intimidated by the number of macros - Vexorian's map optimizer is
//supposed to kill functions which inline (all of these functions inline).
//! runtextmacro NEW_ARRAY_BASIC("Real", "Real", "real")
//! runtextmacro NEW_ARRAY_BASIC("Boolean", "Boolean", "boolean")
//! runtextmacro NEW_ARRAY_BASIC("String", "Str", "string")
//New textmacro to allow table.integer[] syntax for compatibility with textmacros that might desire it.
//! runtextmacro NEW_ARRAY_BASIC("Integer", "Integer", "integer")
    
//! runtextmacro NEW_ARRAY("Player", "player")
//! runtextmacro NEW_ARRAY("Widget", "widget")
//! runtextmacro NEW_ARRAY("Destructable", "destructable")
//! runtextmacro NEW_ARRAY("Item", "item")
//! runtextmacro NEW_ARRAY("Unit", "unit")
//! runtextmacro NEW_ARRAY("Ability", "ability")
//! runtextmacro NEW_ARRAY("Timer", "timer")
//! runtextmacro NEW_ARRAY("Trigger", "trigger")
//! runtextmacro NEW_ARRAY("TriggerCondition", "triggercondition")
//! runtextmacro NEW_ARRAY("TriggerAction", "triggeraction")
//! runtextmacro NEW_ARRAY("TriggerEvent", "event")
//! runtextmacro NEW_ARRAY("Force", "force")
//! runtextmacro NEW_ARRAY("Group", "group")
//! runtextmacro NEW_ARRAY("Location", "location")
//! runtextmacro NEW_ARRAY("Rect", "rect")
//! runtextmacro NEW_ARRAY("BooleanExpr", "boolexpr")
//! runtextmacro NEW_ARRAY("Sound", "sound")
//! runtextmacro NEW_ARRAY("Effect", "effect")
//! runtextmacro NEW_ARRAY("UnitPool", "unitpool")
//! runtextmacro NEW_ARRAY("ItemPool", "itempool")
//! runtextmacro NEW_ARRAY("Quest", "quest")
//! runtextmacro NEW_ARRAY("QuestItem", "questitem")
//! runtextmacro NEW_ARRAY("DefeatCondition", "defeatcondition")
//! runtextmacro NEW_ARRAY("TimerDialog", "timerdialog")
//! runtextmacro NEW_ARRAY("Leaderboard", "leaderboard")
//! runtextmacro NEW_ARRAY("Multiboard", "multiboard")
//! runtextmacro NEW_ARRAY("MultiboardItem", "multiboarditem")
//! runtextmacro NEW_ARRAY("Trackable", "trackable")
//! runtextmacro NEW_ARRAY("Dialog", "dialog")
//! runtextmacro NEW_ARRAY("Button", "button")
//! runtextmacro NEW_ARRAY("TextTag", "texttag")
//! runtextmacro NEW_ARRAY("Lightning", "lightning")
//! runtextmacro NEW_ARRAY("Image", "image")
//! runtextmacro NEW_ARRAY("Ubersplat", "ubersplat")
//! runtextmacro NEW_ARRAY("Region", "region")
//! runtextmacro NEW_ARRAY("FogState", "fogstate")
//! runtextmacro NEW_ARRAY("FogModifier", "fogmodifier")
//! runtextmacro NEW_ARRAY("Hashtable", "hashtable")
    
struct Table extends array
    
    // Implement modules for intuitive syntax (tb.handle; tb.unit; etc.)
    implement realm
    implement integerm
    implement booleanm
    implement stringm
    implement playerm
    implement widgetm
    implement destructablem
    implement itemm
    implement unitm
    implement abilitym
    implement timerm
    implement triggerm
    implement triggerconditionm
    implement triggeractionm
    implement eventm
    implement forcem
    implement groupm
    implement locationm
    implement rectm
    implement boolexprm
    implement soundm
    implement effectm
    implement unitpoolm
    implement itempoolm
    implement questm
    implement questitemm
    implement defeatconditionm
    implement timerdialogm
    implement leaderboardm
    implement multiboardm
    implement multiboarditemm
    implement trackablem
    implement dialogm
    implement buttonm
    implement texttagm
    implement lightningm
    implement imagem
    implement ubersplatm
    implement regionm
    implement fogstatem
    implement fogmodifierm
    implement hashtablem
    
    method operator handle takes nothing returns handles
        return this
    endmethod
    
    method operator agent takes nothing returns agents
        return this
    endmethod
    
    //set this = tb[GetSpellAbilityId()]
    method operator [] takes integer key returns Table
        return LoadInteger(ht, this, key) //return this.integer[key]
    endmethod
    
    //set tb[389034] = 8192
    method operator []= takes integer key, Table tb returns nothing
        call SaveInteger(ht, this, key, tb) //set this.integer[key] = tb
    endmethod
    
    //set b = tb.has(2493223)
    method has takes integer key returns boolean
        return HaveSavedInteger(ht, this, key) //return this.integer.has(key)
    endmethod
    
    //call tb.remove(294080)
    method remove takes integer key returns nothing
        call RemoveSavedInteger(ht, this, key) //call this.integer.remove(key)
    endmethod
    
    //Remove all data from a Table instance
    method flush takes nothing returns nothing
        call FlushChildHashtable(ht, this)
    endmethod
    
    //local Table tb = Table.create()
    static method create takes nothing returns Table
        local Table this = dex.list[0]
        
        if this == 0 then
            set this = more + 1
            set more = this
        else
            set dex.list[0] = dex.list[this]
            call dex.list.remove(this) //Clear hashed memory
        endif
        
        debug set dex.list[this] = -1
        return this
    endmethod
    
    // Removes all data from a Table instance and recycles its index.
    //
    //     call tb.destroy()
    //
    method destroy takes nothing returns nothing
        debug if dex.list[this] != -1 then
            debug call BJDebugMsg("Table Error: Tried to double-free instance: " + I2S(this))
            debug return
        debug endif
        
        call this.flush()
        
        set dex.list[this] = dex.list[0]
        set dex.list[0] = this
    endmethod
    
    //! runtextmacro optional TABLE_BC_METHODS()
endstruct
    
//! runtextmacro optional TABLE_BC_STRUCTS()
    
struct TableArray extends array
    
    //Returns a new TableArray to do your bidding. Simply use:
    //
    //    local TableArray ta = TableArray[array_size]
    //
    static method operator [] takes integer array_size returns TableArray
        local Table tb = dex.size[array_size] //Get the unique recycle list for this array size
        local TableArray this = tb[0]         //The last-destroyed TableArray that had this array size
        
        debug if array_size <= 0 then
            debug call BJDebugMsg("TypeError: Invalid specified TableArray size: " + I2S(array_size))
            debug return 0
        debug endif
        
        if this == 0 then
            set this = less - array_size
            set less = this
        else
            set tb[0] = tb[this]  //Set the last destroyed to the last-last destroyed
            call tb.remove(this)  //Clear hashed memory
        endif
        
        set dex.size[this] = array_size //This remembers the array size
        return this
    endmethod
    
    //Returns the size of the TableArray
    method operator size takes nothing returns integer
        return dex.size[this]
    endmethod
    
    //This magic method enables two-dimensional[array][syntax] for Tables,
    //similar to the two-dimensional utility provided by hashtables them-
    //selves.
    //
    //ta[integer a].unit[integer b] = unit u
    //ta[integer a][integer c] = integer d
    //
    //Inline-friendly when not running in debug mode
    //
    method operator [] takes integer key returns Table
        static if DEBUG_MODE then
            local integer i = this.size
            if i == 0 then
                call BJDebugMsg("IndexError: Tried to get key from invalid TableArray instance: " + I2S(this))
                return 0
            elseif key < 0 or key >= i then
                call BJDebugMsg("IndexError: Tried to get key [" + I2S(key) + "] from outside TableArray bounds: " + I2S(i))
                return 0
            endif
        endif
        return this + key
    endmethod
    
    //Destroys a TableArray without flushing it; I assume you call .flush()
    //if you want it flushed too. This is a public method so that you don't
    //have to loop through all TableArray indices to flush them if you don't
    //need to (ie. if you were flushing all child-keys as you used them).
    //
    method destroy takes nothing returns nothing
        local Table tb = dex.size[this.size]
        
        debug if this.size == 0 then
            debug call BJDebugMsg("TypeError: Tried to destroy an invalid TableArray: " + I2S(this))
            debug return
        debug endif
        
        if tb == 0 then
            //Create a Table to index recycled instances with their array size
            set tb = Table.create()
            set dex.size[this.size] = tb
        endif
        
        call dex.size.remove(this) //Clear the array size from hash memory
        
        set tb[this] = tb[0]
        set tb[0] = this
    endmethod
    
    private static Table tempTable
    private static integer tempEnd
    
    //Avoids hitting the op limit
    private static method clean takes nothing returns nothing
        local Table tb = .tempTable
        local integer end = tb + 0x1000
        if end < .tempEnd then
            set .tempTable = end
            call ForForce(bj_FORCE_PLAYER[0], function thistype.clean)
        else
            set end = .tempEnd
        endif
        loop
            call tb.flush()
            set tb = tb + 1
            exitwhen tb == end
        endloop
    endmethod
    
    //Flushes the TableArray and also destroys it. Doesn't get any more
    //similar to the FlushParentHashtable native than this.
    //
    method flush takes nothing returns nothing
        debug if this.size == 0 then
            debug call BJDebugMsg("TypeError: Tried to flush an invalid TableArray instance: " + I2S(this))
            debug return
        debug endif
        set .tempTable = this
        set .tempEnd = this + this.size
        call ForForce(bj_FORCE_PLAYER[0], function thistype.clean)
        call this.destroy()
    endmethod
    
endstruct
    
//NEW: Added in Table 4.0. A fairly simple struct but allows you to do more
//than that which was previously possible.
struct HashTable extends array

    //Enables myHash[parentKey][childKey] syntax.
    //Basically, it creates a Table in the place of the parent key if
    //it didn't already get created earlier.
    method operator [] takes integer index returns Table
        local Table t = Table(this)[index]
        if t == 0 then
            set t = Table.create()
            set Table(this)[index] = t //whoops! Forgot that line. I'm out of practice!
        endif
        return t
    endmethod

    //You need to call this on each parent key that you used if you
    //intend to destroy the HashTable or simply no longer need that key.
    method remove takes integer index returns nothing
        local Table t = Table(this)[index]
        if t != 0 then
            call t.destroy()
            call Table(this).remove(index)
        endif
    endmethod
    
    //Added in version 4.1
    method has takes integer index returns boolean
        return Table(this).has(index)
    endmethod
    
    //HashTables are just fancy Table indices.
    method destroy takes nothing returns nothing
        call Table(this).destroy()
    endmethod
    
    //Like I said above...
    static method create takes nothing returns thistype
        return Table.create()
    endmethod

endstruct

endlibrary
//***************************************************************************
//*  TimerUtils
library TimerUtils initializer init
//*********************************************************************
//* TimerUtils (red+blue+orange flavors for 1.24b+) 2.0
//* ----------
//*
//*  To implement it , create a custom text trigger called TimerUtils
//* and paste the contents of this script there.
//*
//*  To copy from a map to another, copy the trigger holding this
//* library to your map.
//*
//* (requires vJass)   More scripts: htt://www.wc3c.net
//*
//* For your timer needs:
//*  * Attaching
//*  * Recycling (with double-free protection)
//*
//* set t=NewTimer()      : Get a timer (alternative to CreateTimer)
//* set t=NewTimerEx(x)   : Get a timer (alternative to CreateTimer), call
//*                            Initialize timer data as x, instead of 0.
//*
//* ReleaseTimer(t)       : Relese a timer (alt to DestroyTimer)
//* SetTimerData(t,2)     : Attach value 2 to timer
//* GetTimerData(t)       : Get the timer's value.
//*                         You can assume a timer's value is 0
//*                         after NewTimer.
//*
//* Multi-flavor:
//*    Set USE_HASH_TABLE to true if you don't want to complicate your life.
//*
//* If you like speed and giberish try learning about the other flavors.
//*
//********************************************************************

//================================================================
    globals
        //How to tweak timer utils:
        // USE_HASH_TABLE = true  (new blue)
        //  * SAFEST
        //  * SLOWEST (though hash tables are kind of fast)
        //
        // USE_HASH_TABLE = false, USE_FLEXIBLE_OFFSET = true  (orange)
        //  * kinda safe (except there is a limit in the number of timers)
        //  * ALMOST FAST
        //
        // USE_HASH_TABLE = false, USE_FLEXIBLE_OFFSET = false (red)
        //  * THE FASTEST (though is only  faster than the previous method
        //                  after using the optimizer on the map)
        //  * THE LEAST SAFE ( you may have to tweak OFSSET manually for it to
        //                     work)
        //
        private constant boolean USE_HASH_TABLE      = true
        private constant boolean USE_FLEXIBLE_OFFSET = false

        private constant integer OFFSET     = 0x100000
        private          integer VOFFSET    = OFFSET
              
        //Timers to preload at map init:
        private constant integer QUANTITY   = 256
        
        //Changing this  to something big will allow you to keep recycling
        // timers even when there are already AN INCREDIBLE AMOUNT of timers in
        // the stack. But it will make things far slower so that's probably a bad idea...
        private constant integer ARRAY_SIZE = 8190

    endglobals

    //==================================================================================================
    globals
        private integer array data[ARRAY_SIZE]
        private hashtable     ht
    endglobals
    
    

    //It is dependent on jasshelper's recent inlining optimization in order to perform correctly.
    function SetTimerData takes timer t, integer value returns nothing
        static if(USE_HASH_TABLE) then
            // new blue
            call SaveInteger(ht,0,GetHandleId(t), value)
            
        elseif (USE_FLEXIBLE_OFFSET) then
            // orange
            static if (DEBUG_MODE) then
                if(GetHandleId(t)-VOFFSET<0) then
                    call BJDebugMsg("SetTimerData: Wrong handle id, only use SetTimerData on timers created by NewTimer")
                endif
            endif
            set data[GetHandleId(t)-VOFFSET]=value
        else
            // new red
            static if (DEBUG_MODE) then
                if(GetHandleId(t)-OFFSET<0) then
                    call BJDebugMsg("SetTimerData: Wrong handle id, only use SetTimerData on timers created by NewTimer")
                endif
            endif
            set data[GetHandleId(t)-OFFSET]=value
        endif        
    endfunction

    function GetTimerData takes timer t returns integer
        static if(USE_HASH_TABLE) then
            // new blue
            return LoadInteger(ht,0,GetHandleId(t) )
            
        elseif (USE_FLEXIBLE_OFFSET) then
            // orange
            static if (DEBUG_MODE) then
                if(GetHandleId(t)-VOFFSET<0) then
                    call BJDebugMsg("SetTimerData: Wrong handle id, only use SetTimerData on timers created by NewTimer")
                endif
            endif
            return data[GetHandleId(t)-VOFFSET]
        else
            // new red
            static if (DEBUG_MODE) then
                if(GetHandleId(t)-OFFSET<0) then
                    call BJDebugMsg("SetTimerData: Wrong handle id, only use SetTimerData on timers created by NewTimer")
                endif
            endif
            return data[GetHandleId(t)-OFFSET]
        endif        
    endfunction

    //==========================================================================================
    globals
        private timer array tT[ARRAY_SIZE]
        private integer tN = 0
        private constant integer HELD=0x28829022
        //use a totally random number here, the more improbable someone uses it, the better.
        
        private boolean       didinit = false
    endglobals
    private keyword init

    //==========================================================================================
    // I needed to decide between duplicating code ignoring the "Once and only once" rule
    // and using the ugly textmacros. I guess textmacros won.
    //
    //! textmacro TIMERUTIS_PRIVATE_NewTimerCommon takes VALUE
    // On second thought, no.
    //! endtextmacro

    function NewTimerEx takes integer value returns timer
        if (tN==0) then
            if (not didinit) then 
                //This extra if shouldn't represent a major performance drawback
                //because QUANTITY rule is not supposed to be broken every day. 
                call init.evaluate()
                set tN = tN - 1
            else
                //If this happens then the QUANTITY rule has already been broken, try to fix the
                // issue, else fail.
                debug call BJDebugMsg("NewTimer: Warning, Exceeding TimerUtils_QUANTITY, make sure all timers are getting recycled correctly")
                set tT[0]=CreateTimer()
                static if( not USE_HASH_TABLE) then
                    debug call BJDebugMsg("In case of errors, please increase it accordingly, or set TimerUtils_USE_HASH_TABLE to true")
                    static if( USE_FLEXIBLE_OFFSET) then
                        if (GetHandleId(tT[0])-VOFFSET<0) or (GetHandleId(tT[0])-VOFFSET>=ARRAY_SIZE) then
                            //all right, couldn't fix it
                            call BJDebugMsg("NewTimer: Unable to allocate a timer, you should probably set TimerUtils_USE_HASH_TABLE to true or fix timer leaks.")
                            return null
                        endif
                    else
                        if (GetHandleId(tT[0])-OFFSET<0) or (GetHandleId(tT[0])-OFFSET>=ARRAY_SIZE) then
                            //all right, couldn't fix it
                            call BJDebugMsg("NewTimer: Unable to allocate a timer, you should probably set TimerUtils_USE_HASH_TABLE to true or fix timer leaks.")
                            return null
                        endif
                    endif
                endif
            endif
        else
            set tN=tN-1
        endif
        call SetTimerData(tT[tN],value)
     return tT[tN]
    endfunction
    
    function NewTimer takes nothing returns timer
        return NewTimerEx(0)
    endfunction


    //==========================================================================================
    function ReleaseTimer takes timer t returns nothing
        if(t==null) then
            debug call BJDebugMsg("Warning: attempt to release a null timer")
            return
        endif
        if (tN==ARRAY_SIZE) then
            debug call BJDebugMsg("Warning: Timer stack is full, destroying timer!!")

            //stack is full, the map already has much more troubles than the chance of bug
            call DestroyTimer(t)
        else
            call PauseTimer(t)
            if(GetTimerData(t)==HELD) then
                debug call BJDebugMsg("Warning: ReleaseTimer: Double free!")
                return
            endif
            call SetTimerData(t,HELD)
            set tT[tN]=t
            set tN=tN+1
        endif    
    endfunction

    private function init takes nothing returns nothing
     local integer i=0
     local integer o=-1
     local boolean oops = false
        if ( didinit ) then
            return
        else
            set didinit = true
        endif
     
        static if( USE_HASH_TABLE ) then
            set ht = InitHashtable()
            loop
                exitwhen(i==QUANTITY)
                set tT[i]=CreateTimer()
                call SetTimerData(tT[i], HELD)
                set i=i+1
            endloop
            set tN = QUANTITY
        else
            loop
                set i=0
                loop
                    exitwhen (i==QUANTITY)
                    set tT[i] = CreateTimer()
                    if(i==0) then
                        set VOFFSET = GetHandleId(tT[i])
                        static if(USE_FLEXIBLE_OFFSET) then
                            set o=VOFFSET
                        else
                            set o=OFFSET
                        endif
                    endif
                    if (GetHandleId(tT[i])-o>=ARRAY_SIZE) then
                        exitwhen true
                    endif
                    if (GetHandleId(tT[i])-o>=0)  then
                        set i=i+1
                    endif
                endloop
                set tN = i
                exitwhen(tN == QUANTITY)
                set oops = true
                exitwhen not USE_FLEXIBLE_OFFSET
                debug call BJDebugMsg("TimerUtils_init: Failed a initialization attempt, will try again")               
            endloop
            
            if(oops) then
                static if ( USE_FLEXIBLE_OFFSET) then
                    debug call BJDebugMsg("The problem has been fixed.")
                    //If this message doesn't appear then there is so much
                    //handle id fragmentation that it was impossible to preload
                    //so many timers and the thread crashed! Therefore this
                    //debug message is useful.
                elseif(DEBUG_MODE) then
                    call BJDebugMsg("There were problems and the new timer limit is "+I2S(i))
                    call BJDebugMsg("This is a rare ocurrence, if the timer limit is too low:")
                    call BJDebugMsg("a) Change USE_FLEXIBLE_OFFSET to true (reduces performance a little)")
                    call BJDebugMsg("b) or try changing OFFSET to "+I2S(VOFFSET) )
                endif
            endif
        endif

    endfunction

endlibrary
//***************************************************************************
//*  ListT
/*****************************************************************************
*
*    List<T> v2.1.2.3
*       by Bannar
*
*    Doubly-linked list.
*
******************************************************************************
*
*    Requirements:
*
*       Table by Bribe
*          hiveworkshop.com/threads/snippet-new-table.188084/
*
*       Alloc - choose whatever you like
*          e.g.: by Sevion hiveworkshop.com/threads/snippet-alloc.192348/
*
******************************************************************************
*
*    Implementation:
*
*       macro DEFINE_LIST takes ACCESS, NAME, TYPE
*
*       macro DEFINE_STRUCT_LIST takes ACCESS, NAME, TYPE
*
*          ACCESS - encapsulation, choose restriction access
*            NAME - name of list type
*            TYPE - type of values stored
*
*     Implementation notes:
*
*       - DEFINE_STRUCT_LIST macro purpose is to provide natural typecasting syntax for struct types.
*       - <NAME>Item structs inline directly into hashtable operations thus generate basically no code.
*       - Lists defined with DEFINE_STRUCT_LIST are inlined nicely into single create method and single integer array.
*
******************************************************************************
*
*    struct API:
*
*       struct <NAME>Item:
*
*        | <TYPE> data
*        | <NAME>Item next
*        | <NAME>Item prev
*
*
*       General:
*
*        | static method create takes nothing returns thistype
*        |    Default ctor.
*        |
*        | static method operator [] takes thistype other returns thistype
*        |    Copy ctor.
*        |
*        | method destroy takes nothing returns nothing
*        |    Default dctor.
*        |
*        | method empty takes nothing returns boolean
*        |    Checks whether the list is empty.
*        |
*        | method size takes nothing returns integer
*        |    Returns size of a list.
*
*
*       Access:
*
*        | readonly <NAME>Item first
*        | readonly <NAME>Item last
*        |
*        | method front takes nothing returns $TYPE$
*        |    Retrieves first element.
*        |
*        | method back takes nothing returns $TYPE$
*        |    Retrieves last element.
*
*
*       Modifiers:
*
*        | method clear takes nothing returns nothing
*        |    Flushes list and recycles its nodes.
*        |
*        | method push takes $TYPE$ value returns thistype
*        |    Adds elements to the end.
*        |
*        | method unshift takes $TYPE$ value returns thistype
*        |    Adds elements to the front.
*        |
*        | method pop takes nothing returns thistype
*        |    Removes the last element.
*        |
*        | method shift takes nothing returns thistype
*        |    Removes the first element.
*        |
*        | method find takes $TYPE$ value returns $NAME$Item
*        |    Returns the first node which data equals value.
*        |
*        | method erase takes $NAME$Item node returns boolean
*        |    Removes node from the list, returns true on success.
*        |
*        | method removeElem takes $TYPE$ value returns thistype
*        |    Removes first element that equals value from the list.
*
*
*****************************************************************************/
library ListT requires Table, Alloc

//! runtextmacro DEFINE_LIST("", "IntegerList", "integer")
// Run here any global list types you want to be defined.

//! textmacro_once DEFINE_LIST takes ACCESS, NAME, TYPE
$ACCESS$ struct $NAME$Item extends array
    // No default ctor and dctor due to limited array size

    method operator data takes nothing returns $TYPE$
        return Table(this).$TYPE$[-1] // hashtable[ node, -1 ] = data
    endmethod
    method operator data= takes $TYPE$ value returns nothing
        set Table(this).$TYPE$[-1] = value
    endmethod

    method operator next takes nothing returns thistype
        return Table(this)[-2] // hashtable[ node, -2 ] = next
    endmethod
    method operator next= takes thistype value returns nothing
        set Table(this)[-2] = value
    endmethod

    method operator prev takes nothing returns thistype
        return Table(this)[-3] // hashtable[ node, -3 ] = prev
    endmethod
    method operator prev= takes thistype value returns nothing
        set Table(this)[-3] = value
    endmethod
endstruct

$ACCESS$ struct $NAME$ extends array
    readonly $NAME$Item first
    readonly $NAME$Item last
    private integer count

    implement Alloc

    private static method setNodeOwner takes $NAME$Item node, $NAME$ owner returns nothing
        set Table(node)[-4] = owner
    endmethod

    private static method getNodeOwner takes $NAME$Item node returns thistype
        return Table(node)[-4]
    endmethod

    private method createNode takes $TYPE$ value returns $NAME$Item
        local $NAME$Item node = Table.create()
        set node.data = value
        call setNodeOwner(node, this) // ownership
        return node
    endmethod

    private method deleteNode takes $NAME$Item node returns nothing
        call Table(node).destroy() // also removes ownership
    endmethod

    static method create takes nothing returns thistype
        local thistype this = allocate()
        set count = 0
        return this
    endmethod

    method clear takes nothing returns nothing
        local $NAME$Item node = first
        local $NAME$Item temp

        loop // recycle all Table indexes
            exitwhen 0 == node
            set temp = node.next
            call deleteNode(node)
            set node = temp
        endloop

        set first = 0
        set last = 0
        set count = 0
    endmethod

    method destroy takes nothing returns nothing
        call clear()
        call deallocate()
    endmethod

    method front takes nothing returns $TYPE$
        return first.data
    endmethod

    method back takes nothing returns $TYPE$
        return last.data
    endmethod

    method empty takes nothing returns boolean
        return count == 0
    endmethod

    method size takes nothing returns integer
        return count
    endmethod

    method push takes $TYPE$ value returns thistype
        local $NAME$Item node = createNode(value)

        if not empty() then
            set last.next = node
            set node.prev = last
        else
            set first = node
            set node.prev = 0
        endif

        set last = node
        set node.next = 0
        set count = count + 1
        return this
    endmethod

    method unshift takes $TYPE$ value returns thistype
        local $NAME$Item node = createNode(value)

        if not empty() then
            set first.prev = node
            set node.next = first
        else
            set last = node
            set node.next = 0
        endif

        set first = node
        set node.prev = 0
        set count = count + 1
        return this
    endmethod

    method pop takes nothing returns thistype
        local $NAME$Item node

        if not empty() then
            set node = last
            set last = last.prev

            if last == 0 then
                set first = 0
            else
                set last.next = 0
            endif

            call deleteNode(node)
            set count = count - 1
        debug else
            debug call DisplayTimedTextToPlayer(GetLocalPlayer(),0,0,60,"$NAME$::pop failed for instance "+I2S(this)+". List is empty.")
        endif
        return this
    endmethod

    method shift takes nothing returns thistype
        local $NAME$Item node

        if not empty() then
            set node = first
            set first = first.next

            if first == 0 then
                set last = 0
            else
                set first.prev = 0
            endif

            call deleteNode(node)
            set count = count - 1
        debug else
            debug call DisplayTimedTextToPlayer(GetLocalPlayer(),0,0,60,"$NAME$::shift failed for instance "+I2S(this)+". List is empty.")
        endif
        return this
    endmethod

    static method operator [] takes thistype other returns thistype
        local thistype instance = create()
        local $NAME$Item node = other.first

        loop
            exitwhen node == 0
            call instance.push(node.data)
            set node = node.next
        endloop

        return instance
    endmethod

    method find takes $TYPE$ value returns $NAME$Item
        local $NAME$Item node = first
        loop
            exitwhen node == 0 or node.data == value
            set node = node.next
        endloop
        return node
    endmethod

    method erase takes $NAME$Item node returns boolean
        if getNodeOwner(node) == this then // match ownership
            if node == first then
                call shift()
            elseif node == last then
                call pop()
            else
                set node.prev.next = node.next
                set node.next.prev = node.prev
                call deleteNode(node)
                set count = count - 1
            endif
            return true
        debug else
            debug call DisplayTimedTextToPlayer(GetLocalPlayer(),0,0,60,"$NAME$::erase failed for instance "+I2S(this)+". Attempted to remove invalid node "+I2S(node)+".")
        endif
        return false
    endmethod

    method remove takes $NAME$Item node returns boolean
        debug call DisplayTimedTextToPlayer(GetLocalPlayer(),0,0,60,"Method $NAME$::remove is obsolete, use $NAME$::erase instead.")
        return erase(node)
    endmethod

    method removeElem takes $TYPE$ value returns thistype
        local $NAME$Item node = find(value)
        if node != 0 then
            call erase(node)
        endif
        return this
    endmethod
endstruct
//! endtextmacro

//! textmacro_once DEFINE_STRUCT_LIST takes ACCESS, NAME, TYPE
$ACCESS$ struct $NAME$Item extends array
    // Cannot inherit methods via delegate due to limited array size
    method operator data takes nothing returns $TYPE$
        return IntegerListItem(this).data
    endmethod
    method operator data= takes $TYPE$ value returns nothing
        set IntegerListItem(this).data = value
    endmethod

    method operator next takes nothing returns thistype
        return IntegerListItem(this).next
    endmethod
    method operator next= takes thistype value returns nothing
        set IntegerListItem(this).next = value
    endmethod

    method operator prev takes nothing returns thistype
        return IntegerListItem(this).prev
    endmethod
    method operator prev= takes thistype value returns nothing
        set IntegerListItem(this).prev = value
    endmethod
endstruct

$ACCESS$ struct $NAME$ extends array
    private delegate IntegerList parent

    static method create takes nothing returns thistype
        local thistype this = IntegerList.create()
        set parent = this
        return this
    endmethod

    method front takes nothing returns $TYPE$
        return parent.front()
    endmethod

    method back takes nothing returns $TYPE$
        return parent.back()
    endmethod
endstruct
//! endtextmacro

endlibrary
//***************************************************************************
//*  LinkedList
library LinkedList /* v1.3.0 https://www.hiveworkshop.com/threads/linkedlist-modules.325635/


    */uses /*

    */optional ErrorMessage /*  https://github.com/nestharus/JASS/blob/master/jass/Systems/ErrorMessage/main.j


    *///! novjass

    /*
        Author:
            - AGD
        Credits:
            - Nestharus, Dirac, Bribe
                > For their scripts and discussions which I used as reference

        Pros:
            - Feature-rich (Can be)
            - Modular
            - Safety-oriented (On DEBUG_MODE, but not 100 0.000000ool-proof ofcourse)
            - Flexible (Does not enforce a built-in allocator - allows user to choose between a custom Alloc
              or the default vjass allocator, or neither)
            - Extensible (Provides interfaces)

        Note:
            If you are using using Dirac's 'LinkedListModule' library, you need to replace its contents with
            the compatibility lib provided alongside this library for all to work seamlessly.

    */
    |-----|
    | API |
    |-----|
    /*
    Note: All the fields except from 'prev' and 'next' are actually operators, so you might want to
          avoid using them from the interface methods that would be declared above them.
    =====================================================================================================
    List Fields Modules (For those who want to write or inline the core linked-list operations themselves)

      */module LinkedListFields/*

          */readonly thistype prev/*
          */readonly thistype next/*


      */module StaticListFields extends LinkedListFields/*

          */readonly static constant thistype sentinel/*
          */readonly static thistype front/*
          */readonly static thistype back/*
          */readonly static boolean empty/*


      */module ListFields extends LinkedListFields/*

          */readonly thistype front/*
          */readonly thistype back/*
          */readonly boolean empty/*

    =====================================================================================================
    Lite List Modules (Should be enough for most cases)

      */module LinkedListLite extends LinkedListFields/*

          */optional interface static method onInsert takes thistype node returns nothing/*
          */optional interface static method onRemove takes thistype node returns nothing/*
          */optional interface method onTraverse takes thistype node returns boolean/*

          */static method insert takes thistype prev, thistype node returns nothing/*
          */static method remove takes thistype node returns nothing/*

          */method traverseForwards takes nothing returns nothing/*
          */method traverseBackwards takes nothing returns nothing/*
                - Only present if onTraverse() is also present


      */module StaticListLite extends StaticListFields, LinkedListLite/*

          */static method pushFront takes thistype node returns nothing/*
          */static method popFront takes nothing returns thistype/*

          */static method pushBack takes thistype node returns nothing/*
          */static method popBack takes nothing returns thistype/*


      */module ListLite extends ListFields, LinkedListLite/*

          */method pushFront takes thistype node returns nothing/*
          */method popFront takes nothing returns thistype/*

          */method pushBack takes thistype node returns nothing/*
          */method popBack takes nothing returns thistype/*


      */module InstantiatedListLite extends ListLite/*

          */interface static method allocate takes nothing returns thistype/*
          */interface method deallocate takes nothing returns nothing/*
          */optional interface method onConstruct takes nothing returns nothing/*
          */optional interface method onDestruct takes nothing returns nothing/*

          */static method create takes nothing returns thistype/*
          */method destroy takes nothing returns nothing/*

    =====================================================================================================
    Standard List Modules

      */module LinkedList extends LinkedListLite/*

          */static method isLinked takes thistype node returns boolean/*


      */module StaticList extends StaticListLite, LinkedList/*

          */static method clear takes nothing returns nothing/*
          */static method flush takes nothing returns nothing/*


      */module List extends ListLite, LinkedList/*

          */static method makeHead takes thistype node returns nothing/*
          */method clear takes nothing returns nothing/*
          */method flush takes nothing returns nothing/*


      */module InstantiatedList extends InstantiatedListLite, List/*
 
    =====================================================================================================
    Feature-rich List Modules (For those who somehow need exotic linked-list operations)

      */module LinkedListEx extends LinkedList/*

          */static method move takes thistype prev, thistype node returns nothing/*
          */static method swap takes thistype nodeA, thistype nodeB returns nothing/*


      */module StaticListEx extends StaticList, LinkedListEx/*

          */static method contains takes thistype node returns boolean/*
          */static method getSize takes nothing returns integer/*
          */static method rotateLeft takes nothing returns nothing/*
          */static method rotateRight takes nothing returns nothing/*


      */module ListEx extends List, LinkedListEx/*

          */method contains takes thistype node returns boolean/*
          */method getSize takes nothing returns integer/*
          */method rotateLeft takes nothing returns nothing/*
          */method rotateRight takes nothing returns nothing/*


      */module InstantiatedListEx extends InstantiatedList, ListEx/*


    *///! endnovjass

    /*========================================= CONFIGURATION ===========================================
    *   Only affects DEBUG_MODE
    *   If false, throws warnings instead (Errors pauses the game (Or stops the thread) while warnings do not)
    */
    globals
        private constant boolean THROW_ERRORS = true
    endglobals
    /*====================================== END OF CONFIGURATION =====================================*/

    static if DEBUG_MODE then
        public function AssertError takes boolean condition, string methodName, string structName, integer node, string message returns nothing
            static if LIBRARY_ErrorMessage then
                static if THROW_ERRORS then
                    call ThrowError(condition, SCOPE_PREFIX, methodName, structName, node, message)
                else
                    call ThrowWarning(condition, SCOPE_PREFIX, methodName, structName, node, message)
                endif
            else
                if condition then
                    static if THROW_ERRORS then
                        call BJDebugMsg("|cffff0000[ERROR]|r [Library: " + SCOPE_PREFIX + "] [Struct: " + structName + "] [Method: " + methodName + "] [Instance: " + I2S(node) + "] : |cffff0000" + message + "|r")
                        call PauseGame(true)
                    else
                        call BJDebugMsg("|cffffcc00[WARNING]|r [Library: " + SCOPE_PREFIX + "] [Struct: " + structName + "] [Method: " + methodName + "] [Instance: " + I2S(node) + "] : |cffffcc00" + message + "|r")
                    endif
                endif
            endif
        endfunction
    endif

    private module LinkedListUtils
        method p_clear takes nothing returns nothing
            set this.next.prev = 0
            set this.prev.next = 0
            set this.prev = this
            set this.next = this
        endmethod
        method p_flush takes nothing returns nothing
            local thistype node = this.prev
            loop
                exitwhen node == this
                call remove(node)
                set node = node.prev
            endloop
        endmethod
    endmodule
    private module LinkedListUtilsEx
        implement LinkedListUtils
        method p_contains takes thistype toFind returns boolean
            local thistype node = this.next
            loop
                exitwhen node == this
                if node == toFind then
                    return true
                endif
                set node = node.next
            endloop
            return false
        endmethod
        method p_getSize takes nothing returns integer
            local integer count = 0
            local thistype node = this.next
            loop
                exitwhen node == this
                set count = count + 1
                set node = node.next
            endloop
            return count
        endmethod
    endmodule

    private module LinkedListLiteBase
        implement LinkedListFields
        debug method p_isEmptyHead takes nothing returns boolean
            debug return this == this.next and this == this.prev
        debug endmethod
        static method p_insert takes thistype this, thistype node returns nothing
            local thistype next = this.next
            set node.prev = this
            set node.next = next
            set next.prev = node
            set this.next = node
        endmethod
        static method p_remove takes thistype node returns nothing
            set node.next.prev = node.prev
            set node.prev.next = node.next
        endmethod
        static method insert takes thistype this, thistype node returns nothing
            debug call AssertError(node == 0, "insert()", "thistype", 0, "Cannot insert null node")
            debug call AssertError(not node.p_isEmptyHead() and (node.next.prev == node or node.prev.next == node), "insert()", "thistype", 0, "Already linked node [" + I2S(node) + "]: prev = " + I2S(node.prev) + " ; next = " + I2S(node.next))
            call p_insert(this, node)
            static if thistype.onInsert.exists then
                call onInsert(node)
            endif
        endmethod
        static method remove takes thistype node returns nothing
            debug call AssertError(node == 0, "remove()", "thistype", 0, "Cannot remove null node")
            debug call AssertError(node.next.prev != node and node.prev.next != node, "remove()", "thistype", 0, "Invalid node [" + I2S(node) + "]")
            static if thistype.onRemove.exists then
                call onRemove(node)
            endif
            call p_remove(node)
        endmethod
        static if thistype.onTraverse.exists then
            method p_traverse takes boolean forward returns nothing
                local thistype node
                local thistype next
                debug local thistype prev
                debug local boolean array traversed
                if forward then
                    set node = this.next
                    loop
                        exitwhen node == this or node.prev.next != node
                        debug call AssertError(traversed[node], "traverseForwards()", "thistype", this, "A node was traversed twice in a single traversal")
                        debug set traversed[node] = true
                        debug set prev = node.prev
                        set next = node.next
                        if this.onTraverse(node) then
                            call remove(node)
                            debug set traversed[node] = false
                        debug elseif next.prev == prev then
                            debug set traversed[node] = false
                        endif
                        set node = next
                    endloop
                else
                    set node = this.prev
                    loop
                        exitwhen node == this or node.next.prev != node
                        debug call AssertError(traversed[node], "traverseBackwards()", "thistype", this, "A node was traversed twice in a single traversal")
                        debug set traversed[node] = true
                        debug set prev = node.next
                        set next = node.prev
                        if this.onTraverse(node) then
                            call remove(node)
                            debug set traversed[node] = false
                        debug elseif next.prev == prev then
                            debug set traversed[node] = false
                        endif
                        set node = next
                    endloop
                endif
            endmethod
            method traverseForwards takes nothing returns nothing
                call this.p_traverse(true)
            endmethod
            method traverseBackwards takes nothing returns nothing
                call this.p_traverse(false)
            endmethod
        endif
    endmodule
    private module LinkedListBase
        implement LinkedListLiteBase
        static method isLinked takes thistype node returns boolean
            return node.next.prev == node or node.prev.next == node
        endmethod
    endmodule

    module LinkedListFields
        readonly thistype prev
        readonly thistype next
    endmodule
    module LinkedListLite
        implement LinkedListLiteBase
        implement optional LinkedListLiteModuleCompatibility // For API compatibility with Dirac's 'LinkedListModule' library
    endmodule
    module LinkedList
        implement LinkedListBase
        implement optional LinkedListModuleCompatibility // For API compatibility with Dirac's 'LinkedListModule' library
    endmodule
    module LinkedListEx
        implement LinkedListBase
        static method p_move takes thistype prev, thistype node returns nothing
            call p_remove(node)
            call p_insert(prev, node)
        endmethod
        static method move takes thistype prev, thistype node returns nothing
            debug call AssertError(not isLinked(node), "move()", "thistype", 0, "Cannot use unlinked node [" + I2S(node) + "]")
            call p_move(prev, node)
        endmethod
        static method swap takes thistype this, thistype node returns nothing
            local thistype thisPrev = this.prev
            local thistype thisNext = this.next
            debug call AssertError(this == 0, "swap()", "thistype", 0, "Cannot swap null node")
            debug call AssertError(node == 0, "swap()", "thistype", 0, "Cannot swap null node")
            debug call AssertError(not isLinked(this), "swap()", "thistype", 0, "Cannot use unlinked node [" + I2S(this) + "]")
            debug call AssertError(not isLinked(node), "swap()", "thistype", 0, "Cannot use unlinked node [" + I2S(node) + "]")
            call p_move(node, this)
            if thisNext != node then
                call p_move(thisPrev, node)
            endif
        endmethod
    endmodule

    module StaticListFields
        implement LinkedListFields
        static constant method operator head takes nothing returns thistype
            return 0
        endmethod
        static method operator back takes nothing returns thistype
            return head.prev
        endmethod
        static method operator front takes nothing returns thistype
            return head.next
        endmethod
        static method operator empty takes nothing returns boolean
            return front == head
        endmethod
    endmodule
    module StaticListLite
        implement StaticListFields
        implement LinkedListLiteBase
        static method pushFront takes thistype node returns nothing
            debug call AssertError(node == 0, "pushFront()", "thistype", 0, "Cannot use null node")
            debug call AssertError(not node.p_isEmptyHead() and (node.next.prev == node or node.prev.next == node), "pushFront()", "thistype", 0, "Already linked node [" + I2S(node) + "]: prev = " + I2S(node.prev) + " ; next = " + I2S(node.next))
            call insert(head, node)
        endmethod
        static method popFront takes nothing returns thistype
            local thistype node = front
            debug call AssertError(node.prev != head, "popFront()", "thistype", 0, "Invalid list")
            call remove(node)
            return node
        endmethod
        static method pushBack takes thistype node returns nothing
            debug call AssertError(node == 0, "pushBack()", "thistype", 0, "Cannot use null node")
            debug call AssertError(not node.p_isEmptyHead() and (node.next.prev == node or node.prev.next == node), "pushBack()", "thistype", 0, "Already linked node [" + I2S(node) + "]: prev = " + I2S(node.prev) + " ; next = " + I2S(node.next))
            call insert(back, node)
        endmethod
        static method popBack takes nothing returns thistype
            local thistype node = back
            debug call AssertError(node.next != head, "popBack()", "thistype", 0, "Invalid list")
            call remove(node)
            return node
        endmethod
    endmodule
    module StaticList
        implement StaticListLite
        implement LinkedListBase
        implement LinkedListUtils
        static method clear takes nothing returns nothing
            call head.p_clear()
        endmethod
        static method flush takes nothing returns nothing
            call head.p_flush()
        endmethod
    endmodule
    module StaticListEx
        implement StaticList
        implement LinkedListEx
        implement LinkedListUtilsEx
        static method contains takes thistype node returns boolean
            return head.p_contains(node)
        endmethod
        static method getSize takes nothing returns integer
            return head.p_getSize()
        endmethod
        static method rotateLeft takes nothing returns nothing
            call p_move(back, front)
        endmethod
        static method rotateRight takes nothing returns nothing
            call p_move(head, back)
        endmethod
    endmodule

    module ListFields
        implement LinkedListFields
        method operator back takes nothing returns thistype
            return this.prev
        endmethod
        method operator front takes nothing returns thistype
            return this.next
        endmethod
        method operator empty takes nothing returns boolean
            return this.next == this
        endmethod
    endmodule
    module ListLite
        implement ListFields
        implement LinkedListLiteBase
        method pushFront takes thistype node returns nothing
            debug call AssertError(this == 0, "pushFront()", "thistype", 0, "Null list")
            debug call AssertError(this.next.prev != this, "pushFront()", "thistype", this, "Invalid list")
            debug call AssertError(node == 0, "pushFront()", "thistype", this, "Cannot insert null node")
            debug call AssertError(not node.p_isEmptyHead() and (node.next.prev == node or node.prev.next == node), "pushFront()", "thistype", this, "Already linked node [" + I2S(node) + "]: prev = " + I2S(node.prev) + " ; next = " + I2S(node.next))
            call insert(this, node)
        endmethod
        method popFront takes nothing returns thistype
            local thistype node = this.next
            debug call AssertError(this == 0, "popFront()", "thistype", 0, "Null list")
            debug call AssertError(node.prev != this, "popFront()", "thistype", this, "Invalid list")
            call remove(node)
            return node
        endmethod
        method pushBack takes thistype node returns nothing
            debug call AssertError(this == 0, "pushBack()", "thistype", 0, "Null list")
            debug call AssertError(this.next.prev != this, "pushBack()", "thistype", this, "Invalid list")
            debug call AssertError(node == 0, "pushBack()", "thistype", this, "Cannot insert null node")
            debug call AssertError(not node.p_isEmptyHead() and (node.next.prev == node or node.prev.next == node), "pushBack()", "thistype", this, "Already linked node [" + I2S(node) + "]: prev = " + I2S(node.prev) + " ; next = " + I2S(node.next))
            call insert(this.prev, node)
        endmethod
        method popBack takes nothing returns thistype
            local thistype node = this.prev
            debug call AssertError(this == 0, "popBack()", "thistype", 0, "Null list")
            debug call AssertError(node.next != this, "pushFront()", "thistype", this, "Invalid list")
            call remove(node)
            return node
        endmethod
    endmodule
    module List
        implement ListLite
        implement LinkedListBase
        implement LinkedListUtils
        static method makeHead takes thistype node returns nothing
            set node.prev = node
            set node.next = node
        endmethod
        method clear takes nothing returns nothing
            debug call AssertError(this == 0, "clear()", "thistype", 0, "Null list")
            debug call AssertError(this.next.prev != this, "clear()", "thistype", this, "Invalid list")
            call this.p_clear()
        endmethod
        method flush takes nothing returns nothing
            debug call AssertError(this == 0, "flush()", "thistype", 0, "Null list")
            debug call AssertError(this.next.prev != this, "flush()", "thistype", this, "Invalid list")
            call this.p_flush()
        endmethod
    endmodule
    module ListEx
        implement List
        implement LinkedListEx
        implement LinkedListUtilsEx
        method contains takes thistype node returns boolean
            debug call AssertError(this == 0, "contains()", "thistype", 0, "Null list")
            debug call AssertError(this.next.prev != this, "contains()", "thistype", this, "Invalid list")
            return this.p_contains(node)
        endmethod
        method getSize takes nothing returns integer
            debug call AssertError(this == 0, "getSize()", "thistype", 0, "Null list")
            debug call AssertError(this.next.prev != this, "getSize()", "thistype", this, "Invalid list")
            return this.p_getSize()
        endmethod
        method rotateLeft takes nothing returns nothing
            debug call AssertError(this == 0, "rotateLeft()", "thistype", 0, "Null list")
            debug call AssertError(this.next.prev != this, "rotateLeft()", "thistype", this, "Invalid list")
            call p_move(this.back, this.front)
        endmethod
        method rotateRight takes nothing returns nothing
            debug call AssertError(this == 0, "rotateRight()", "thistype", 0, "Null list")
            debug call AssertError(this.next.prev == this, "rotateRight()", "thistype", this, "Invalid list")
            call p_move(this, this.back)
        endmethod
    endmodule

    module InstantiatedListLite
        implement ListLite
        debug private boolean valid
        static method create takes nothing returns thistype
            local thistype node = allocate()
            set node.prev = node
            set node.next = node
            debug set node.valid = true
            static if thistype.onConstruct.exists then
                call node.onConstruct()
            endif
            return node
        endmethod
        method destroy takes nothing returns nothing
            debug call AssertError(this == 0, "destroy()", "thistype", 0, "Null list")
            debug call AssertError(this.next.prev != this, "destroy()", "thistype", this, "Invalid list")
            debug call AssertError(not this.valid, "destroy()", "thistype", this, "Double-free")
            debug set this.valid = false
            static if thistype.flush.exists then
                call this.flush()
            endif
            static if thistype.onDestruct.exists then
                call this.onDestruct()
            endif
            debug set this.prev = 0
            debug set this.next = 0
            call this.deallocate()
        endmethod
    endmodule
    module InstantiatedList
        implement List
        implement InstantiatedListLite
    endmodule
    module InstantiatedListEx
        implement ListEx
        implement InstantiatedList
    endmodule


endlibrary
//***************************************************************************
//*  Alloc
library Alloc /* v1.2.0.1
*************************************************************************************
*
*	*/ uses /*
*
*		*/ Table					/*		http://www.hiveworkshop.com/forums/jass-resources-412/snippet-new-table-188084/
*		*/ optional ErrorMessage	/*		https://github.com/nestharus/JASS/tree/master/jass/Systems/ErrorMessage
*		*/ optional MemoryAnalysis	/*		
*
*************************************************************************************
*
*	Uses hashtable instead of array, which drastically reduces performance
*	but uncaps the instance limit. Should use with table fields instead of
*	array fields.
*
*	Due to hashtable usage, this uses an array stack recycler instead of a linked
*	stack. This is to reduce hashtable reads.
*
*		local thistype this = recycler[0]
*
*		if (recyclerCount == 0) then
*			set this = instanceCount + 1
*			set instanceCount = this
*		else
*			set recyclerCount = recyclerCount - 1
*			set this = recycler[recyclerCount]
*		endif
*
************************************************************************************
*
*	module AllocT
*
*		static method allocate takes nothing returns thistype
*		method deallocate takes nothing returns nothing
*
*		The Following Require Error Message To Be In The Map
*		--------------------------------------------------------
*
*			debug readonly boolean allocated
*
*		The Following Require Memory Analysis To Be In The Map
*		--------------------------------------------------------
*
*			debug readonly integer monitorCount
*			-	the amount of global memory being monitored by this
*			debug readonly integer monitorString
*			-	gets a string representation of all global memory being monitored by this
*			debug readonly integer address
*			-	global memory address for debugging
*			-	used with monitor and stopMonitor
*
*			debug static method calculateMemoryUsage takes nothing returns integer
*			debug static method getAllocatedMemoryAsString takes nothing returns string
*
*			debug method monitor takes string label, integer address returns nothing
*			-	monitor a global memory address with a label
*			-	used to identify memory leaks
*			-	should be memory that ought to be destroyed by the time this is destroyed
*			debug method stopMonitor takes integer address returns nothing
*			-	stops monitoring global memory
*			debug method stopMonitorValue takes handle monitoredHandle returns nothing
*			-	stops monitoring handle values
*
*			The Following Are Used To Monitor Handle Values
*
*				debug method monitor_widget				takes string label, widget				handleToTrack returns nothing
*				debug method monitor_destructable		takes string label, destructable		handleToTrack returns nothing
*				debug method monitor_item				takes string label, item				handleToTrack returns nothing
*				debug method monitor_unit				takes string label, unit				handleToTrack returns nothing
*				debug method monitor_timer				takes string label, timer				handleToTrack returns nothing
*				debug method monitor_trigger			takes string label, trigger				handleToTrack returns nothing
*				debug method monitor_triggercondition	takes string label, triggercondition	handleToTrack returns nothing
*				debug method monitor_triggeraction		takes string label, triggeraction		handleToTrack returns nothing
*				debug method monitor_force				takes string label, force				handleToTrack returns nothing
*				debug method monitor_group				takes string label, group				handleToTrack returns nothing
*				debug method monitor_location			takes string label, location			handleToTrack returns nothing
*				debug method monitor_rect				takes string label, rect				handleToTrack returns nothing
*				debug method monitor_boolexpr			takes string label, boolexpr			handleToTrack returns nothing
*				debug method monitor_effect				takes string label, effect				handleToTrack returns nothing
*				debug method monitor_unitpool			takes string label, unitpool			handleToTrack returns nothing
*				debug method monitor_itempool			takes string label, itempool			handleToTrack returns nothing
*				debug method monitor_quest				takes string label, quest				handleToTrack returns nothing
*				debug method monitor_defeatcondition	takes string label, defeatcondition		handleToTrack returns nothing
*				debug method monitor_timerdialog		takes string label, timerdialog			handleToTrack returns nothing
*				debug method monitor_leaderboard		takes string label, leaderboard			handleToTrack returns nothing
*				debug method monitor_multiboard			takes string label, multiboard			handleToTrack returns nothing
*				debug method monitor_multiboarditem		takes string label, multiboarditem		handleToTrack returns nothing
*				debug method monitor_dialog				takes string label, dialog				handleToTrack returns nothing
*				debug method monitor_button				takes string label, button				handleToTrack returns nothing
*				debug method monitor_texttag			takes string label, texttag				handleToTrack returns nothing
*				debug method monitor_lightning			takes string label, lightning			handleToTrack returns nothing
*				debug method monitor_image				takes string label, image				handleToTrack returns nothing
*				debug method monitor_ubersplat			takes string label, ubersplat			handleToTrack returns nothing
*				debug method monitor_region				takes string label, region				handleToTrack returns nothing
*				debug method monitor_fogmodifier		takes string label, fogmodifier			handleToTrack returns nothing
*				debug method monitor_hashtable			takes string label, hashtable			handleToTrack returns nothing
*
************************************************************************************/
	private keyword globalAddress
	
	module Alloc
		/*
		*	stack
		*/
		private static Table recycler
		
		private static integer instanceCount = 0
		private static integer recyclerCount = 0
		
		static if LIBRARY_MemoryAnalysis then
			debug private static Table p_globalAddress
			
			debug public method operator globalAddress takes nothing returns MemoryMonitor
				debug return p_globalAddress[this]
			debug endmethod
			debug public method operator globalAddress= takes integer value returns nothing
				debug set p_globalAddress[this] = value
			debug endmethod
			
			debug method operator address takes nothing returns integer
				debug call ThrowError(not p_globalAddress.has(this), "Alloc", "address", "thistype", this, "Attempted To Access Null Instance.")
				debug return globalAddress
			debug endmethod
		elseif LIBRARY_ErrorMessage then
			debug private static Table p_allocated
		endif
		
		/*
		*	allocation
		*/
		static method allocate takes nothing returns thistype
			local thistype this
			
			if (recyclerCount == 0) then
				set this = instanceCount + 1
				set instanceCount = this
				
				static if LIBRARY_ErrorMessage then
					debug call ThrowError(this < 0, "AllocT", "allocate", "thistype", 0, "Overflow.")
				endif
			else
				set recyclerCount = recyclerCount - 1
				
				set this = recycler[recyclerCount]
			endif
			
			static if LIBRARY_MemoryAnalysis then
				debug set globalAddress = MemoryMonitor.allocate("thistype")
			elseif LIBRARY_ErrorMessage then
				debug set p_allocated.boolean[this] = true
			endif
			
			return this
		endmethod
		
		method deallocate takes nothing returns nothing
			static if LIBRARY_MemoryAnalysis then
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "deallocate", "thistype", this, "Attempted To Deallocate Null Instance.")
			elseif LIBRARY_ErrorMessage then
				debug call ThrowError(not p_allocated.has(this), "AllocT", "deallocate", "thistype", this, "Attempted To Deallocate Null Instance.")
			endif
			
			static if LIBRARY_MemoryAnalysis then
				debug call globalAddress.deallocate()
				debug call p_globalAddress.remove(this)
			elseif LIBRARY_ErrorMessage then
				debug call p_allocated.remove(this)
			endif
			
			set recycler[recyclerCount] = this
			set recyclerCount = recyclerCount + 1
		endmethod
		
		static if LIBRARY_MemoryAnalysis then
			debug method monitor takes string label, integer address returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor(label, address)
			debug endmethod
			debug method stopMonitor takes integer address returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "stopMonitor", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.stopMonitor(address)
			debug endmethod
			debug method stopMonitorValue takes handle monitoredHandle returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "stopMonitorValue", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.stopMonitorValue(monitoredHandle)
			debug endmethod
			
			debug method operator monitorCount takes nothing returns integer
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitorCount", "thistype", this, "Attempted To Access Null Instance.")
				debug return globalAddress.monitorCount
			debug endmethod
			debug method operator monitorString takes nothing returns string
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitorString", "thistype", this, "Attempted To Access Null Instance.")
				debug return globalAddress.monitorString
			debug endmethod
			
			debug method monitor_widget				takes string label, widget				handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_widget", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_widget(label, handleToTrack)
			debug endmethod
			debug method monitor_destructable		takes string label, destructable		handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_destructable", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_destructable(label, handleToTrack)
			debug endmethod
			debug method monitor_item				takes string label, item				handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_item", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_item(label, handleToTrack)
			debug endmethod
			debug method monitor_unit				takes string label, unit				handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_unit", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_unit(label, handleToTrack)
			debug endmethod
			debug method monitor_timer				takes string label, timer				handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_timer", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_timer(label, handleToTrack)
			debug endmethod
			debug method monitor_trigger			takes string label, trigger				handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_trigger", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_trigger(label, handleToTrack)
			debug endmethod
			debug method monitor_triggercondition	takes string label, triggercondition	handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_triggercondition", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_triggercondition(label, handleToTrack)
			debug endmethod
			debug method monitor_triggeraction		takes string label, triggeraction		handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_triggeraction", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_triggeraction(label, handleToTrack)
			debug endmethod
			debug method monitor_force				takes string label, force				handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_force", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_force(label, handleToTrack)
			debug endmethod
			debug method monitor_group				takes string label, group				handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_group", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_group(label, handleToTrack)
			debug endmethod
			debug method monitor_location			takes string label, location			handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_location", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_location(label, handleToTrack)
			debug endmethod
			debug method monitor_rect				takes string label, rect				handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_rect", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_rect(label, handleToTrack)
			debug endmethod
			debug method monitor_boolexpr			takes string label, boolexpr			handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_boolexpr", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_boolexpr(label, handleToTrack)
			debug endmethod
			debug method monitor_effect				takes string label, effect				handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_effect", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_effect(label, handleToTrack)
			debug endmethod
			debug method monitor_unitpool			takes string label, unitpool			handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_unitpool", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_unitpool(label, handleToTrack)
			debug endmethod
			debug method monitor_itempool			takes string label, itempool			handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_itempool", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_itempool(label, handleToTrack)
			debug endmethod
			debug method monitor_quest				takes string label, quest				handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_quest", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_quest(label, handleToTrack)
			debug endmethod
			debug method monitor_defeatcondition	takes string label, defeatcondition		handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_defeatcondition", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_defeatcondition(label, handleToTrack)
			debug endmethod
			debug method monitor_timerdialog		takes string label, timerdialog			handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_timerdialog", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_timerdialog(label, handleToTrack)
			debug endmethod
			debug method monitor_leaderboard		takes string label, leaderboard			handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_leaderboard", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_leaderboard(label, handleToTrack)
			debug endmethod
			debug method monitor_multiboard			takes string label, multiboard			handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_multiboard", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_multiboard(label, handleToTrack)
			debug endmethod
			debug method monitor_multiboarditem		takes string label, multiboarditem		handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_multiboarditem", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_multiboarditem(label, handleToTrack)
			debug endmethod
			debug method monitor_dialog				takes string label, dialog				handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_dialog", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_dialog(label, handleToTrack)
			debug endmethod
			debug method monitor_button				takes string label, button				handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_button", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_button(label, handleToTrack)
			debug endmethod
			debug method monitor_texttag			takes string label, texttag				handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_texttag", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_texttag(label, handleToTrack)
			debug endmethod
			debug method monitor_lightning			takes string label, lightning			handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_lightning", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_lightning(label, handleToTrack)
			debug endmethod
			debug method monitor_image				takes string label, image				handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_image", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_image(label, handleToTrack)
			debug endmethod
			debug method monitor_ubersplat			takes string label, ubersplat			handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_ubersplat", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_ubersplat(label, handleToTrack)
			debug endmethod
			debug method monitor_region				takes string label, region				handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_region", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_region(label, handleToTrack)
			debug endmethod
			debug method monitor_fogmodifier		takes string label, fogmodifier			handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_fogmodifier", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_fogmodifier(label, handleToTrack)
			debug endmethod
			debug method monitor_hashtable			takes string label, hashtable			handleToTrack returns nothing
				debug call ThrowError(not p_globalAddress.has(this), "AllocT", "monitor_hashtable", "thistype", this, "Attempted To Access Null Instance.")
				debug call globalAddress.monitor_hashtable(label, handleToTrack)
			debug endmethod
			
			static if DEBUG_MODE then
				//! runtextmacro optional MEMORY_ANALYSIS_STATIC_FIELD_STACK_ARRAY("recycler", "instanceCount", "recyclerCount")
				
				static method calculateMemoryUsage takes nothing returns integer
					return calculateAllocatedMemory__recycler()
				endmethod
				
				static method getAllocatedMemoryAsString takes nothing returns string
					return allocatedMemoryString__recycler()
				endmethod
			endif
		endif
		
		/*
		*	analysis
		*/
		static if LIBRARY_MemoryAnalysis then
			debug method operator allocated takes nothing returns boolean
				debug return p_globalAddress.has(this)
			debug endmethod
		elseif LIBRARY_ErrorMessage then
			debug method operator allocated takes nothing returns boolean
				debug return p_allocated.has(this)
			debug endmethod
		endif
		
		/*
		*	initialization
		*/
		private static method onInit takes nothing returns nothing
			set recycler = Table.create()
			
			static if LIBRARY_MemoryAnalysis then
				debug set p_globalAddress = Table.create()
			elseif LIBRARY_ErrorMessage then
				debug set p_allocated = Table.create()
			endif
		endmethod
	endmodule
endlibrary
//***************************************************************************
//*  WorldBounds
library WorldBounds /* v2.0.0.0
************************************************************************************
*
*	struct WorldBounds extends array
*
*		Fields
*		-------------------------
*
*			readonly static integer maxX
*			readonly static integer maxY
*			readonly static integer minX
*			readonly static integer minY
*
*			readonly static integer centerX
*			readonly static integer centerY
*
*			readonly static rect world
*			readonly static region worldRegion
*
************************************************************************************/
	private module WorldBoundInit
		private static method onInit takes nothing returns nothing
			set world=GetWorldBounds()
			
			set maxX = R2I(GetRectMaxX(world))
			set maxY = R2I(GetRectMaxY(world))
			set minX = R2I(GetRectMinX(world))
			set minY = R2I(GetRectMinY(world))
			
			set centerX = R2I((maxX + minX)/2)
			set centerY = R2I((minY + maxY)/2)
			
			set worldRegion = CreateRegion()
			
			call RegionAddRect(worldRegion, world)
		endmethod
	endmodule
	
	struct WorldBounds extends array
		readonly static integer maxX
		readonly static integer maxY
		readonly static integer minX
		readonly static integer minY
		
		readonly static integer centerX
		readonly static integer centerY
		
		readonly static rect world
		
		readonly static region worldRegion
		
		implement WorldBoundInit
	endstruct
endlibrary
//***************************************************************************
//*  EffectUtils
library EffectUtils uses WorldBounds

struct EffectUtils

effect vfx
boolean hide

static method onTimedLife takes nothing returns nothing
    local timer clock = GetExpiredTimer()
    local thistype this = GetTimerData(clock)

    if this.hide then
        call BlzSetSpecialEffectPosition(this.vfx, WorldBounds.maxX, WorldBounds.maxY, 5000)
    endif

    call DestroyEffect(this.vfx)
    set this.vfx = null

    call ReleaseTimer(clock)
    set clock = null
endmethod

static method addTimedLife takes effect vfx, real dur, boolean hideOnDeath returns nothing
    local thistype this = allocate()
    local timer clock = NewTimerEx(this)
    set this.vfx = vfx
    set this.hide = hideOnDeath
    call TimerStart(clock, dur, false, function EffectUtils.onTimedLife)
endmethod

endstruct

endlibrary
//***************************************************************************
//*  RegisterNativeEvent
/*****************************************************************************
*
*    RegisterNativeEvent v1.1.1.5
*       by Bannar
*
*    Storage of trigger handles for native events.
*
******************************************************************************
*
*    Optional requirements:
*
*       Table by Bribe
*          hiveworkshop.com/threads/snippet-new-table.188084/
*
******************************************************************************
*
*    Important:
*
*       Avoid using TriggerSleepAction within functions registered.
*       Destroy native event trigger on your own responsibility.
*
******************************************************************************
*
*    Core:
*
*       function IsNativeEventRegistered takes integer whichIndex, integer whichEvent returns boolean
*          Whether index whichIndex has already been attached to event whichEvent.
*
*       function RegisterNativeEventTrigger takes integer whichIndex, integer eventId returns boolean
*          Registers whichIndex within whichEvent scope and assigns new trigger handle for it.
*
*       function GetIndexNativeEventTrigger takes integer whichIndex, integer whichEvent returns trigger
*          Retrieves trigger handle for event whichEvent specific to provided index whichIndex.
*
*       function GetNativeEventTrigger takes integer whichEvent returns trigger
*          Retrieves trigger handle for event whichEvent.
*
*
*    Custom events:
*
*       function CreateNativeEvent takes nothing returns integer
*          Returns unique id for new event and registers it with RegisterNativeEvent.
*
*       function RegisterIndexNativeEvent takes integer whichIndex, integer whichEvent, code func returns triggercondition
*          Registers new event handler func for event whichEvent specific to index whichIndex.
*
*       function RegisterNativeEvent takes integer whichEvent, code func returns triggercondition
*          Registers new event handler func for specified event whichEvent.
*
*       function UnregisterNativeEventHandler takes integer whichEvent, triggercondition handler returns nothing
*          Unregisters specified event handler for event whichEvent. Requires Warcraft 1.30.4+.
*
*****************************************************************************/
library RegisterNativeEvent uses optional Table

globals
    private integer eventIndex = 500 // 0-499 reserved for Blizzard native events
endglobals

private module NativeEventInit
    private static method onInit takes nothing returns nothing
static if LIBRARY_Table then
        set table = TableArray[0x2000]
endif
    endmethod
endmodule

private struct NativeEvent extends array
static if LIBRARY_Table then
    static TableArray table
else
    static hashtable table = InitHashtable()
endif
    implement NativeEventInit
endstruct

function IsNativeEventRegistered takes integer whichIndex, integer whichEvent returns boolean
static if LIBRARY_Table then
    return NativeEvent.table[whichEvent].trigger.has(whichIndex)
else
    return HaveSavedHandle(NativeEvent.table, whichEvent, whichIndex)
endif
endfunction

function RegisterNativeEventTrigger takes integer whichIndex, integer whichEvent returns boolean
    if not IsNativeEventRegistered(whichIndex, whichEvent) then
static if LIBRARY_Table then
        set NativeEvent.table[whichEvent].trigger[whichIndex] = CreateTrigger()
else
        call SaveTriggerHandle(NativeEvent.table, whichEvent, whichIndex, CreateTrigger())
endif
        return true
    endif
    return false
endfunction

function GetIndexNativeEventTrigger takes integer whichIndex, integer whichEvent returns trigger
static if LIBRARY_Table then
    return NativeEvent.table[whichEvent].trigger[whichIndex]
else
    return LoadTriggerHandle(NativeEvent.table, whichEvent, whichIndex)
endif
endfunction

function GetNativeEventTrigger takes integer whichEvent returns trigger
    return GetIndexNativeEventTrigger(bj_MAX_PLAYER_SLOTS, whichEvent)
endfunction

function CreateNativeEvent takes nothing returns integer
    local integer eventId = eventIndex
    call RegisterNativeEventTrigger(bj_MAX_PLAYER_SLOTS, eventId)
    set eventIndex = eventIndex + 1
    return eventId
endfunction

function RegisterIndexNativeEvent takes integer whichIndex, integer whichEvent, code func returns triggercondition
    call RegisterNativeEventTrigger(whichIndex, whichEvent)
    return TriggerAddCondition(GetIndexNativeEventTrigger(whichIndex, whichEvent), Condition(func))
endfunction

function RegisterNativeEvent takes integer whichEvent, code func returns triggercondition
    return RegisterIndexNativeEvent(bj_MAX_PLAYER_SLOTS, whichEvent, func)
endfunction

function UnregisterNativeEventHandler takes integer whichEvent, triggercondition handler returns nothing
    call TriggerRemoveCondition(GetNativeEventTrigger(whichEvent), handler)
endfunction

endlibrary
//***************************************************************************
//*  RegisterPlayerUnitEvent
/*****************************************************************************
*
*    RegisterPlayerUnitEvent v1.0.3.2
*       by Bannar
*
*    Register version of TriggerRegisterPlayerUnitEvent.
*
*    Special thanks to Magtheridon96, Bribe, azlier and BBQ for the original library version.
*
******************************************************************************
*
*    Requirements:
*
*       RegisterNativeEvent by Bannar
*          hiveworkshop.com/threads/snippet-registerevent-pack.250266/
*
******************************************************************************
*
*    Functions:
*
*       function GetAnyPlayerUnitEventTrigger takes playerunitevent whichEvent returns trigger
*          Retrieves trigger handle for playerunitevent whichEvent.
*
*       function GetPlayerUnitEventTrigger takes player whichPlayer, playerunitevent whichEvent returns trigger
*          Retrieves trigger handle for playerunitevent whichEvent specific to player whichPlayer.
*
*       function RegisterAnyPlayerUnitEvent takes playerunitevent whichEvent, code func returns nothing
*          Registers generic playerunitevent whichEvent adding code func as callback.
*
*       function RegisterPlayerUnitEvent takes player whichPlayer, playerunitevent whichEvent, code func returns nothing
*          Registers playerunitevent whichEvent for player whichPlayer adding code func as callback.
*
*****************************************************************************/
library RegisterPlayerUnitEvent requires RegisterNativeEvent

function GetAnyPlayerUnitEventTrigger takes playerunitevent whichEvent returns trigger
    return GetNativeEventTrigger(GetHandleId(whichEvent))
endfunction

function GetPlayerUnitEventTrigger takes player whichPlayer, playerunitevent whichEvent returns trigger
    return GetIndexNativeEventTrigger(GetPlayerId(whichPlayer), GetHandleId(whichEvent))
endfunction

function RegisterAnyPlayerUnitEvent takes playerunitevent whichEvent, code func returns nothing
    local integer eventId = GetHandleId(whichEvent)
    local integer index = 0
    local trigger t = null

    if RegisterNativeEventTrigger(bj_MAX_PLAYER_SLOTS, eventId) then
        set t = GetNativeEventTrigger(eventId)
        loop
            call TriggerRegisterPlayerUnitEvent(t, Player(index), whichEvent, null)
            set index = index + 1
            exitwhen index == bj_MAX_PLAYER_SLOTS
        endloop
        set t = null
    endif

    call RegisterNativeEvent(eventId, func)
endfunction

function RegisterPlayerUnitEvent takes player whichPlayer, playerunitevent whichEvent, code func returns nothing
    local integer playerId = GetPlayerId(whichPlayer)
    local integer eventId = GetHandleId(whichEvent)

    if RegisterNativeEventTrigger(playerId, eventId) then
        call TriggerRegisterPlayerUnitEvent(GetIndexNativeEventTrigger(playerId, eventId), whichPlayer, whichEvent, null)
    endif

    call RegisterIndexNativeEvent(playerId, eventId, func)
endfunction

endlibrary
//***************************************************************************
//*  SpellEffectEvent
//============================================================================
// SpellEffectEvent
// - Version 1.1.0.0
//
// API
// ---
//     RegisterSpellEffectEvent(integer abil, code onCast)
// 
// Requires
// --------
//     RegisterPlayerUnitEvent: hiveworkshop.com/forums/showthread.php?t=203338
// 
// Optional
// --------
//     Table: hiveworkshop.com/forums/showthread.php?t=188084
//
library SpellEffectEvent requires RegisterPlayerUnitEvent, optional Table
 
//============================================================================
private module M
    
    static if LIBRARY_Table then
        static Table tb
    else
        static hashtable ht = InitHashtable()
    endif
    
    static method onCast takes nothing returns nothing
        static if LIBRARY_Table then
            call TriggerEvaluate(.tb.trigger[GetSpellAbilityId()])
        else
            call TriggerEvaluate(LoadTriggerHandle(.ht, 0, GetSpellAbilityId()))
        endif
    endmethod
 
    private static method onInit takes nothing returns nothing
        static if LIBRARY_Table then
            set .tb = Table.create()
        endif
        call RegisterAnyPlayerUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT, function thistype.onCast)
    endmethod
endmodule
 
//============================================================================
private struct S extends array
    implement M
endstruct
 
//============================================================================
function RegisterSpellEffectEvent takes integer abil, code onCast returns nothing
    static if LIBRARY_Table then
        if not S.tb.handle.has(abil) then
            set S.tb.trigger[abil] = CreateTrigger()
        endif
        call TriggerAddCondition(S.tb.trigger[abil], Filter(onCast))
    else
        if not HaveSavedHandle(S.ht, 0, abil) then
            call SaveTriggerHandle(S.ht, 0, abil, CreateTrigger())
        endif
        call TriggerAddCondition(LoadTriggerHandle(S.ht, 0, abil), Filter(onCast))
    endif
endfunction
 
endlibrary
//***************************************************************************
//*  OrderEvent
//============================================================================
// OrderEvent by Bribe, special thanks to Nestharus and Azlier, version 3.0.1.1
//
// API
// ---
//     RegisterOrderEvent(integer orderId, code eventFunc)
//     RegisterAnyOrderEvent(code eventFunc) //Runs for point/target/instant for any order
//
// Requires
// --------
//     RegisterPlayerUnitEvent: http://www.hiveworkshop.com/threads/snippet-registerevent-pack.250266/
//     Table: http://www.hiveworkshop.com/forums/showthread.php?t=188084
//
library OrderEvent requires RegisterPlayerUnitEvent, Table

globals
    private Table t = 0
endglobals

//============================================================================
function RegisterAnyOrderEvent takes code c returns nothing
    call RegisterAnyPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_ORDER, c)
    call RegisterAnyPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER, c)
    call RegisterAnyPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER, c)
    /*static if RPUE_VERSION_NEW then
        call RegisterAnyPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_ORDER, c)
        call RegisterAnyPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER, c)
        call RegisterAnyPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER, c)
    else
        call RegisterPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_ORDER, c)
        call RegisterPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER, c)
        call RegisterPlayerUnitEvent(EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER, c)
    endif*/
endfunction

//============================================================================
private function OnOrder takes nothing returns nothing
    call TriggerEvaluate(t.trigger[GetIssuedOrderId()])
endfunction

//============================================================================
function RegisterOrderEvent takes integer orderId, code c returns nothing
    local trigger trig
    if integer(t) == 0 then
        set t = Table.create()
        call RegisterAnyOrderEvent(function OnOrder)
    endif
    set trig = t.trigger[orderId]
    if trig == null then
        set trig = CreateTrigger()
        set t.trigger[orderId] = trig
    endif
    call TriggerAddCondition(trig, Filter(c))
    set trig = null
endfunction

endlibrary
//***************************************************************************
//*  DelayedOrder
library DelayedOrder uses TimerUtils
    
/*
    
    API
    
    DelayedOrder
    
    DelayedOrderXY
    
    DelayedOrderTarget

*/
    
struct DelayedOrder

    private unit u
    private integer o

    private static method clock takes nothing returns nothing
        local timer t = GetExpiredTimer()
        local thistype this = GetTimerData(t)
        call IssueImmediateOrderById(.u, .o)
        call ReleaseTimer(t)
        set .u = null
        call .deallocate()
        set t = null
    endmethod
    
    static method start takes unit u, integer ordr, real time returns nothing
        local thistype this = allocate()
        set .u = u
        set .o = ordr
        call TimerStart(NewTimerEx(this), time, false, function thistype.clock)
    endmethod

endstruct


struct DelayedOrderXY

    private unit u
    private integer o
    private real x
    private real y
    
    private static method clock takes nothing returns nothing
        local timer t = GetExpiredTimer()
        local thistype this = GetTimerData(t)
        call IssuePointOrderById(.u, .o, .x, .y)
        call ReleaseTimer(t)
        set .u = null
        call .deallocate()
        set t = null
    endmethod
    
    static method start takes unit u, integer ordr, real time, real x, real y returns nothing
        local thistype this = allocate()
        set .u = u
        set .o = ordr
        set .x = x
        set .y = y
        call TimerStart(NewTimerEx(this), time, false, function thistype.clock)
    endmethod
    
endstruct


struct DelayedOrderTarget

    private unit u
    private integer o
    private widget w
    
    private static method clock takes nothing returns nothing
        local timer t = GetExpiredTimer()
        local thistype this = GetTimerData(t)
        call IssueTargetOrderById(.u, .o, .w)
        call ReleaseTimer(t)
        set .u = null
        set .w = null
        call .deallocate()
        set t = null
    endmethod
    
    static method start takes unit u, integer ordr, real time, widget w returns nothing
        local thistype this = allocate()
        set .u = u
        set .o = ordr
        set .w = w
        call TimerStart(NewTimerEx(this), time, false, function thistype.clock)
    endmethod
    
endstruct


endlibrary
//***************************************************************************
//*  AutoSmartRally
scope AutoSmartRally initializer init

private function onTrainFinish takes nothing returns nothing
    local unit rallyUnit = GetUnitRallyUnit(GetTriggerUnit())
    local unit trainedUnit = GetTrainedUnit()
    if rallyUnit != null then
        if GetUnitAbilityLevel(trainedUnit, OIL_COLLECTOR_ABIL) > 0 then
            call DelayedOrderTarget.start(trainedUnit, 851971, 0., rallyUnit)
        endif
    endif
    set rallyUnit = null
    set trainedUnit = null
endfunction

private function init takes nothing returns nothing
    local trigger trainingListener = CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(trainingListener, EVENT_PLAYER_UNIT_TRAIN_FINISH)
    call TriggerAddAction(trainingListener, function onTrainFinish)
    set trainingListener = null
endfunction

endscope
//***************************************************************************
//*  IsUnitConstructing
library IsUnitContructing initializer init uses TimerUtils, Table


struct IsUnitContructing

    private unit source
    private integer id

    static method onCheckConstruction takes nothing returns nothing
        local timer clock = GetExpiredTimer()
        local thistype this = GetTimerData(clock)
        
        set udg_IndexExUnit = this.source

        set udg_UnitIndexExEvent = 0.00
        set udg_UnitIndexExEvent = 1.00
        set udg_UnitIndexExEvent = 0.00

        set udg_IndexExUnit = null

        call ReleaseTimer(clock)
        set clock = null
        set this.source = null

        call this.deallocate()
    endmethod

    static method onContructionStart takes nothing returns boolean
        set udg_IsUnitConstructing[GetUnitUserData(GetTriggerUnit())] = true
        return false
    endmethod

    static method onContructionDone takes nothing returns boolean
        set udg_IsUnitConstructing[GetUnitUserData(GetTriggerUnit())] = false
        return false
    endmethod

    static method onIndex takes nothing returns boolean
        local thistype this = allocate()
        local timer clock = NewTimerEx(this)
        set this.source = udg_UDexUnits[udg_UDex]
        set this.id = udg_UDex
        call TimerStart(clock, 0., false, function thistype.onCheckConstruction)
        return false
    endmethod

endstruct

private function init takes nothing returns nothing
    local trigger trigIndex = CreateTrigger()
    local trigger trigBuildStart = CreateTrigger()
    local trigger trigBuildEnd = CreateTrigger()

    call TriggerRegisterVariableEvent(trigIndex, "udg_UnitIndexEvent", EQUAL, 1.00)
    call TriggerAddCondition(trigIndex, function IsUnitContructing.onIndex)
    
    call TriggerRegisterAnyUnitEventBJ(trigBuildStart, EVENT_PLAYER_UNIT_CONSTRUCT_START)
    call TriggerAddCondition(trigBuildStart, function IsUnitContructing.onContructionStart)

    call TriggerRegisterAnyUnitEventBJ(trigBuildEnd, EVENT_PLAYER_UNIT_CONSTRUCT_FINISH)
    call TriggerRegisterAnyUnitEventBJ(trigBuildEnd, EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL)
    call TriggerAddCondition(trigBuildEnd, function IsUnitContructing.onContructionDone)

    set trigIndex = null
    set trigBuildStart = null
    set trigBuildEnd = null
endfunction

endlibrary
//***************************************************************************
//*  FaceAnimInit
/////////// Doomhammer
////////////////////////////// 1.9 seconds
function LoadFacialAnimationDoomhammer01 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SDoomhammer1, "O08Thrall32")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SDoomhammer1, "Map-Thrall")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SDoomhammer1, "sound/dialogue/faceanimation/orc08/facialanimation/thrall.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SDoomhammer1, "Well done, Tharbek." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SDoomhammer1, "Orgrim Doomhammer" )
endfunction
////////////////////////////// 4.754 seconds 
function LoadFacialAnimationDoomhammer02 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SDoomhammer2, "T01Grunt39")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SDoomhammer2, "Map-Grunt")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SDoomhammer2, "sound/dialogue/faceanimation/prologue01/facialanimation/grunt.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SDoomhammer2, "And I’m about to, Rend, now listen all of you." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SDoomhammer2, "Orgrim Doomhammer" )
endfunction
////////////////////////////// 8.9 seconds 
function LoadFacialAnimationDoomhammer03 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SDoomhammer3, "T02Thrall005")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SDoomhammer3, "Map-Thrall")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SDoomhammer3, "sound/dialogue/faceanimation/prologue02/facialanimation/thrall.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SDoomhammer3, "The Alliance believes we’ve withdrawn from their paltry northern cities to attack here, but they are fools who will soon see the errors of their ways." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SDoomhammer3, "Orgrim Doomhammer" )
endfunction
////////////////////////////// 9.4 seconds 
function LoadFacialAnimationDoomhammer04 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SDoomhammer4, "D03Thrall13")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SDoomhammer4, "Map-Thrall")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SDoomhammer4, "sound/dialogue/faceanimation/prologue03/facialanimation/thrall.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SDoomhammer4, "Don’t be rash, Rend, we’re fighting the Wildhammer Clan here. Varok told me of their ‘ferocity’ back when we were yet invading Khaz Modan." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SDoomhammer4, "Orgrim Doomhammer" )
endfunction
////////////////////////////// 2.9 seconds 
function LoadFacialAnimationDoomhammer05 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SDoomhammer5, "T01Grunt22")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SDoomhammer5, "Map-Grunt")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SDoomhammer5, "sound/dialogue/faceanimation/prologue01/facialanimation/grunt.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SDoomhammer5, "This matter is not your concern though." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SDoomhammer5, "Orgrim Doomhammer" )
endfunction
////////////////////////////// 10.6 seconds 
function LoadFacialAnimationDoomhammer06 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SDoomhammer6, "T02Thrall047")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SDoomhammer6, "Map-Thrall")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SDoomhammer6, "sound/dialogue/faceanimation/prologue02/facialanimation/thrall.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SDoomhammer6, "No, Zul’jin sent word to prepare a boat for you east of here. Take Utok with you and head for Tyr’s Hand, aid your brother in destroying that city." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SDoomhammer6, "Orgrim Doomhammer" )
endfunction
////////////////////////////// 10.9 seconds 
function LoadFacialAnimationDoomhammer07 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SDoomhammer7, "T02Thrall047")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SDoomhammer7, "Map-Thrall")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SDoomhammer7, "sound/dialogue/faceanimation/prologue02/facialanimation/thrall.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SDoomhammer7, "I’ll never trust blades that served the Shadow Council or Gul’dan, she’ll always be a threat. Guard the camp, Eitrigg, while we concentrate on the Dwarven settlements." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SDoomhammer7, "Orgrim Doomhammer" )
endfunction
////////////////////////////// 3.866 seconds 
function LoadFacialAnimationDoomhammer08 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SDoomhammer8, "T02Thrall007")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SDoomhammer8, "Map-Thrall")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SDoomhammer8, "sound/dialogue/faceanimation/prologue02/facialanimation/thrall.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SDoomhammer8, "What?! Why are these scum so far from their home?!" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SDoomhammer8, "Orgrim Doomhammer" )
endfunction
////////////////////////////// 2.11 seconds  
function LoadFacialAnimationDoomhammer09 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SDoomhammer10, "O02Thrall29")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SDoomhammer10, "Map-Thrall")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SDoomhammer10, "sound/dialogue/faceanimation/orc02/facialanimation/thrall.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SDoomhammer10, "Hello...old friend." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SDoomhammer10, "Orgrim Doomhammer" )
endfunction
////////////////////////////// 5.6 seconds 
function LoadFacialAnimationDoomhammer10 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SDoomhammer11, "D04Thrall41")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SDoomhammer11, "Map-Thrall")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SDoomhammer11, "sound/dialogue/faceanimation/prologue04/facialanimation/thrall.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SDoomhammer11, "You, strong warrior, have earned honorable death by my hands." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SDoomhammer11, "Orgrim Doomhammer" )
endfunction
////////////////////////////// 7.131 seconds 
function LoadFacialAnimationDoomhammer11 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SDoomhammer12, "O02WarsongOrc13")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SDoomhammer12, "Map-Grunt")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SDoomhammer12, "sound/dialogue/faceanimation/prologue04/facialanimation/grunt.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SDoomhammer12, "Eitrigg! Our work here is done! The Goblins will destroy the pass behind us. Until then, protect them!" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SDoomhammer12, "Orgrim Doomhammer" )
endfunction
////////////////////////////// 
//////////////////////////////  
////////////////////////////// 
//////////////////////////////
/////////// Troll
//////////////////////////////
//////////////////////////////
////////////////////////////// 4.9 seconds 
function LoadFacialAnimationTroll01 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SAmaniPriest1, "D04WitchDoctor34")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SAmaniPriest1, "Map-WitchDoctor")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SAmaniPriest1, "sound/dialogue/faceanimation/prologue04/facialanimation/witchdoctor.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SAmaniPriest1, "Mighty Zul'jin, ya honor us with ya presence!" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SAmaniPriest1, "Amani Troll" )
endfunction
////////////////////////////// 4.5 seconds 
function LoadFacialAnimationTroll02 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SAmaniPriest2, "D04WitchDoctor34")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SAmaniPriest2, "Map-WitchDoctor")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SAmaniPriest2, "sound/dialogue/faceanimation/prologue04/facialanimation/witchdoctor.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SAmaniPriest2, "It is Zul'jin! Have ya come to aid us with de Dwarves?" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SAmaniPriest2, "Amani Troll" )
endfunction
////////////////////////////// 4.12 seconds 
function LoadFacialAnimationTroll03 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SAmaniPriest3, "D04WitchDoctor34")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SAmaniPriest3, "Map-WitchDoctor")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SAmaniPriest3, "sound/dialogue/faceanimation/prologue04/facialanimation/witchdoctor.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SAmaniPriest3, "Da leader he be here! Bless us!" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SAmaniPriest3, "Amani Troll" )
endfunction
////////////////////////////// 
////////////////////////////// 
//////////////////////////////
/////////// Eitrig
//////////////////////////////
//////////////////////////////
////////////////////////////// 15.2 seconds 
function LoadFacialAnimationEitrig01 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SEitrigg1, "D05Thrall23")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SEitrigg1, "Map-Thrall")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SEitrigg1, "sound/dialogue/faceanimation/prologue05/facialanimation/thrall.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SEitrigg1, "Apologies for interrupting Warchief; why are we yet caging Garona after proving herself subservient in Khaz Modan? I'll watch her as long as you say, but I believe she earned being unshackled at the least." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SEitrigg1, "Eitrigg" )
endfunction
////////////////////////////// 2.19 seconds O01Thrall34
function LoadFacialAnimationEitrig02 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SEitrigg2, "O01Thrall34")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SEitrigg2, "Map-Thrall")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SEitrigg2, "sound/dialogue/faceanimation/orc01/facialanimation/thrall.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SEitrigg2, "By your will, Warchief." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SEitrigg2, "Eitrigg" )
endfunction
////////////////////////////// 2.768 seconds 
function LoadFacialAnimationEitrig03 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SEitrigg3, "D05WolfRider07")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SEitrigg3, "Map-WolfRider")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SEitrigg3, "sound/dialogue/faceanimation/prologue05/facialanimation/wolfrider.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SEitrigg3, "Warchief! The Elves are attacking us!" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SEitrigg3, "Eitrigg" )
endfunction
////////////////////////////// 5.746 seconds 
function LoadFacialAnimationEitrig04 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SEitrigg4, "O07Thrall05")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SEitrigg4, "Map-Thrall")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SEitrigg4, "sound/dialogue/faceanimation/orc07/facialanimation/thrall.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SEitrigg4, "Go Warchief, I will halt them with all my strength! lok’tar ogar!" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SEitrigg4, "Eitrigg" )
endfunction
////////////////////////////// 4.93 seconds 
function LoadFacialAnimationEitrig05 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SEitrigg5, "O04Grom27")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SEitrigg5, "Map-HellScream")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SEitrigg5, "sound/dialogue/faceanimation/orc04/facialanimation/hellscream.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SEitrigg5, "Damn it! Release her! Even a half orc should die with a blade in her hand!" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SEitrigg5, "Eitrigg" )
endfunction
////////////////////////////// 5.172 seconds 
function LoadFacialAnimationEitrig06 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SEitrigg6, "O04Grom27")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SEitrigg6, "Map-HellScream")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SEitrigg6, "sound/dialogue/faceanimation/orc04/facialanimation/hellscream.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SEitrigg6, "Garona! Bah! Damn it! Defend the camp warriors!" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SEitrigg6, "Eitrigg" )
endfunction
////////////////////////////// 5.9 seconds 
function LoadFacialAnimationEitrig07 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SEitrigg7, "O07Thrall02")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SEitrigg7, "Map-Thrall")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SEitrigg7, "sound/dialogue/faceanimation/orc07/facialanimation/thrall.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SEitrigg7, "Garona...you...you.." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SEitrigg7, "Eitrigg" )
endfunction
////////////////////////////// 
////////////////////////////// 
//////////////////////////////
/////////// Elf
//////////////////////////////
////////////////////////////// 6.556 seconds 
function LoadFacialAnimationElf01 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SElvenRanger1, "H08Captain01")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SElvenRanger1, "Map-TheCaptain")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SElvenRanger1, "sound/dialogue/faceanimation/human08/facialanimation/thecaptain.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SElvenRanger1, "You are not welcome here. One filthy race defiling this land is more than enough." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SElvenRanger1, "Elf Ranger" )
endfunction
////////////////////////////// 
////////////////////////////// 
/////////// Falstad
////////////////////////////// 2.795 seconds 
function LoadFacialAnimationFalstad01 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SFalstaaaaaaaad1, "H08Arthas13")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SFalstaaaaaaaad1, "Map")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SFalstaaaaaaaad1, "sound/dialogue/faceanimation/human08/facialanimation/arthas.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SFalstaaaaaaaad1, "Falstaaaaaaaaad!" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SFalstaaaaaaaad1, "Dwarf" )
endfunction
////////////////////////////// 
////////////////////////////// 
//////////////////////////////
/////////// Garona
//////////////////////////////
////////////////////////////// 11.415 seconds  
function LoadFacialAnimationGarona01 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SGarona1, "U04ASylvanas01")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SGarona1, "Map-SylvanusWindrunner")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SGarona1, "sound/dialogue/faceanimation/undead04/facialanimation/sylvanuswindrunner.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SGarona1, "Eitrigg! We fought together on many fronts, I don’t want you to trust me! but I can help you! please, get me out! I can fight!" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SGarona1, "Garona" )
endfunction
////////////////////////////// 2.899 seconds 
function LoadFacialAnimationGarona02 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SGarona2, "U03BSylvanas17")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SGarona2, "Map-SylvanusWindrunner")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SGarona2, "sound/dialogue/faceanimation/undead03/facialanimation/sylvanuswindrunner.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SGarona2, "There’s too many of them! " )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SGarona2, "Garona" )
endfunction
////////////////////////////// 7.9 seconds 
function LoadFacialAnimationGarona03 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SGarona3, "U03BSylvanas14")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SGarona3, "Map-SylvanusWindrunner")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SGarona3, "sound/dialogue/faceanimation/undead03/facialanimation/sylvanuswindrunner.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SGarona3, "Do not waste your breath, you’re not dying on me today. I’ll patch you up and leave, my debts are paid. I suggest you do the same." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SGarona3, "Garona" )
endfunction
////////////////////////////// 2.262 seconds 
function LoadFacialAnimationGarona04 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_TyrandePissed1, "U03BSylvanas17")
   call SetSoundFacialAnimationGroupLabel(gg_snd_TyrandePissed1, "Map-SylvanusWindrunner")
   call SetSoundFacialAnimationSetFilepath(gg_snd_TyrandePissed1, "sound/dialogue/faceanimation/undead03/facialanimation/sylvanuswindrunner.animset")
   call SetDialogueTextKey( gg_snd_TyrandePissed1, "I can make you look like and accident..." )
   call SetDialogueSpeakerNameKey( gg_snd_TyrandePissed1, "Garona" )
endfunction
////////////////////////////// 7.47 seconds 
function LoadFacialAnimationGarona05 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_TyrandePissed3, "U03BSylvanas14")
   call SetSoundFacialAnimationGroupLabel(gg_snd_TyrandePissed3, "Map-SylvanusWindrunner")
   call SetSoundFacialAnimationSetFilepath(gg_snd_TyrandePissed3, "sound/dialogue/faceanimation/undead03/facialanimation/sylvanuswindrunner.animset")
   call SetDialogueTextKey( gg_snd_TyrandePissed3, "I'm finding myself in demand from human commanders and sorcereres. I have to stay away from these weird perverts!" )
   call SetDialogueSpeakerNameKey( gg_snd_TyrandePissed3, "Garona" )
endfunction
////////////////////////////// 6.29 seconds 
function LoadFacialAnimationGarona06 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_TyrandePissed4, "U03BSylvanas14")
   call SetSoundFacialAnimationGroupLabel(gg_snd_TyrandePissed4, "Map-SylvanusWindrunner")
   call SetSoundFacialAnimationSetFilepath(gg_snd_TyrandePissed4, "sound/dialogue/faceanimation/undead03/facialanimation/sylvanuswindrunner.animset")
   call SetDialogueTextKey( gg_snd_TyrandePissed4, "One day I will have true freedom, far from orcs, demons and death..." )
   call SetDialogueSpeakerNameKey( gg_snd_TyrandePissed4, "Garona" )
endfunction
////////////////////////////// 5.616 seconds 
function LoadFacialAnimationGarona07 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_TyrandePissed5, "U04ASylvanas20")
   call SetSoundFacialAnimationGroupLabel(gg_snd_TyrandePissed5, "Map-SylvanusWindrunner")
   call SetSoundFacialAnimationSetFilepath(gg_snd_TyrandePissed5, "sound/dialogue/faceanimation/undead04/facialanimation/sylvanuswindrunner.animset")
   call SetDialogueTextKey( gg_snd_TyrandePissed5, "I traded one master for another... At least this one doesn't have mind control..." )
   call SetDialogueSpeakerNameKey( gg_snd_TyrandePissed5, "Garona" )
endfunction
////////////////////////////// 
////////////////////////////// 
/////////// Goblins
//////////////////////////////
//////////////////////////////
//////////////////////////////
////////////////////////////// 4.49 seconds 
function LoadFacialAnimationGoblin01 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SGoblinSappers1, "O04Goblin17")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SGoblinSappers1, "Map-GoblinSapper")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SGoblinSappers1, "sound/dialogue/faceanimation/orc04/facialanimation/goblinsapper.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SGoblinSappers1, "We’ll need more time preparing the explosives boss, protect us while we do that!" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SGoblinSappers1, "Goblin Sappers" )
endfunction
////////////////////////////// 3.265 seconds 
function LoadFacialAnimationGoblin02 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SGoblinSappers2, "O04Goblin17")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SGoblinSappers2, "Map-GoblinSapper")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SGoblinSappers2, "sound/dialogue/faceanimation/orc04/facialanimation/goblinsapper.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SGoblinSappers2, "The explosives are ready! Clear the area!" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SGoblinSappers2, "Goblin Sappers" )
endfunction
////////////////////////////// 
////////////////////////////// 
//////////////////////////////
/////////// Kurdran
//////////////////////////////
//////////////////////////////
//////////////////////////////
//////////////////////////////
////////////////////////////// 3.317 seconds 
function LoadFacialAnimationKurdran01 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SKurdran1, "H01Arthas10")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SKurdran1, "Map")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SKurdran1, "sound/dialogue/faceanimation/human01/facialanimation/arthas.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SKurdran1, "Blasted mongrels, they’ve decimated my countrymen!" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SKurdran1, "Kurdran Wildhammer" )
endfunction
////////////////////////////// 4.362 seconds 
function LoadFacialAnimationKurdran02 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SKurdran2, "H01Arthas18")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SKurdran2, "Map")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SKurdran2, "sound/dialogue/faceanimation/human01/facialanimation/arthas.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SKurdran2, "Help me drive them off, and I’ll consider joining this ‘Alliance’ of yours, son of Arathi." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SKurdran2, "Kurdran Wildhammer" )
endfunction
////////////////////////////// 4.728 seconds 
function LoadFacialAnimationKurdran03 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SKurdran3, "H02Antonidas29")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SKurdran3, "Map-Antonidas")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SKurdran3, "sound/dialogue/faceanimation/human02interlude/facialanimation/antonidas.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SKurdran3, "Blasted Orcs, they’re smarter than they look! The way north has been cut off." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SKurdran3, "Kurdran Wildhammer" )
endfunction
////////////////////////////// 5.98 seconds 
function LoadFacialAnimationKurdran04 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SKurdran4, "H02Uther12")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SKurdran4, "Map")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SKurdran4, "sound/dialogue/faceanimation/human02interlude/facialanimation/uther.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SKurdran4, "We’re with you, Anduin Lothar. This ‘Horde’ is a menace to everyone, and we’ll not stop until it’s dealt with." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SKurdran4, "Kurdran Wildhammer" )
endfunction
////////////////////////////// 
////////////////////////////// 
/////////// Lothar
////////////////////////////// 5.12 seconds  
function LoadFacialAnimationLothar01 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SLothar1, "H01Uther01")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SLothar1, "Map")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SLothar1, "sound/dialogue/faceanimation/human02interlude/facialanimation/uther.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SLothar1, "Fear not friend, they will pay for all their atrocities." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SLothar1, "Anduin Lothar" )
endfunction
////////////////////////////// 9.98 seconds 
function LoadFacialAnimationLothar02 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SLothar2, "H08Emissary04")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SLothar2, "Map-Chaplain")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SLothar2, "sound/dialogue/faceanimation/human08/facialanimation/chaplain.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SLothar2, "Doomhammer! I owe you pain eternal for this transgression and all the misery you Horde monsters have caused in Azeroth." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SLothar2, "Anduin Lothar" )
endfunction
////////////////////////////// 7.62 seconds 
function LoadFacialAnimationLothar03 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SLothar3, "H06Necromancer20")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SLothar3, "Map-Necromancer")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SLothar3, "sound/dialogue/faceanimation/human06/facialanimation/necromancer.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SLothar3, "...and your ploy has been foiled, the rest of our armies have been sent to deal with your so called “clans”." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SLothar3, "Anduin Lothar" )
endfunction
////////////////////////////// 4.67 seconds 
function LoadFacialAnimationLothar04 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SLothar4, "H01Uther03")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SLothar4, "Map")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SLothar4, "sound/dialogue/faceanimation/human01/facialanimation/uther.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SLothar4, "This soil will not be stained with my blood! Charge!" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SLothar4, "Anduin Lothar" )
endfunction
////////////////////////////// 5.27 seconds 
function LoadFacialAnimationLothar05 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SLothar5, "H01Uther05")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SLothar5, "Map")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SLothar5, "sound/dialogue/faceanimation/human01/facialanimation/uther.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SLothar5, "Their leader is...pragmatic, he’s always a step ahead." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SLothar5, "Anduin Lothar" )
endfunction
////////////////////////////// 
////////////////////////////// 
//////////////////////////////
//////////////////////////////
/////////// Rend
//////////////////////////////
////////////////////////////// 7.7 seconds 
function LoadFacialAnimationRend01 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SRend1, "O03Thrall13")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SRend1, "Map-Thrall")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SRend1, "sound/dialogue/faceanimation/orc03/facialanimation/thrall.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SRend1, "We've been traveling this narrow mountain pass for sometime warchief, and you still haven’t told us what are we doing here." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SRend1, "Rend Blackhand" )
endfunction
////////////////////////////// 4.28 seconds 
function LoadFacialAnimationRend02 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SRend2, "O03Thrall21")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SRend2, "Map-Thrall")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SRend2, "sound/dialogue/faceanimation/orc03/facialanimation/thrall.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SRend2, "Why not meet them in battle, head on? What is this place?" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SRend2, "Rend Blackhand" )
endfunction
////////////////////////////// 3.0 seconds 
function LoadFacialAnimationRend03 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SRend3, "T01Thrall64")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SRend3, "Map-Thrall")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SRend3, "sound/dialogue/faceanimation/prologue01/facialanimation/thrall.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SRend3, "The Dwarves pose no threat, Zul’jin." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SRend3, "Rend Blackhand" )
endfunction
////////////////////////////// 1.9 seconds 
function LoadFacialAnimationRend04 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SRend4, "T01Thrall66")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SRend4, "Map-Thrall")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SRend4, "sound/dialogue/faceanimation/prologue01/facialanimation/thrall.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SRend4, "I’m I not to fight here?!" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SRend4, "Rend Blackhand" )
endfunction
////////////////////////////// 4.25 seconds 
function LoadFacialAnimationRend05 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SRend5, "T01Grunt39")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SRend5, "Map-Grunt")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SRend5, "sound/dialogue/faceanimation/prologue01/facialanimation/grunt.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SRend5, "Hmmm….very well, let’s go Utok." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SRend5, "Rend Blackhand" )
endfunction
////////////////////////////// 
////////////////////////////// 
//////////////////////////////
/////////// Tharbek
//////////////////////////////
////////////////////////////// 4.9 seconds 
function LoadFacialAnimationTharbek01 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08STharbek1, "T01Thrall03")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08STharbek1, "Map-Thrall")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08STharbek1, "sound/dialogue/faceanimation/prologue01/facialanimation/thrall.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08STharbek1, "Hurry up you mangy dogs, the Warchief could arrive at any moment." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08STharbek1, "Tharbek" )
endfunction
////////////////////////////// 4.75 seconds 
function LoadFacialAnimationTharbek02 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08STharbek2, "T01Grunt39")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08STharbek2, "Map-Grunt")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08STharbek2, "sound/dialogue/faceanimation/prologue01/facialanimation/grunt.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08STharbek2, "Lok’tar Warchief, your camp is up and running as you ordered." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08STharbek2, "Tharbek" )
endfunction
//////////////////////////////  
////////////////////////////// 
//////////////////////////////
/////////// Dwarf
//////////////////////////////
//////////////////////////////
////////////////////////////// 6.8 seconds 
function LoadFacialAnimationDwarf01 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SWildhammerThane1, "H02DwarfScout16")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SWildhammerThane1, "Map-MortarTeam")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SWildhammerThane1, "sound/dialogue/faceanimation/human02/facialanimation/mortarteam.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SWildhammerThane1, "By my beard! we’re under attack by the savages, send word to Kurdran laddies and defend yer homes!" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SWildhammerThane1, "Thane" )
endfunction
////////////////////////////// 3.9 seconds 
function LoadFacialAnimationDwarf02 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SWildhammerThane2, "H02DwarfHunter17")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SWildhammerThane2, "Map-MortarTeam")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SWildhammerThane2, "sound/dialogue/faceanimation/human02/facialanimation/mortarteam.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SWildhammerThane2, "Trolls have brought friends… we’ll finish ye both!" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SWildhammerThane2, "Thane" )
endfunction
////////////////////////////// 
////////////////////////////// 
/////////// Zuljin
//////////////////////////////
//////////////////////////////
////////////////////////////// 17.13 seconds 
function LoadFacialAnimationZuljin01 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SZuljin1, "D03WitchDoctor10")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SZuljin1, "Map-WitchDoctor")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SZuljin1, "sound/dialogue/faceanimation/prologue03/facialanimation/witchdoctor.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SZuljin1, "Dis place was once part of da Amani Empire, ma friend, many Troll Tribes still live 'ere. it was once peaceful until de Dwarves came from da south and took dis place, dey be clashin' with us eva since." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SZuljin1, "Zul'jin" )
endfunction
////////////////////////////// 12.04 seconds 
function LoadFacialAnimationZuljin02 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SZuljin2, "D03WitchDoctor08")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SZuljin2, "Map-WitchDoctor")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SZuljin2, "sound/dialogue/faceanimation/prologue03/facialanimation/witchdoctor.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SZuljin2, "Ma brethren will rally to ma side, once I tell dem of da plan to retake our ancestral lands in da north, while Doomhammer... deals with dem Dwarves." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SZuljin2, "Zul'jin" )
endfunction
////////////////////////////// 9.43 seconds 
function LoadFacialAnimationZuljin03 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SZuljin3, "D03WitchDoctor08")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SZuljin3, "Map-WitchDoctor")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SZuljin3, "sound/dialogue/faceanimation/prologue03/facialanimation/witchdoctor.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SZuljin3, "Brothers, I be rallying de Amani to retake Zul’Aman lands. Head north to Quel’thalas. We be reclaim’in our lands." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SZuljin3, "Zul'jin" )
endfunction
////////////////////////////// 9.0 seconds 
function LoadFacialAnimationZuljin04 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SZuljin4, "D03WitchDoctor12")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SZuljin4, "Map-WitchDoctor")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SZuljin4, "sound/dialogue/faceanimation/prologue03/facialanimation/witchdoctor.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SZuljin4, "Brothers, I be rallying de Amani to retake Zul’Aman lands. Head north to Quel’thalas. We be reclaim’in our lands." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SZuljin4, "Zul'jin" )
endfunction
////////////////////////////// 10.37 seconds 
function LoadFacialAnimationZuljin05 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SZuljin5, "D03WitchDoctor08")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SZuljin5, "Map-WitchDoctor")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SZuljin5, "sound/dialogue/faceanimation/prologue03/facialanimation/witchdoctor.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SZuljin5, "Ya Trolls are to pack up and head north to rejoin our brotha's in reclaim'in Zul'Aman, we will follow ya path." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SZuljin5, "Zul'jin" )
endfunction
////////////////////////////// 11.85 seconds 
function LoadFacialAnimationZuljin06 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SZuljin6, "D03WitchDoctor08")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SZuljin6, "Map-WitchDoctor")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SZuljin6, "sound/dialogue/faceanimation/prologue03/facialanimation/witchdoctor.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SZuljin6, "Where be me mind… Elves have an outpost dere, ma brethren have clashed with dem on occasion, but if we be finish’in our job 'ere without delay, dey need to be taken care of." )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SZuljin6, "Zul'jin" )
endfunction
////////////////////////////// 5.9 seconds 
function LoadFacialAnimationZuljin07 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SZuljin7, "D03WitchDoctor23")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SZuljin7, "Map-WitchDoctor")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SZuljin7, "sound/dialogue/faceanimation/prologue03/facialanimation/witchdoctor.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SZuljin7, "Hahahaha... da sight of dead Elves be de best part of life!" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SZuljin7, "Zul'jin" )
endfunction
////////////////////////////// 7.262 seconds 
function LoadFacialAnimationZuljin08 takes nothing returns nothing
   call SetSoundFacialAnimationLabel(gg_snd_WC2Orc08SZuljin8, "D03WitchDoctor22")
   call SetSoundFacialAnimationGroupLabel(gg_snd_WC2Orc08SZuljin8, "Map-WitchDoctor")
   call SetSoundFacialAnimationSetFilepath(gg_snd_WC2Orc08SZuljin8, "sound/dialogue/faceanimation/prologue03/facialanimation/witchdoctor.animset")
   call SetDialogueTextKey( gg_snd_WC2Orc08SZuljin8, "Ma Brotha's! Our Empire will rise again off da bones an blood of de Elves!" )
   call SetDialogueSpeakerNameKey( gg_snd_WC2Orc08SZuljin8, "Zul'jin" )
endfunction
////////////////////////////// 
////////////////////////////// 
//////////////////////////////
//***************************************************************************
//*  OilHarvest

library OilHarvest initializer init uses Table, ListT, TimerUtils, IsUnitContructing, SpellEffectEvent, OrderEvent, DelayedOrder, BlizzardMessage, ConstructEvent

/*
    NOTE:
    As a general rule, never remove a unit from the game, unless you know what you're doing. This is especially true
    for any of the units concerned with this system. If you have to get rid of them, kill them.

    Also, worth noting, this system does not work with resurrection. A revived unit has the same index, but the instance
    that was tied to it was already destroyed.

    All you have to do for the system to work is to give the relevant units the relevant abilities. See Abilites in the
    globals block for more information.

    API

    call OilHarvest_setUIVisible(boolean b)
        This function will turn off both the Oil UI display and the floating text that indicates Oil amount. If you wish
        to show/hide these two different elements separately, then use the two functions below. Otherwise, this function
        is all you should ever need.

        Set to false to hide, true to unhide.

    call OilUI.setVisibile(boolean b)
        This function will hide the frames for the Oil UI. Set to false to hide, true to unhide. This applies to all players.
        
    call OilUI.setVisibilePlayer(player p, boolean b)
        This function will hide the frames for the Oil UI. Set to false to hide, true to unhide. This applies to the specified
        player.

    call OilDisplay.setAllVisibile(boolean b)
        This function will hide/unhide all texttags so that the floating texts can be hidden/restored during and after
        cutscenes. Set to false to hide, true to unhide.

    call OilPatch.killPatch(unit u)
        NEVER kill an Oil Patch directly. Always use this function if you have to kill one.

    call setPlayerOilRate(player p, integer newRate)
        Setting newRate to 125 will make tankers owned by player p to harvest 125 Oil per trip instead of the default 100.
        NB: In JASS, Player 1 starts on zero. So player 1 would be Player(0), player 3 would be Player(2), etc.

    call updateNearestRigDepot(integer playerNumber)
        This will calculate distances between all player-owned Rigs (platforms) and Depots (shipyards).

    call updateOwnerships(unit whichRigOrDepot, player oldOwner, player newOwner)
        When a unit changes ownership, call this function after to update the player lists
        NB: In JASS, Player 1 starts on zero. So the ID of player 1 would be 0, player 3 would be 2, etc.

*/

globals
    // Parameters
    private constant real TEXT_TAG_HEIGHT = 360.
    private constant real FONT_SIZE = TextTagSize2Height(10.)
    private constant string FONT_COLOUR = "|cff0a32aa"
    
    private constant integer OIL_PATCH_AMOUNT_DEFAULT = 12500
    private constant integer OIL_PATCH_UNIT_ID = 'n60P' // this is used to generate an Oil Patch
    private constant real OIL_ZONE_LENGTH = 200.
    private constant real OIL_ZONE_HEIGHT = 200.

    private constant integer OIL_LOW_WARNING_THRESHOLD = 1000
    private constant real LOW_WARNING_DURATION = 4.
    private constant integer LOW_WARNING_R = 255 // from 0 to 255
    private constant integer LOW_WARNING_G = 255 // from 0 to 255
    private constant integer LOW_WARNING_B = 0 // from 0 to 255
    private constant boolean LOW_WARNING_STYLE = false // false is a 'simple' or 'attack' ping. true is a 'falshy' ping.
    private constant string LOW_WARNING_ORC = "Sound\\Interface\\Warning\\Orc\\GruntOilPatchLow1.flac"
    private constant string LOW_WARNING_HUMAN = "Sound\\Interface\\Warning\\Human\\HumanOilPatchLow1.flac"
    private constant string LOW_WARNING_MESSAGE = "The oil patch is running low"
    private constant string LOW_WARNING_COLOUR_CODE = "|c00FF7F00"

    private constant real DEPLETED_WARNING_DURATION = 4.
    private constant integer DEPLETED_WARNING_R = 255 // from 0 to 255
    private constant integer DEPLETED_WARNING_G = 0 // from 0 to 255
    private constant integer DEPLETED_WARNING_B = 0 // from 0 to 255
    private constant boolean DEPLETED_WARNING_STYLE = false // false is a 'simple' or 'attack' ping. true is a 'falshy' ping.
    private constant string DEPLETED_WARNING_ORC = "Sound\\Interface\\Warning\\Orc\\GruntOilPatchDepleted1.flac"
    private constant string DEPLETED_WARNING_HUMAN = "Sound\\Interface\\Warning\\Human\\HumanOilPatchLow1.flac"
    private constant string DEPLETED_WARNING_MESSAGE = "|c00640000Oil patch is depleted|r"
    private constant string DEPLETED_WARNING_COLOUR_CODE = "|c00640000"

    // Amount of Oil collected per run
    private constant integer OIL_COLLECTION_RATE_DEFAULT = 100
    private constant real OIL_COLLECTION_INTERVAL = 3. // in seconds
    private constant integer ORDER_COLLECTOR_ACTION_ORDER = 852529 // absord mana
    private constant integer ORDER_SMART = 851971

    // frames
    private constant real OIL_UI_ICON_SIZE = .01640625
    private constant integer OIL_UI_FONT_SIZE = 11
    private constant real OIL_UI_MASTER_FRAME_X = .0705
    private constant real OIL_UI_MASTER_FRAME_Y = OIL_UI_ICON_SIZE
    private constant real OIL_UI_FRAME_OFFSET = .016
    private constant real OIL_UI_AMOUNT_OFFSET = .0005
    private constant string OIL_UI_ICON_PATH = "UI\\resourceoil.dds"
    // private constant real OIL_UI_

    private framehandle oilMasterFrame = null
    private framehandle oilHoverFrame = null
    private framehandle oilIcon = null
    private framehandle oilAmount = null
    private framehandle oilTooltip = null
    private framehandle oilTooltipTitle = null

    // Abilities

        // This identifies Oil Patches as being just that, Oil Patches. It will automatically create a rect around the
        // Oil Patch so that any Rigs constructed on top of it will know which Patch it's supposed to interract with.
        // Can be a hidden dummy ability.
        constant integer OIL_PATCH_ABIL = 'A65L' // [TAG] - Oil Patch

        // The ability that idenfies a unit as being an Oil Rig, and thus will accept Collectors to gather Oil from it.
        // Can be a hidden dummy ability.
        constant integer OIL_RIG_ABIL = 'A65M' // [TAG] - Oil Rig

        // The ability that identifies a unit as being an Oil Depot, and thus will accept Collectors droping off Oil at it.
        // Can be a hidden dummy ability.
        constant integer OIL_DEPOT_ABIL = 'A65K' // [TAG] - Oil Depot

        // This identifies a unit as a Collector. The ability must be based on Channel, must only target player-owned
        // units, and must have ORDER_COLLECTOR_ACTION_ORDER as the order id. This is how the system knows the Collector
        // is in range to either queue it for harvesting oil at Rigs or for delivering oil at Depots (Shipyards). This
        // ability is hidden and only interacts with the system. The range must be something like 100 or lower.
        constant integer OIL_COLLECTOR_ABIL = 'A65H' // [SYSTEM] - Oil Collector Action

        // this is the ability you see on Collectors. An empty Collector will be tasked to automatically go harvest.
        // A full Collector will automatically go deliver the oil. It is no necessary to add this ability to Tankers,
        // the system will do that for you.
        constant integer COLLECTOR_ACTION_ABIL = 'A65G' // Collect Oil

            // When the Collector has no Oil, the COLLECTOR_ACTION_ABIL will have this Icon.
            constant string COLLECTOR_ABIL_ICON_EMPTY = "ReplaceableTextures\\CommandButtons\\BTNGatherGold.blp"

            // When the Collector has no Oil, the COLLECTOR_ACTION_ABIL will have this Tooltip (Name).
            constant string COLLECTOR_ABIL_NAME_EMPTY = "Gather Oil"

            // When the Collector has no Oil, the COLLECTOR_ACTION_ABIL will have this Tooltip Extended (Description).
            constant string COLLECTOR_ABIL_DESCRIPTION_EMPTY = "Collect Oil from Oil Rigs."

            // When the Collector has Oil, the COLLECTOR_ACTION_ABIL will have this Icon.
            constant string COLLECTOR_ABIL_ICON_FULL = "ReplaceableTextures\\CommandButtons\\BTNReturnGoods.blp"

            // When the Collector has Oil, the COLLECTOR_ACTION_ABIL will have this Tooltip (Name).
            constant string COLLECTOR_ABIL_NAME_FULL = "Deliver Oil"

            // When the Collector has Oil, the COLLECTOR_ACTION_ABIL will have this Tooltip Extended (Description).
            constant string COLLECTOR_ABIL_DESCRIPTION_FULL = "Return the Oil to the nearest Shipyard."

    // lists
    private IntegerList array playerListRigs
    private IntegerList array playerListDepots
    private IntegerList listZones = 0

    // Other
    private integer array playerOil
    private integer array playerOilRate
    private constant real MAX_DISTANCE = 9999999999999.
    private unit tankerTarget = null

    // utility
    private constant location loc = Location(0., 0.)
    private constant group hideGroup = CreateGroup()
    private constant real AREA_HIDE_RADIUS = 512.
    private boolean uiVisible = true

    private constant player NEUTRAL_PLAYER = Player(PLAYER_NEUTRAL_PASSIVE)

endglobals


/*
    Struct for hiding/showing texttags during cinematics
*/
struct OilDisplay

    texttag tag
    player owner
    integer index

    private static thistype array tagStack
    private static integer count = 0

    method destroy takes nothing returns nothing
        set tagStack[this.index] = tagStack[count]
        set tagStack[count].index = this.index
        set tagStack[count] = 0
        set count = count - 1
        call DestroyTextTag(this.tag)
        set this.tag = null
        call this.deallocate()
    endmethod

    static method new takes player owner returns thistype
        local thistype this = allocate()
        set this.tag = CreateTextTag()
        set this.owner = owner
        set count = count + 1
        set tagStack[count] = this
        set this.index = count
        return this
    endmethod

    method determineVisibility takes nothing returns nothing
        if uiVisible then
            if this.owner == NEUTRAL_PLAYER then
                call SetTextTagVisibility(this.tag, true)
            else
                call SetTextTagVisibility(this.tag, GetLocalPlayer() == this.owner)
            endif
        else
            call SetTextTagVisibility(this.tag, false)
        endif
    endmethod

    method setText takes string s returns nothing
        call SetTextTagText(this.tag, s, FONT_SIZE)
        call this.determineVisibility()
    endmethod

    static method setAllVisibile takes boolean flag returns nothing
        local integer i = 0
        // when true, show all.
        if flag then
            loop
                set i = i + 1
                exitwhen i > count
                if tagStack[i].owner == NEUTRAL_PLAYER then
                    call SetTextTagVisibility(tagStack[i].tag, true)
                else
                    call SetTextTagVisibility(tagStack[i].tag, GetLocalPlayer() == tagStack[i].owner)
                endif
            endloop
        else
            loop
                set i = i + 1
                exitwhen i > count
                call SetTextTagVisibility(tagStack[i].tag, false)
            endloop
        endif
    endmethod

endstruct

/*
    Struct for quickly reading rect details.
*/
struct Zone

    real xMin
    real xMax
    real yMin
    real yMax
    real xMid
    real yMid
    rect r

    static method new takes real centerX, real centerY, real halfLength, real halfHeight returns thistype
        local thistype this = allocate()
        set this.xMid = centerX
        set this.xMin = centerX - halfLength
        set this.xMax = centerX + halfLength
        set this.yMid = centerY
        set this.yMin = centerY - halfHeight
        set this.yMax = centerY + halfHeight
        set this.r = Rect(this.xMin, this.yMin, this.xMax, this.yMax)
        return this
    endmethod

    method destroy takes nothing returns nothing
        call RemoveRect(this.r)
        set this.r = null
    endmethod

    method move takes real newX, real newY returns nothing
        call MoveRectTo(this.r, newX, newY)
        set this.xMid = newX
        set this.xMin = GetRectMinX(this.r)
        set this.xMax = GetRectMaxX(this.r)
        set this.yMid = newY
        set this.yMin = GetRectMinY(this.r)
        set this.yMax = GetRectMaxY(this.r)
    endmethod

endstruct

private function groupShow takes nothing returns nothing
    call ShowUnit(GetEnumUnit(), true)
endfunction

private function groupHide takes nothing returns boolean
    call ShowUnit(GetFilterUnit(), false)
    return true
endfunction

function areaHideUnits takes real x, real y, real radius returns nothing
    local unit u
    call GroupEnumUnitsInRange(hideGroup, x, y, radius, Filter(function groupHide))
endfunction

function unhideUnits takes nothing returns nothing
    call ForGroup(hideGroup, function groupShow)
    call GroupClear(hideGroup)
endfunction

function getUnitZ takes unit u returns real
    call MoveLocation(loc, GetUnitX(u), GetUnitY(u))
    return GetLocationZ(loc) + GetUnitFlyHeight(u)
endfunction

function playerAddOil takes player play, integer amount returns nothing
    local integer playerNum = GetPlayerId(play)
    local integer amnt = playerOil[playerNum] + amount
    local string oil = I2S(amnt)
    set playerOil[playerNum] = amnt
    // update UI
    // call BJDebugMsg("P" + I2S(playerNum+1) + " Oil: " + I2S(playerOil[playerNum]))
    if GetLocalPlayer() == play then
        call BlzFrameSetText(oilAmount, oil)
        call BlzFrameSetText(oilTooltipTitle, "Oil: " + oil)
    endif
endfunction

function getPlayerOil takes player play returns integer
    return playerOil[GetPlayerId(play)]
endfunction

// this determines how much Oil is gathered per trip
function setPlayerOilRate takes player play, integer newRate returns nothing
    set playerOilRate[GetPlayerId(play)] = newRate
endfunction

private function distCheckSquared takes OilRig rig, OilDepot depot returns real
    local real dx = depot.x - rig.x
    local real dy = depot.y - rig.y
    return dx * dx + dy * dy
endfunction

private function distCheckSquaredUnit takes unit source, unit target returns real
    local real dx = GetUnitX(target) - GetUnitX(source)
    local real dy = GetUnitY(target) - GetUnitY(source)
    return dx * dx + dy * dy
endfunction

// updates which rig is nearest to which depot per player.
function updateNearestRigDepot takes integer playerNum returns nothing
    local IntegerListItem linkRig = 0
    local IntegerListItem linkDepot = 0

    local real distance
    local real distCheck

    local OilRig rig = 0
    local OilDepot depot = 0

    // check nearest depot per rig
    set linkRig = playerListRigs[playerNum].first
    loop
        exitwhen linkRig == 0

        set linkDepot = playerListDepots[playerNum].first
        set distance = MAX_DISTANCE
        set rig = linkRig.data
        loop
            exitwhen linkDepot == 0
            set distCheck = distCheckSquared(rig, linkDepot.data)
            if distCheck <= distance then
                set distance = distCheck
                set depot = linkDepot.data
            endif
            set linkDepot = linkDepot.next
        endloop

        if depot == 0 then
            set rig.nearestDepot = null
        else
            set rig.nearestDepot = depot.source
        endif

        set linkRig = linkRig.next
    endloop

    set rig = 0
    set depot = 0

    // check nearest rig per depot
    set linkDepot = playerListDepots[playerNum].first
    loop
        exitwhen linkDepot == 0

        set linkRig = playerListRigs[playerNum].first
        set distance = MAX_DISTANCE
        set depot = linkDepot.data
        loop
            exitwhen linkRig == 0
            set distCheck = distCheckSquared(linkRig.data, depot)
            if distCheck <= distance then
                set distance = distCheck
                set rig = linkRig.data
            endif
            set linkRig = linkRig.next
        endloop

        if rig == 0 then
            set depot.nearestRig = null
        else
            set depot.nearestRig = rig.source
        endif

        set linkDepot = linkDepot.next
    endloop
endfunction

function findNearestRig takes unit source returns unit
    local IntegerList list = playerListRigs[GetPlayerId(GetOwningPlayer(source))]
    local IntegerListItem link = list.first
    local real distance = MAX_DISTANCE
    local real distCheck
    local OilRig rig
    set tankerTarget = null
    loop
        exitwhen link == 0
        set rig = link.data
        set distCheck = distCheckSquaredUnit(source, rig.source)
        if distCheck <= distance then
            set distance = distCheck
            set tankerTarget = rig.source
        endif
        set link = link.next
    endloop
    return tankerTarget
endfunction

function findNearestDepot takes unit source returns unit
    local IntegerList list = playerListDepots[GetPlayerId(GetOwningPlayer(source))]
    local IntegerListItem link = list.first
    local real distance = MAX_DISTANCE
    local real distCheck
    local OilDepot depot
    set tankerTarget = null
    loop
        exitwhen link == 0
        set depot = link.data
        set distCheck = distCheckSquaredUnit(source, depot.source)
        if distCheck <= distance then
            set distance = distCheck
            set tankerTarget = depot.source
        endif
        set link = link.next
    endloop
    return tankerTarget
endfunction


/*
    The patch of Oil in the ocean. Essentially a Gold Mine in the water.
    Oil Rigs must be built on it. The Oil amount is actually determined
    by a rect.
*/
struct OilPatch

    unit source
    Zone zone
    integer amount
    integer patchIndex // the index of the oil patch unit is stored because it can get replaced due to the nature of gold-mine type units.
    OilDisplay display
    boolean giveLowWarning

    private static Table structTable
    private static real zoneX = OIL_ZONE_LENGTH * .5
    private static real zoneY = OIL_ZONE_HEIGHT * .5

    static method getRect takes rect re returns thistype
        return structTable[GetHandleId(re)]
    endmethod

    static method hasRect takes rect re returns boolean
        return structTable.has(GetHandleId(re))
    endmethod
   
    static method get takes unit u returns thistype
        return structTable[GetHandleId(u)]
    endmethod

    static method has takes unit u returns boolean
        return structTable.has(GetHandleId(u))
    endmethod

    method destroy takes nothing returns nothing
        call structTable.remove(GetHandleId(this.source))
        call structTable.remove(GetHandleId(this.zone.r))
        call this.display.destroy()
        call listZones.removeElem(this.zone)
        set this.source = null
        set this.zone = 0
        call this.deallocate()
    endmethod

    // use this function if you specifically want to kill an Oil Patch
    static method killPatch takes unit u returns nothing
        local thistype this = thistype.get(u)
        if this != 0 then
            call this.destroy()
            call UnitApplyTimedLife(u, 'BTLF', .01)
        endif
    endmethod

    method setAmount takes integer newAmount returns nothing
        set this.amount = newAmount
        call this.display.setText(FONT_COLOUR + I2S(this.amount) + "|r")
    endmethod

    method modAmount takes integer amountDifference returns nothing
        set this.amount = this.amount + amountDifference
        call this.display.setText(FONT_COLOUR + I2S(this.amount) + "|r")
        
        if this.giveLowWarning and this.amount <= OIL_LOW_WARNING_THRESHOLD then
            set this.giveLowWarning = false
            call BlizzardMessage(LOW_WARNING_MESSAGE, LOW_WARNING_COLOUR_CODE, WARNING, this.display.owner)
            if GetLocalPlayer() == this.display.owner then
                call PingMinimapEx(this.zone.xMid, this.zone.yMid, LOW_WARNING_DURATION, LOW_WARNING_R, LOW_WARNING_G, LOW_WARNING_B, LOW_WARNING_STYLE)
                if GetPlayerRace(this.display.owner) == RACE_ORC then
                    call PlaySound(LOW_WARNING_ORC)
                elseif GetPlayerRace(this.display.owner) == RACE_HUMAN then
                    call PlaySound(LOW_WARNING_HUMAN)
                endif
            endif
        endif
    endmethod

    static method setOilAmount takes unit u, integer newAmount returns nothing
        if thistype.has(u) then
            call thistype.get(u).setAmount(newAmount)
        endif
    endmethod

    method setOwnership takes player play returns nothing
        set this.display.owner = play
        if uiVisible then
            call SetTextTagVisibility(this.display.tag, GetLocalPlayer() == play)
        endif
    endmethod

    method removeOwnership takes nothing returns nothing
        set this.display.owner = NEUTRAL_PLAYER
        if uiVisible then
            call SetTextTagVisibility(this.display.tag, true)
        endif
    endmethod

    method move takes real newX, real newY returns nothing
        call SetUnitPathing(this.source, false)
        call SetUnitX(this.source, newX)
        call SetUnitY(this.source, newY)
        call SetUnitPathing(this.source, true)
        call this.zone.move(newX, newY)
    endmethod

    // when a Rig is destroyed, the Oil Patch unit is either kept hidden, removed from the game, or,
    // in the instance that an Oil Rig was cancelled, killed. This function will create a new patch
    // underneath the Oil Rig. To avoid any sort of collision, all nearby units are hidden, before the
    // patch is created, and unhidden right after. This will unfortunately deselect any nearby units.
    // In the event that the patch is attempting to be restored when it is depleted, the system will
    // instead destroy the patch instance.
    method restoreOilPatchUnit takes nothing returns nothing
        if this.amount > 0 then
            call areaHideUnits(this.zone.xMid, this.zone.yMid, AREA_HIDE_RADIUS)

            if this.patchIndex != 0 then
                call structTable.remove(this.patchIndex)
            endif

            if this.source != null then
                call RemoveUnit(this.source)
            endif
            
            set this.source = CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE), OIL_PATCH_UNIT_ID, this.zone.xMid, this.zone.yMid, bj_UNIT_FACING)
            set this.patchIndex = GetHandleId(this.source)
            set structTable[this.patchIndex] = this

            call unhideUnits()
        else
            call BlizzardMessage(DEPLETED_WARNING_MESSAGE, DEPLETED_WARNING_COLOUR_CODE, WARNING, this.display.owner)
            if GetLocalPlayer() == this.display.owner then
                call PingMinimapEx(this.zone.xMid, this.zone.yMid, DEPLETED_WARNING_DURATION, DEPLETED_WARNING_R, DEPLETED_WARNING_G, DEPLETED_WARNING_B, DEPLETED_WARNING_STYLE)
                if GetPlayerRace(this.display.owner) == RACE_ORC then
                    call PlaySound(DEPLETED_WARNING_ORC)
                elseif GetPlayerRace(this.display.owner) == RACE_HUMAN then
                    call PlaySound(DEPLETED_WARNING_HUMAN)
                endif
            endif
            call this.destroy()
        endif
    endmethod

    private method setupThings takes unit u returns nothing
        local real x = GetUnitX(u)
        local real y = GetUnitY(u)
        local player play = GetOwningPlayer(u)
        set this.display = OilDisplay.new(play)
        call SetTextTagText(this.display.tag, FONT_COLOUR + I2S(this.amount) + "|r", FONT_SIZE)
        // call SetTextTagPosUnit(this.display.tag, patch, TEXT_TAG_HEIGHT)
        call SetTextTagPos(this.display.tag, x, y, getUnitZ(u) + TEXT_TAG_HEIGHT)
        call SetTextTagPermanent(this.display.tag, true)
        call this.display.determineVisibility()

        set this.zone = Zone.new(x, y, zoneX, zoneY)
        set this.giveLowWarning = (this.amount > OIL_LOW_WARNING_THRESHOLD)
    endmethod

    static method new takes unit patch, integer amount returns thistype
        local thistype this = allocate()
        set this.source = patch
        set this.amount = amount

        call this.setupThings(patch)

        set this.patchIndex = GetHandleId(patch)
        set structTable[this.patchIndex] = this
        set structTable[GetHandleId(this.zone.r)] = this
        call listZones.push(this.zone)

        return this
    endmethod

    // for pre-placed rigs
    static method newSpecial takes unit rigUnit, integer amount returns thistype
        local thistype this = allocate()
        set this.source = null
        set this.amount = amount

        call this.setupThings(rigUnit)

        set this.patchIndex = 0
        set structTable[GetHandleId(this.zone.r)] = this
        call listZones.push(this.zone)

        return this
    endmethod

    private static method onInit takes nothing returns nothing
        set structTable = Table.create()
    endmethod

endstruct


/*
    The unit that harvests the Oil at the Oil Rig
    Eg. Oil Tanker
*/
struct OilCollector

    unit source
    unit destination
    unit assignedRigUnit
    ability gatherAbility
    integer amount
    trigger deathListener
    trigger orderListener
    OilRig activeRig // this will be zero unless the Collector is actively queueing at a specific rig.
    
    private static Table structTable
    private static constant real X_SPEED = .0355 * Cos(1.5708)
    private static constant real Y_SPEED = .0355 * Sin(1.5708)

    static method get takes unit u returns thistype
        return structTable[GetHandleId(u)]
    endmethod

    static method has takes unit u returns boolean
        return structTable.has(GetHandleId(u))
    endmethod

    method destroy takes nothing returns nothing
        call structTable.remove(GetHandleId(this.source))
        call DestroyTrigger(this.deathListener)
        call DestroyTrigger(this.orderListener)
        set this.deathListener = null
        set this.orderListener = null
        set this.source = null
        call this.deallocate()
    endmethod
    
    private static method onDeath takes nothing returns nothing
        local thistype this = thistype.get(GetTriggerUnit())
        call this.destroy()
    endmethod

    method unqueue takes nothing returns nothing
        call this.activeRig.queue.removeElem(this)
        set this.activeRig = 0
    endmethod

    // this checks if a Collector is currently queued. If ordered to do anything but right-click the Rig,
    // it will be removed from the queue.
    private static method onOrder takes nothing returns nothing
        local thistype this = thistype.get(GetTriggerUnit())
        if this.activeRig != 0 then
            if not (GetIssuedOrderId() == ORDER_SMART and GetOrderTarget() == this.activeRig.source) then
                call this.unqueue()
            endif
        endif
    endmethod

    method updateGatherAbil takes boolean full returns nothing
        local string icon = COLLECTOR_ABIL_ICON_EMPTY
        local string name = COLLECTOR_ABIL_NAME_EMPTY
        local string desc = COLLECTOR_ABIL_DESCRIPTION_EMPTY
        if full then
            set icon = COLLECTOR_ABIL_ICON_FULL
            set name = COLLECTOR_ABIL_NAME_FULL
            set desc = COLLECTOR_ABIL_DESCRIPTION_FULL
            call AddUnitAnimationProperties(this.source, "gold", true)
            call UnitAddAbilityBJ( 'A62Y', this.source )
        else
            call AddUnitAnimationProperties(this.source, "gold", false)
            call UnitRemoveAbilityBJ( 'A62Y', this.source )
            call UnitRemoveBuffBJ( 'B611', this.source )
        endif
        // call BlzSetAbilityStringLevelField(this.gatherAbility, ABILITY_SLF_ICON_NORMAL, 0, icon)
        call BlzSetAbilityStringField(this.gatherAbility, ABILITY_SF_ICON_ACTIVATED, icon)
        call BlzSetAbilityStringLevelField(this.gatherAbility, ABILITY_SLF_TOOLTIP_NORMAL, 0, name)
        call BlzSetAbilityStringLevelField(this.gatherAbility, ABILITY_SLF_TOOLTIP_NORMAL_EXTENDED, 0, desc)
    endmethod

    static method new takes unit u returns thistype
        local thistype this = allocate()
        set this.source = u
        set this.destination = null
        set this.amount = 0
        set this.activeRig = 0
        set this.assignedRigUnit = null
        call UnitAddAbility(u, COLLECTOR_ACTION_ABIL)
        set this.gatherAbility = BlzGetUnitAbility(u, COLLECTOR_ACTION_ABIL)
        call this.updateGatherAbil(false)
        
        set this.deathListener = CreateTrigger()
        call TriggerRegisterDeathEvent(this.deathListener, u)
        call TriggerAddAction(this.deathListener, function thistype.onDeath)

        set this.orderListener = CreateTrigger()
        call TriggerRegisterUnitEvent(this.orderListener, u, EVENT_UNIT_ISSUED_ORDER)
        call TriggerRegisterUnitEvent(this.orderListener, u, EVENT_UNIT_ISSUED_TARGET_ORDER)
        call TriggerRegisterUnitEvent(this.orderListener, u, EVENT_UNIT_ISSUED_POINT_ORDER)
        call TriggerAddAction(this.orderListener, function thistype.onOrder)

        set structTable[GetHandleId(u)] = this

        return this
    endmethod

    method deliverOil takes unit destination returns nothing
        set this.destination = destination
        call IssueTargetOrderById(this.source, ORDER_COLLECTOR_ACTION_ORDER, destination)
    endmethod

    method retrieveOil takes unit destination returns nothing
        set this.assignedRigUnit = destination
        call IssueTargetOrderById(this.source, ORDER_COLLECTOR_ACTION_ORDER, destination)
    endmethod

    static method retrieveOilUnit takes unit tanker, unit destination returns nothing
        local thistype this = thistype.get(tanker)
        if this != 0 then
            set this.assignedRigUnit = destination
            call IssueTargetOrderById(this.source, ORDER_COLLECTOR_ACTION_ORDER, destination)
        endif
    endmethod

    method automateOilProcess takes nothing returns nothing
        if this.amount > 0 then
            call this.deliverOil(findNearestDepot(this.source))
        else
            call this.retrieveOil(findNearestRig(this.source))
        endif
    endmethod

    method depositOil takes nothing returns nothing
        local texttag tag
        local player play = GetOwningPlayer(this.source)
        call playerAddOil(play, this.amount)

        // Delivery text
        if uiVisible then
            set tag = CreateTextTag()
            call SetTextTagText(tag, FONT_COLOUR + "+" + I2S(this.amount) + "|r", FONT_SIZE)
            call SetTextTagPos(tag, GetUnitX(this.source), GetUnitY(this.source), getUnitZ(this.source))
            call SetTextTagPermanent(tag, false)
            call SetTextTagLifespan(tag, 2.0)
            call SetTextTagFadepoint(tag, 1.0)
            call SetTextTagVelocity(tag, X_SPEED, Y_SPEED)
            call SetTextTagVisibility(tag, GetLocalPlayer() == play)
            set tag = null
        endif

        set this.amount = 0
        call this.updateGatherAbil(false)
        call DelayedOrderTarget.start(this.source, ORDER_COLLECTOR_ACTION_ORDER, 0., this.assignedRigUnit)
    endmethod

    private static method onInit takes nothing returns nothing
        set structTable = Table.create()
    endmethod

endstruct


/*
    The Oil Rig struct itself
    NB: because of the nature of Oil Patches and how a destroyed rig unit will be left without a patch,
    the death event for a rig unit is handled globally as the actual OilRig instance is only created
    upon building completion.
*/
struct OilRig

    unit source
    unit nearestDepot
    timer clock
    OilPatch patch
    IntegerList queue
    real x
    real y
    boolean lockOut = false
    OilCollector dockedCollector
    
    private static Table structTable

    static method getOilPatch takes real x, real y returns OilPatch
        local IntegerListItem link = listZones.first
        local OilPatch p = 0
        local Zone zone = 0
        loop
            exitwhen link == 0
            set zone = link.data
            // if x >= zone.xMin and x <= zone.xMax and y >= zone.yMin and y <= zone.yMax then
            if (zone.xMin <= x) and (x <= zone.xMax) and (zone.yMin <= y) and (y <= zone.yMax) then
            // if (GetRectMinX(zone.r) <= x) and (x <= GetRectMaxX(zone.r)) and (GetRectMinY(zone.r) <= y) and (y <= GetRectMaxY(zone.r)) then
                // call BJDebugMsg("has patch")
                set p = OilPatch.getRect(zone.r)
                set link = 0
            else
                set link = link.next
            endif
        endloop
        return p
    endmethod

    static method get takes unit u returns thistype
        return structTable[GetHandleId(u)]
    endmethod

    static method has takes unit u returns boolean
        return structTable.has(GetHandleId(u))
    endmethod

    static method setOilAmount takes unit u, integer newAmount returns nothing
        if thistype.has(u) then
            call thistype.get(u).patch.setAmount(newAmount)
        endif
    endmethod

    method cancelAll takes nothing returns nothing
        local IntegerListItem link = this.queue.first
        local IntegerListItem linkNext
        local OilCollector collector
        loop
            exitwhen link == 0
            set linkNext = link.next
            set collector = link.data
            call collector.unqueue()
            set link = linkNext
        endloop
    endmethod

    method destroy takes nothing returns nothing
        local integer playerNum = GetPlayerId(GetOwningPlayer(this.source))
        call playerListRigs[playerNum].removeElem(this)
        call updateNearestRigDepot(playerNum)
        call this.cancelAll()
        call structTable.remove(GetHandleId(this.source))
        if this.dockedCollector != 0 then
            call ShowUnit(this.dockedCollector.source, true)
            set this.dockedCollector = 0
        endif
        call this.patch.removeOwnership()
        // call RemoveUnit(this.source)
        set this.source = null
        call this.queue.destroy()
        call this.deallocate()
    endmethod
    
    static method new takes unit u returns thistype
        local thistype this = allocate()
        local player play = GetOwningPlayer(u)
        local integer playerNum = GetPlayerId(play)

        set this.source = u
        set this.x = GetUnitX(u)
        set this.y = GetUnitY(u)
        set this.dockedCollector = 0
        set this.clock = null
        set this.queue = IntegerList.create()
        
        set this.patch = thistype.getOilPatch(this.x, this.y)
        if this.patch == 0 then
            set this.patch = OilPatch.newSpecial(u, OIL_PATCH_AMOUNT_DEFAULT)
        endif
        call this.patch.setOwnership(play)

        set structTable[GetHandleId(u)] = this

        // add to the player's rig list
        call playerListRigs[playerNum].push(this)
        call updateNearestRigDepot(playerNum)

        return this
    endmethod

    private method dockCollector takes OilCollector collector returns nothing
        set this.dockedCollector = collector
        set collector.activeRig = 0
        call ShowUnit(collector.source, false)
    endmethod

    static method unload takes nothing returns nothing
        local thistype this = GetTimerData(GetExpiredTimer())
        local OilCollector collector = this.dockedCollector
        local integer rate = playerOilRate[GetPlayerId(GetOwningPlayer(this.source))]

        // unload current tanker
        if collector != 0 then
            call ShowUnit(collector.source, true)
            if this.patch.amount > rate then
                set collector.amount = rate
                call this.patch.modAmount(-rate)
            else
                // kill rig and patch?
                call UnitApplyTimedLife(this.source, 'BTLF', .01)
                // call UnitApplyTimedLife(this.patch.source, 'BTLF', .01)
                set collector.amount = this.patch.amount
                set this.patch.amount = 0
                call this.cancelAll()
                set this.lockOut = true
            endif
            call collector.updateGatherAbil(true)
            call collector.deliverOil(this.nearestDepot)
        endif

        if this.queue.empty() then
            set this.dockedCollector = 0
            call ReleaseTimer(this.clock)
            call SetUnitAnimation(this.source, "stand")
        else
            call this.dockCollector(this.queue.front())
            call this.queue.shift()
        endif
    endmethod

    method queueUp takes OilCollector collector returns nothing
        if not this.lockOut then
            if this.dockedCollector == 0 then
                call this.dockCollector(collector)
                set this.clock = NewTimerEx(this)
                call TimerStart(this.clock, OIL_COLLECTION_INTERVAL, true, function thistype.unload)
                call SetUnitAnimation(this.source, "stand work")
            else
                call this.queue.push(collector)
                set collector.activeRig = this
            endif
        endif
    endmethod

    private static method onInit takes nothing returns nothing
        set structTable = Table.create()
    endmethod

endstruct

/*
    The Oil drop-off point.
    Eg: Shipyard
*/
struct OilDepot

    unit source
    unit nearestRig
    real x
    real y
    trigger deathListener
    
    private static Table structTable

    static method get takes unit u returns thistype
        return structTable[GetHandleId(u)]
    endmethod

    static method has takes unit u returns boolean
        return structTable.has(GetHandleId(u))
    endmethod

    method destroy takes nothing returns nothing
        local integer playerNum = GetPlayerId(GetOwningPlayer(this.source))
        call playerListDepots[playerNum].removeElem(this)
        call updateNearestRigDepot(playerNum)
        call structTable.remove(GetHandleId(this.source))
        call DestroyTrigger(this.deathListener)
        set this.deathListener = null
        set this.source = null
        call this.deallocate()
    endmethod

    private static method onDeath takes nothing returns nothing
        local thistype this = thistype.get(GetTriggerUnit())
        call this.destroy()
    endmethod

    static method new takes unit u returns thistype
        local thistype this = allocate()
        local integer playerNum = GetPlayerId(GetOwningPlayer(u))

        set this.source = u
        set this.x = GetUnitX(u)
        set this.y = GetUnitY(u)
        
        set this.deathListener = CreateTrigger()
        call TriggerRegisterDeathEvent(this.deathListener, u)
        call TriggerAddAction(this.deathListener, function thistype.onDeath)

        set structTable[GetHandleId(u)] = this

        // add to the player's depot list
        call playerListDepots[playerNum].push(this)
        call updateNearestRigDepot(playerNum)

        return this
    endmethod

    private static method onInit takes nothing returns nothing
        set structTable = Table.create()
    endmethod

endstruct

/*
    Special Use functions
*/

function updateOwnerships takes unit u, player old, player new returns nothing
    local OilDepot depot = OilDepot.get(u)
    local OilRig rig = OilRig.get(u)
    local integer oldNum = GetPlayerId(old)
    local integer newNum = GetPlayerId(new)
    local boolean update = false
    if depot != 0 then
        call playerListDepots[oldNum].removeElem(depot)
        call playerListDepots[newNum].push(depot)
        set update = true
    endif
    if rig != 0 then 
        call playerListRigs[oldNum].removeElem(rig)
        call playerListRigs[newNum].push(rig)
        set update = true
    endif
    if update then
        call updateNearestRigDepot(oldNum)
        call updateNearestRigDepot(newNum)
    endif
endfunction

/*
    Events
*/
private function setupUnits takes unit u returns nothing
    if GetUnitAbilityLevel(u, OIL_PATCH_ABIL) > 0 then
        if not OilPatch.has(u) then
            call OilPatch.new(u, OIL_PATCH_AMOUNT_DEFAULT)
        endif
    endif
    if GetUnitAbilityLevel(u, OIL_RIG_ABIL) > 0 then
        if not OilRig.has(u) then
            call OilRig.new(u)
            call OilCollector.retrieveOilUnit(GetStructureBuilder(u), u)
        endif
    endif
    if GetUnitAbilityLevel(u, OIL_COLLECTOR_ABIL) > 0 then
        if not OilCollector.has(u) then
            call OilCollector.new(u)
        endif
    endif
    if GetUnitAbilityLevel(u, OIL_DEPOT_ABIL) > 0 then
        if not OilDepot.has(u) then
            call OilDepot.new(u)
        endif
    endif
endfunction

private function onCollectorAutomation takes nothing returns nothing
    local OilCollector collector = OilCollector.get(GetTriggerUnit())
    if collector != 0 then
        call collector.automateOilProcess()
    endif
endfunction

// Collector Action happens when a collector is in range, so either to queue up for harvesting or to deposit oil.
private function onCollectorAction takes nothing returns nothing
    local unit source = GetTriggerUnit()
    local unit target = GetSpellTargetUnit()
    local OilCollector collector = OilCollector.get(source)
    local OilRig rig
    if collector != 0 then
        if collector.amount > 0. then
            if OilDepot.has(target) then
                call collector.depositOil()
            endif
        else
            set rig = OilRig.get(target) 
            if rig != null then
                call rig.queueUp(collector)
            endif
        endif
    endif
    set source = null
    set target = null
endfunction

private function onSmart takes nothing returns nothing
    local unit source = GetTriggerUnit()
    local unit target = GetOrderTargetUnit()
    local OilCollector collector
    if GetOwningPlayer(source) == GetOwningPlayer(target) then
        set collector = OilCollector.get(source)
        if collector != 0 then
            if collector.amount > 0. then
                if OilDepot.has(target) then
                    call collector.deliverOil(target)
                endif
            else
                if OilRig.has(target) then
                    call collector.retrieveOil(target)
                endif
            endif
        endif
    endif
    set source = null
    set target = null
endfunction

private function onIndexEx takes nothing returns nothing
    local unit source = udg_IndexExUnit
    local integer id = GetUnitUserData(source)
    if not udg_IsUnitConstructing[id] then
        call setupUnits(source)
    endif
    set source = null
endfunction

// private function onDeindexEx takes nothing returns nothing
//     local unit source = udg_UDexUnits[udg_UDex]
//     if OilPatch.has(source) then
//         call OilPatch.get(source).destroy()
//     endif
//     if OilRig.has(source) then
//         call OilRig.get(source).destroy()
//     endif
//     if OilCollector.has(source) then
//         call OilCollector.get(source).destroy()
//     endif
//     if OilDepot.has(source) then
//         call OilDepot.get(source).destroy()
//     endif
//     set source = null
// endfunction

private function onBuildFinish takes nothing returns nothing
    call setupUnits(GetTriggeringStructure())
endfunction

private function onBuildCancel takes nothing returns nothing
    local unit u = GetTriggerUnit()
    local OilRig rig = OilRig.get(u)
    local OilPatch p
    if GetUnitAbilityLevel(u, OIL_RIG_ABIL) > 0 then
        set p = OilRig.getOilPatch(GetUnitX(u), GetUnitY(u))
        call p.restoreOilPatchUnit()
    endif
    if rig != 0 then
        call rig.destroy()
    endif
    set u = null
endfunction

private module OilFrameInit
    private static method onInit takes nothing returns nothing
        local trigger onLoadListener    = CreateTrigger()
        // local trigger onSaveListener    = CreateTrigger()
        // call TriggerRegisterGameEvent(onSaveListener, EVENT_GAME_SAVE)
        // call TriggerAddAction(onSaveListener, function thistype.onSave)
        call TriggerRegisterGameEvent(onLoadListener, EVENT_GAME_LOADED)
        call TriggerAddAction(onLoadListener, function thistype.onLoad)
        call thistype.setupFrames()
    endmethod
endmodule

struct OilUI
    private static method restoreOilTexts takes nothing returns nothing
        local integer i = -1
        local string oil
        loop
            set i = i + 1
            exitwhen i > bj_MAX_PLAYER_SLOTS
            set oil = I2S(playerOil[i])
            if GetLocalPlayer() == Player(i) then
                call BlzFrameSetText(oilAmount, oil)
                call BlzFrameSetText(oilTooltipTitle, "Oil: " + oil)
            endif
        endloop
    endmethod

    private static method setupFrames takes nothing returns nothing
        local framehandle upkeepFrame   = BlzFrameGetChild(BlzGetFrameByName("ResourceBarFrame", 0), 2)
        local framehandle foodFrame     = BlzFrameGetChild(BlzGetFrameByName("ResourceBarFrame", 0), 3)
        local framehandle upkeepText    = BlzGetFrameByName("ResourceBarUpkeepText" , 0)
        local framehandle foodText      = BlzGetFrameByName("ResourceBarSupplyText" , 0)

        local framehandle fh

        // move foodFrame
        // call BlzFrameSetAllPoints(foodFrame, upkeepFrame)
        // call BlzFrameSetAllPoints(foodText, upkeepText)

        call BlzLoadTOCFile("CustomUI.toc")

        call BlzFrameSetAbsPoint(upkeepText, FRAMEPOINT_LEFT, 12., 12.)
        call BlzFrameSetAbsPoint(upkeepFrame, FRAMEPOINT_LEFT, 12., 12.)

        set oilMasterFrame = BlzCreateFrameByType("FRAME", "OilMasterFrame", BlzGetOriginFrame(ORIGIN_FRAME_GAME_UI, 0), "", 0)
        call BlzFrameSetSize(oilMasterFrame, OIL_UI_MASTER_FRAME_X + OIL_UI_AMOUNT_OFFSET, OIL_UI_MASTER_FRAME_Y)
        call BlzFrameSetPoint(oilMasterFrame, FRAMEPOINT_TOPLEFT, foodFrame, FRAMEPOINT_TOPRIGHT, OIL_UI_FRAME_OFFSET, 0.)

        set oilTooltip = BlzCreateFrame("TooltipText", BlzGetOriginFrame(ORIGIN_FRAME_GAME_UI, 0), 1, 0)
        set oilTooltipTitle = BlzGetFrameByName("TooltipTextTitle", 0)
        call BlzFrameSetText(oilTooltipTitle, "Oil: 0")

        set fh = BlzGetFrameByName("TooltipTextValue", 0)
        call BlzFrameSetText(fh, "Oil is gathered from Oil Patches.")
        // call BlzFrameSetSize(oilTooltip, .29, .0435)
        // call BlzFrameSetSize(oilTooltip, .29, .0535)
        
        call BlzFrameSetPoint(oilTooltip, FRAMEPOINT_TOPLEFT, oilTooltipTitle, FRAMEPOINT_TOPLEFT, -.005, .0055)
        call BlzFrameSetPoint(oilTooltip, FRAMEPOINT_BOTTOMRIGHT, fh, FRAMEPOINT_BOTTOMRIGHT, .005, -.0055)
        call BlzFrameSetAbsPoint(fh, FRAMEPOINT_BOTTOMRIGHT, 0.8 -.005, 0.1625 + .0055)
        
        set oilHoverFrame = BlzCreateFrameByType("FRAME", "OilHoverFrame", oilMasterFrame, "", 0)
        call BlzFrameSetAllPoints(oilHoverFrame, oilMasterFrame)
        call BlzFrameSetTooltip(oilHoverFrame, oilTooltip)

        set oilIcon = BlzCreateFrameByType("BACKDROP", "OilIcon", oilMasterFrame, "", 0)
        call BlzFrameSetSize(oilIcon, OIL_UI_ICON_SIZE, OIL_UI_ICON_SIZE)
        call BlzFrameSetTexture(oilIcon, OIL_UI_ICON_PATH, 0, true)
        call BlzFrameSetPoint(oilIcon, FRAMEPOINT_LEFT, oilMasterFrame, FRAMEPOINT_LEFT, 0., 0.)
        // call BlzFrameSetAbsPoint(oilIcon, FRAMEPOINT_CENTER, 0.4, 0.3)

        set oilAmount = BlzCreateFrameByType("TEXT", "OilAmount", oilMasterFrame, "", 0)
        call BlzFrameSetTextSizeLimit(oilAmount, OIL_UI_FONT_SIZE)
        call BlzFrameSetText(oilAmount, "0")
        call BlzFrameSetPoint(oilAmount, FRAMEPOINT_RIGHT, oilMasterFrame, FRAMEPOINT_RIGHT, -OIL_UI_AMOUNT_OFFSET, 0.)

        set fh = null
        set foodText = null
        set upkeepText = null
        set foodFrame = null
        set upkeepFrame = null
    endmethod

    // static method onAfterSave takes nothing returns nothing
    //     call BlzFrameSetVisible(oilMasterFrame, true)
    //     call ReleaseTimer(GetExpiredTimer())
    // endmethod

    // static method onSave takes nothing returns nothing
    //     call BlzFrameSetVisible(oilMasterFrame, false)
    //     call TimerStart(NewTimer(), 0., false, function thistype.onAfterSave)
    // endmethod

    static method onLoad takes nothing returns nothing
        call thistype.setupFrames()
        call thistype.restoreOilTexts()
    endmethod

    static method setVisibile takes boolean flag returns nothing
        call BlzFrameSetVisible(oilMasterFrame, flag)
    endmethod

    static method setVisibilePlayer takes player play, boolean flag returns nothing
        if GetLocalPlayer() == play then
            call BlzFrameSetVisible(oilMasterFrame, flag)
        endif
    endmethod

    implement OilFrameInit
endstruct

private function init takes nothing returns nothing
    local trigger indexExListener = CreateTrigger()
    // local trigger deindexListener = CreateTrigger()
    local trigger buildFinishListener = CreateTrigger()
    local trigger rigDeathListener = CreateTrigger()

    local integer i = -1
    local player play

    call TriggerRegisterVariableEvent(indexExListener, "udg_UnitIndexExEvent", EQUAL, 1.00)
    call TriggerAddCondition(indexExListener, function onIndexEx)
    set indexExListener = null

    // call TriggerRegisterVariableEvent(deindexListener, "udg_UnitIndexExEvent", EQUAL, 2.00)
    // call TriggerAddCondition(deindexListener, function onDeindexEx)
    // set deindexListener = null

    call RegisterNativeEvent(EVENT_UNIT_CONSTRUCTION_FINISH, function onBuildFinish)
    
    // EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL will fire a death event
    call TriggerRegisterAnyUnitEventBJ(rigDeathListener, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddAction(rigDeathListener, function onBuildCancel)
    set rigDeathListener = null

    call RegisterSpellEffectEvent(COLLECTOR_ACTION_ABIL, function onCollectorAutomation)
    call RegisterSpellEffectEvent(OIL_COLLECTOR_ABIL, function onCollectorAction)
    call RegisterOrderEvent(ORDER_SMART, function onSmart)

    set listZones = IntegerList.create()
    loop
        set i = i + 1
        exitwhen i > bj_MAX_PLAYER_SLOTS
        set playerListRigs[i] = IntegerList.create()
        set playerListDepots[i] = IntegerList.create()
        set playerOilRate[i] = OIL_COLLECTION_RATE_DEFAULT
    endloop
endfunction

private function delay takes nothing returns nothing
    call OilUI.setVisibile(uiVisible)
    call OilDisplay.setAllVisibile(uiVisible)
    call ReleaseTimer(GetExpiredTimer())
endfunction
public function setUIVisible takes boolean flag returns nothing
    set uiVisible = flag
    call TimerStart(NewTimer(), 0., false, function delay)
endfunction

endlibrary



//***************************************************************************
//*
//*  Map Item Tables
//*
//***************************************************************************

function ItemTable000000_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'I60H', 25 )
        call RandomDistAddItem( 'phea', 25 )
        call RandomDistAddItem( 'pclr', 25 )
        call RandomDistAddItem( 'pman', 25 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction


//***************************************************************************
//*
//*  Unit Item Tables
//*
//***************************************************************************

function Unit000002_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'ratf', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000014_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rhe3', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000065_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'sror', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000070_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'hval', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000085_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'hslv', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000092_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rhe1', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000096_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rat6', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000127_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'tkno', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000137_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'I000', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000163_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'rhe3', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000331_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'pmna', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000353_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'plcl', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000359_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'hslv', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction

function Unit000362_DropItems takes nothing returns nothing
    local widget  trigWidget = null
    local unit    trigUnit   = null
    local integer itemID     = 0
    local boolean canDrop    = true

    set trigWidget = bj_lastDyingWidget
    if (trigWidget == null) then
        set trigUnit = GetTriggerUnit()
    endif

    if (trigUnit != null) then
        set canDrop = not IsUnitHidden(trigUnit)
        if (canDrop and GetChangingUnit() != null) then
            set canDrop = (GetChangingUnitPrevOwner() == Player(PLAYER_NEUTRAL_AGGRESSIVE))
        endif
    endif

    if (canDrop) then
        // Item set 0
        call RandomDistReset(  )
        call RandomDistAddItem( 'phea', 100 )
        set itemID = RandomDistChoose(  )
        if (trigUnit != null) then
            call UnitDropItem( trigUnit, itemID )
        else
            call WidgetDropItem( trigWidget, itemID )
        endif

    endif

    set bj_lastDyingWidget = null
    call DestroyTrigger(GetTriggeringTrigger())
endfunction


//***************************************************************************
//*
//*  Sound Assets
//*
//***************************************************************************

function InitSounds takes nothing returns nothing
    set gg_snd_SecretFound = CreateSound( "Sound/Interface/SecretFound.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_SecretFound, "SecretFound" )
    call SetSoundDuration( gg_snd_SecretFound, 2525 )
    call SetSoundVolume( gg_snd_SecretFound, 80 )
    set gg_snd_WC2Orc08SAmaniPriest1 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SAmaniPriest1.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SAmaniPriest1, 4911 )
    call SetSoundChannel( gg_snd_WC2Orc08SAmaniPriest1, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SAmaniPriest1, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SAmaniPriest1, 1.0 )
    set gg_snd_WC2Orc08SAmaniPriest2 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SAmaniPriest2.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SAmaniPriest2, 4493 )
    call SetSoundChannel( gg_snd_WC2Orc08SAmaniPriest2, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SAmaniPriest2, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SAmaniPriest2, 1.0 )
    set gg_snd_WC2Orc08SAmaniPriest3 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SAmaniPriest3.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SAmaniPriest3, 4127 )
    call SetSoundChannel( gg_snd_WC2Orc08SAmaniPriest3, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SAmaniPriest3, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SAmaniPriest3, 1.0 )
    set gg_snd_WC2Orc08SDoomhammer1 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SDoomhammer1.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SDoomhammer1, 1959 )
    call SetSoundChannel( gg_snd_WC2Orc08SDoomhammer1, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SDoomhammer1, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SDoomhammer1, 1.0 )
    set gg_snd_WC2Orc08SDoomhammer10 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SDoomhammer10.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SDoomhammer10, 2115 )
    call SetSoundChannel( gg_snd_WC2Orc08SDoomhammer10, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SDoomhammer10, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SDoomhammer10, 1.0 )
    set gg_snd_WC2Orc08SDoomhammer11 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SDoomhammer11.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SDoomhammer11, 5642 )
    call SetSoundChannel( gg_snd_WC2Orc08SDoomhammer11, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SDoomhammer11, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SDoomhammer11, 1.0 )
    set gg_snd_WC2Orc08SDoomhammer12 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SDoomhammer12.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SDoomhammer12, 7131 )
    call SetSoundChannel( gg_snd_WC2Orc08SDoomhammer12, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SDoomhammer12, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SDoomhammer12, 1.0 )
    set gg_snd_WC2Orc08SDoomhammer2 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SDoomhammer2.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SDoomhammer2, 4754 )
    call SetSoundChannel( gg_snd_WC2Orc08SDoomhammer2, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SDoomhammer2, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SDoomhammer2, 1.0 )
    set gg_snd_WC2Orc08SDoomhammer3 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SDoomhammer3.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SDoomhammer3, 8986 )
    call SetSoundChannel( gg_snd_WC2Orc08SDoomhammer3, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SDoomhammer3, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SDoomhammer3, 1.0 )
    set gg_snd_WC2Orc08SDoomhammer4 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SDoomhammer4.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SDoomhammer4, 9456 )
    call SetSoundChannel( gg_snd_WC2Orc08SDoomhammer4, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SDoomhammer4, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SDoomhammer4, 1.0 )
    set gg_snd_WC2Orc08SDoomhammer5 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SDoomhammer5.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SDoomhammer5, 2951 )
    call SetSoundChannel( gg_snd_WC2Orc08SDoomhammer5, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SDoomhammer5, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SDoomhammer5, 1.0 )
    set gg_snd_WC2Orc08SDoomhammer6 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SDoomhammer6.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SDoomhammer6, 10631 )
    call SetSoundChannel( gg_snd_WC2Orc08SDoomhammer6, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SDoomhammer6, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SDoomhammer6, 1.0 )
    set gg_snd_WC2Orc08SDoomhammer7 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SDoomhammer7.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SDoomhammer7, 10893 )
    call SetSoundChannel( gg_snd_WC2Orc08SDoomhammer7, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SDoomhammer7, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SDoomhammer7, 1.0 )
    set gg_snd_WC2Orc08SDoomhammer8 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SDoomhammer8.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SDoomhammer8, 3866 )
    call SetSoundChannel( gg_snd_WC2Orc08SDoomhammer8, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SDoomhammer8, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SDoomhammer8, 1.0 )
    set gg_snd_WC2Orc08SEitrigg1 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SEitrigg1.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SEitrigg1, 15281 )
    call SetSoundChannel( gg_snd_WC2Orc08SEitrigg1, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SEitrigg1, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SEitrigg1, 1.0 )
    set gg_snd_WC2Orc08SEitrigg2 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SEitrigg2.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SEitrigg2, 2194 )
    call SetSoundChannel( gg_snd_WC2Orc08SEitrigg2, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SEitrigg2, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SEitrigg2, 1.0 )
    set gg_snd_WC2Orc08SEitrigg3 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SEitrigg3.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SEitrigg3, 2768 )
    call SetSoundChannel( gg_snd_WC2Orc08SEitrigg3, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SEitrigg3, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SEitrigg3, 1.0 )
    set gg_snd_WC2Orc08SEitrigg4 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SEitrigg4.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SEitrigg4, 5746 )
    call SetSoundChannel( gg_snd_WC2Orc08SEitrigg4, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SEitrigg4, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SEitrigg4, 1.0 )
    set gg_snd_WC2Orc08SEitrigg5 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SEitrigg5.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SEitrigg5, 4937 )
    call SetSoundChannel( gg_snd_WC2Orc08SEitrigg5, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SEitrigg5, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SEitrigg5, 1.0 )
    set gg_snd_WC2Orc08SEitrigg6 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SEitrigg6.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SEitrigg6, 5172 )
    call SetSoundChannel( gg_snd_WC2Orc08SEitrigg6, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SEitrigg6, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SEitrigg6, 1.0 )
    set gg_snd_WC2Orc08SElvenRanger1 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SElvenRanger1.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SElvenRanger1, 6556 )
    call SetSoundChannel( gg_snd_WC2Orc08SElvenRanger1, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SElvenRanger1, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SElvenRanger1, 1.0 )
    set gg_snd_WC2Orc08SFalstaaaaaaaad1 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SFalstaaaaaaaad1.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SFalstaaaaaaaad1, 2795 )
    call SetSoundChannel( gg_snd_WC2Orc08SFalstaaaaaaaad1, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SFalstaaaaaaaad1, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SFalstaaaaaaaad1, 1.0 )
    set gg_snd_WC2Orc08SGarona1 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SGarona1.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SGarona1, 11415 )
    call SetSoundChannel( gg_snd_WC2Orc08SGarona1, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SGarona1, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SGarona1, 1.0 )
    set gg_snd_WC2Orc08SGarona2 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SGarona2.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SGarona2, 2899 )
    call SetSoundChannel( gg_snd_WC2Orc08SGarona2, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SGarona2, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SGarona2, 1.0 )
    set gg_snd_WC2Orc08SGoblinSappers1 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SGoblinSappers1.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SGoblinSappers1, 4493 )
    call SetSoundChannel( gg_snd_WC2Orc08SGoblinSappers1, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SGoblinSappers1, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SGoblinSappers1, 1.0 )
    set gg_snd_WC2Orc08SGoblinSappers2 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SGoblinSappers2.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SGoblinSappers2, 3265 )
    call SetSoundChannel( gg_snd_WC2Orc08SGoblinSappers2, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SGoblinSappers2, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SGoblinSappers2, 1.0 )
    set gg_snd_WC2Orc08SKurdran1 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SKurdran1.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SKurdran1, 3317 )
    call SetSoundChannel( gg_snd_WC2Orc08SKurdran1, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SKurdran1, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SKurdran1, 1.0 )
    set gg_snd_WC2Orc08SKurdran2 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SKurdran2.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SKurdran2, 4362 )
    call SetSoundChannel( gg_snd_WC2Orc08SKurdran2, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SKurdran2, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SKurdran2, 1.0 )
    set gg_snd_WC2Orc08SKurdran3 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SKurdran3.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SKurdran3, 4728 )
    call SetSoundChannel( gg_snd_WC2Orc08SKurdran3, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SKurdran3, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SKurdran3, 1.0 )
    set gg_snd_WC2Orc08SKurdran4 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SKurdran4.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SKurdran4, 5982 )
    call SetSoundChannel( gg_snd_WC2Orc08SKurdran4, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SKurdran4, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SKurdran4, 1.0 )
    set gg_snd_WC2Orc08SLothar1 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SLothar1.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SLothar1, 5120 )
    call SetSoundChannel( gg_snd_WC2Orc08SLothar1, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SLothar1, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SLothar1, 1.0 )
    set gg_snd_WC2Orc08SLothar2 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SLothar2.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SLothar2, 9978 )
    call SetSoundChannel( gg_snd_WC2Orc08SLothar2, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SLothar2, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SLothar2, 1.0 )
    set gg_snd_WC2Orc08SLothar3 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SLothar3.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SLothar3, 7627 )
    call SetSoundChannel( gg_snd_WC2Orc08SLothar3, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SLothar3, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SLothar3, 1.0 )
    set gg_snd_WC2Orc08SLothar4 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SLothar4.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SLothar4, 4675 )
    call SetSoundChannel( gg_snd_WC2Orc08SLothar4, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SLothar4, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SLothar4, 1.0 )
    set gg_snd_WC2Orc08SLothar5 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SLothar5.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SLothar5, 5276 )
    call SetSoundChannel( gg_snd_WC2Orc08SLothar5, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SLothar5, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SLothar5, 1.0 )
    set gg_snd_WC2Orc08SRend1 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SRend1.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SRend1, 7784 )
    call SetSoundChannel( gg_snd_WC2Orc08SRend1, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SRend1, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SRend1, 1.0 )
    set gg_snd_WC2Orc08SRend2 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SRend2.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SRend2, 4284 )
    call SetSoundChannel( gg_snd_WC2Orc08SRend2, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SRend2, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SRend2, 1.0 )
    set gg_snd_WC2Orc08SRend3 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SRend3.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SRend3, 3056 )
    call SetSoundChannel( gg_snd_WC2Orc08SRend3, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SRend3, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SRend3, 1.0 )
    set gg_snd_WC2Orc08SRend4 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SRend4.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SRend4, 1906 )
    call SetSoundChannel( gg_snd_WC2Orc08SRend4, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SRend4, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SRend4, 1.0 )
    set gg_snd_WC2Orc08SRend5 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SRend5.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SRend5, 4257 )
    call SetSoundChannel( gg_snd_WC2Orc08SRend5, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SRend5, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SRend5, 1.0 )
    set gg_snd_WC2Orc08STharbek1 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08STharbek1.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08STharbek1, 4963 )
    call SetSoundChannel( gg_snd_WC2Orc08STharbek1, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08STharbek1, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08STharbek1, 1.0 )
    set gg_snd_WC2Orc08STharbek2 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08STharbek2.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08STharbek2, 4754 )
    call SetSoundChannel( gg_snd_WC2Orc08STharbek2, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08STharbek2, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08STharbek2, 1.0 )
    set gg_snd_WC2Orc08SWildhammerThane1 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SWildhammerThane1.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SWildhammerThane1, 6817 )
    call SetSoundChannel( gg_snd_WC2Orc08SWildhammerThane1, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SWildhammerThane1, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SWildhammerThane1, 1.0 )
    set gg_snd_WC2Orc08SWildhammerThane2 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SWildhammerThane2.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SWildhammerThane2, 3970 )
    call SetSoundChannel( gg_snd_WC2Orc08SWildhammerThane2, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SWildhammerThane2, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SWildhammerThane2, 1.0 )
    set gg_snd_WC2Orc08SZuljin1 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SZuljin1.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SZuljin1, 17136 )
    call SetSoundChannel( gg_snd_WC2Orc08SZuljin1, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SZuljin1, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SZuljin1, 1.0 )
    set gg_snd_WC2Orc08SZuljin2 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SZuljin2.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SZuljin2, 12042 )
    call SetSoundChannel( gg_snd_WC2Orc08SZuljin2, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SZuljin2, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SZuljin2, 1.0 )
    set gg_snd_WC2Orc08SZuljin3 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SZuljin3.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SZuljin3, 9430 )
    call SetSoundChannel( gg_snd_WC2Orc08SZuljin3, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SZuljin3, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SZuljin3, 1.0 )
    set gg_snd_WC2Orc08SZuljin6 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SZuljin6.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SZuljin6, 11859 )
    call SetSoundChannel( gg_snd_WC2Orc08SZuljin6, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SZuljin6, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SZuljin6, 1.0 )
    set gg_snd_WC2Orc08SZuljin7 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SZuljin7.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SZuljin7, 5903 )
    call SetSoundChannel( gg_snd_WC2Orc08SZuljin7, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SZuljin7, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SZuljin7, 1.0 )
    set gg_snd_WC2Orc08SEitrigg7 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SEitrigg7.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SEitrigg7, 5929 )
    call SetSoundChannel( gg_snd_WC2Orc08SEitrigg7, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SEitrigg7, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SEitrigg7, 1.0 )
    set gg_snd_WC2Orc08SGarona3 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SGarona3.flac", false, false, false, 0, 0, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SGarona3, 7993 )
    call SetSoundChannel( gg_snd_WC2Orc08SGarona3, 0 )
    call SetSoundVolume( gg_snd_WC2Orc08SGarona3, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SGarona3, 1.0 )
    set gg_snd_GruntNoOil1 = CreateSound( "Sound/Interface/Warning/Orc/GruntNoOil1.flac", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_GruntNoOil1, 3056 )
    call SetSoundChannel( gg_snd_GruntNoOil1, 8 )
    call SetSoundVolume( gg_snd_GruntNoOil1, 127 )
    call SetSoundPitch( gg_snd_GruntNoOil1, 1.0 )
    set gg_snd_OrcTheme1 = "_HD.w3mod/Warcraft2/Music/OrcTheme1.mp3"
    set gg_snd_OrcTheme2 = "_HD.w3mod/Warcraft2/Music/OrcTheme2.mp3"
    set gg_snd_OrcTheme3 = "_HD.w3mod/Warcraft2/Music/OrcTheme3.mp3"
    set gg_snd_OrcTheme4 = "_HD.w3mod/Warcraft2/Music/OrcTheme4.mp3"
    set gg_snd_OrcTheme5 = "_HD.w3mod/Warcraft2/Music/OrcTheme5.mp3"
    set gg_snd_OrcTheme7 = "_HD.w3mod/Warcraft2/Music/OrcTheme7.mp3"
    set gg_snd_CS_H01b_Orc_gesture_v2 = CreateSound( "Sound/Ambient/DoodadEffects/CS_H01b_Orc_gesture_v2.flac", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_CS_H01b_Orc_gesture_v2, 1671 )
    call SetSoundChannel( gg_snd_CS_H01b_Orc_gesture_v2, 20 )
    call SetSoundVolume( gg_snd_CS_H01b_Orc_gesture_v2, 127 )
    call SetSoundPitch( gg_snd_CS_H01b_Orc_gesture_v2, 1.0 )
    set gg_snd_DarkAgents = "DarkAgents"
    set gg_snd_DoorSlam1 = CreateSound( "Sound/Ambient/DoodadEffects/DoorSlam1.flac", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_DoorSlam1, "DoorSlamSound" )
    call SetSoundDuration( gg_snd_DoorSlam1, 485 )
    call SetSoundChannel( gg_snd_DoorSlam1, 20 )
    call SetSoundVolume( gg_snd_DoorSlam1, 50 )
    set gg_snd_CS_orc2_outro_rockfalls = CreateSound( "Sound/Ambient/DoodadEffects/CS_orc2_outro_rockfalls.flac", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_CS_orc2_outro_rockfalls, 7079 )
    call SetSoundChannel( gg_snd_CS_orc2_outro_rockfalls, 20 )
    call SetSoundVolume( gg_snd_CS_orc2_outro_rockfalls, 127 )
    call SetSoundPitch( gg_snd_CS_orc2_outro_rockfalls, 1.0 )
    set gg_snd_CS_orc2_outro_stomp = CreateSound( "Sound/Ambient/DoodadEffects/CS_orc2_outro_stomp.flac", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_CS_orc2_outro_stomp, 10788 )
    call SetSoundChannel( gg_snd_CS_orc2_outro_stomp, 20 )
    call SetSoundVolume( gg_snd_CS_orc2_outro_stomp, 127 )
    call SetSoundPitch( gg_snd_CS_orc2_outro_stomp, 1.0 )
    set gg_snd_WaterLakeLoop1 = CreateSound( "Sound/Ambient/DoodadEffects/WaterLakeLoop1.flac", true, true, true, 1, 1, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_WaterLakeLoop1, "LakeLoop" )
    call SetSoundDuration( gg_snd_WaterLakeLoop1, 3297 )
    call SetSoundVolume( gg_snd_WaterLakeLoop1, 120 )
    set gg_snd_WaterStreamLoop1 = CreateSound( "Sound/Ambient/DoodadEffects/WaterStreamLoop1.flac", true, true, true, 1, 1, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_WaterStreamLoop1, "StreamLoop" )
    call SetSoundDuration( gg_snd_WaterStreamLoop1, 2008 )
    call SetSoundVolume( gg_snd_WaterStreamLoop1, 30 )
    call SetSoundPitch( gg_snd_WaterStreamLoop1, 0.8 )
    set gg_snd_WaterWaterFallLoop1 = CreateSound( "Sound/Ambient/DoodadEffects/WaterWaterFallLoop1.flac", true, true, true, 1, 1, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_WaterWaterFallLoop1, "WaterfallLoop" )
    call SetSoundDuration( gg_snd_WaterWaterFallLoop1, 16718 )
    call SetSoundVolume( gg_snd_WaterWaterFallLoop1, 120 )
    set gg_snd_WC2Orc08SZuljin8 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SZuljin8.flac", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SZuljin8, 7262 )
    call SetSoundChannel( gg_snd_WC2Orc08SZuljin8, 19 )
    call SetSoundVolume( gg_snd_WC2Orc08SZuljin8, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SZuljin8, 1.0 )
    set gg_snd_WC2Orc08SZuljin4 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SZuljin4.flac", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SZuljin4, 9064 )
    call SetSoundChannel( gg_snd_WC2Orc08SZuljin4, 19 )
    call SetSoundVolume( gg_snd_WC2Orc08SZuljin4, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SZuljin4, 1.0 )
    set gg_snd_WC2Orc08SZuljin5 = CreateSound( "_HD.w3mod/Sound/Dialogue/WC2Orc08S/WC2Orc08SZuljin5.flac", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_WC2Orc08SZuljin5, 10370 )
    call SetSoundChannel( gg_snd_WC2Orc08SZuljin5, 19 )
    call SetSoundVolume( gg_snd_WC2Orc08SZuljin5, 127 )
    call SetSoundPitch( gg_snd_WC2Orc08SZuljin5, 1.0 )
    set gg_snd_CS_H01b_group_walk_v2 = CreateSound( "Sound/Ambient/DoodadEffects/CS_H01b_group_walk_v2.flac", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_CS_H01b_group_walk_v2, 8228 )
    call SetSoundChannel( gg_snd_CS_H01b_group_walk_v2, 20 )
    call SetSoundVolume( gg_snd_CS_H01b_group_walk_v2, 127 )
    call SetSoundPitch( gg_snd_CS_H01b_group_walk_v2, 1.0 )
    set gg_snd_CS_H01c_Arthas_horse_walks_out_v1 = CreateSound( "Sound/Ambient/DoodadEffects/CS_H01c_Arthas_horse_walks_out_v1.flac", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_CS_H01c_Arthas_horse_walks_out_v1, 3395 )
    call SetSoundChannel( gg_snd_CS_H01c_Arthas_horse_walks_out_v1, 20 )
    call SetSoundVolume( gg_snd_CS_H01c_Arthas_horse_walks_out_v1, 127 )
    call SetSoundPitch( gg_snd_CS_H01c_Arthas_horse_walks_out_v1, 1.0 )
    set gg_snd_CS_HU_2_Intro_Foley2 = CreateSound( "Sound/Ambient/DoodadEffects/CS_HU_2_Intro_Foley2.flac", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_CS_HU_2_Intro_Foley2, 3474 )
    call SetSoundChannel( gg_snd_CS_HU_2_Intro_Foley2, 20 )
    call SetSoundVolume( gg_snd_CS_HU_2_Intro_Foley2, 127 )
    call SetSoundPitch( gg_snd_CS_HU_2_Intro_Foley2, 1.0 )
    set gg_snd_CS_Prologue2_Foley1 = CreateSound( "Sound/Ambient/DoodadEffects/CS_Prologue2_Foley1.flac", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_CS_Prologue2_Foley1, 7209 )
    call SetSoundChannel( gg_snd_CS_Prologue2_Foley1, 20 )
    call SetSoundVolume( gg_snd_CS_Prologue2_Foley1, 127 )
    call SetSoundPitch( gg_snd_CS_Prologue2_Foley1, 1.0 )
    set gg_snd_CS_Prologue2_Foley2 = CreateSound( "Sound/Ambient/DoodadEffects/CS_Prologue2_Foley2.flac", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_CS_Prologue2_Foley2, 2429 )
    call SetSoundChannel( gg_snd_CS_Prologue2_Foley2, 20 )
    call SetSoundVolume( gg_snd_CS_Prologue2_Foley2, 127 )
    call SetSoundPitch( gg_snd_CS_Prologue2_Foley2, 1.0 )
    set gg_snd_CS_BG_Camp = CreateSound( "Sound/Ambient/DoodadEffects/CS_BG_Camp.flac", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_CS_BG_Camp, 12912 )
    call SetSoundChannel( gg_snd_CS_BG_Camp, 20 )
    call SetSoundVolume( gg_snd_CS_BG_Camp, 127 )
    call SetSoundPitch( gg_snd_CS_BG_Camp, 1.0 )
    set gg_snd_CS_H01a_soldiers_walk_RtoL_a = CreateSound( "Sound/Ambient/DoodadEffects/CS_H01a_soldiers_walk_RtoL_a.flac", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_CS_H01a_soldiers_walk_RtoL_a, 6974 )
    call SetSoundChannel( gg_snd_CS_H01a_soldiers_walk_RtoL_a, 20 )
    call SetSoundVolume( gg_snd_CS_H01a_soldiers_walk_RtoL_a, 127 )
    call SetSoundPitch( gg_snd_CS_H01a_soldiers_walk_RtoL_a, 1.0 )
    set gg_snd_CS_Prologue2_Foley201 = CreateSound( "Sound/Ambient/DoodadEffects/CS_Prologue2_Foley2.flac", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_CS_Prologue2_Foley201, 2429 )
    call SetSoundChannel( gg_snd_CS_Prologue2_Foley201, 20 )
    call SetSoundVolume( gg_snd_CS_Prologue2_Foley201, 127 )
    call SetSoundPitch( gg_snd_CS_Prologue2_Foley201, 1.0 )
    set gg_snd_OrcCinematicThemeTension = "_HD.w3mod/Warcraft2/Music/OrcCinematicThemeTension.mp3"
    set gg_snd_ConstructionLoop1 = CreateSound( "Sound/Buildings/Shared/ConstructionLoop1.flac", false, true, true, 1, 1, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_ConstructionLoop1, "BuildingConstructionLoop" )
    call SetSoundDuration( gg_snd_ConstructionLoop1, 3599 )
    call SetSoundVolume( gg_snd_ConstructionLoop1, 127 )
    set gg_snd_ConstructionLoop101 = CreateSound( "Sound/Buildings/Shared/ConstructionLoop1.flac", false, true, true, 1, 1, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_ConstructionLoop101, "BuildingConstructionLoop" )
    call SetSoundDuration( gg_snd_ConstructionLoop101, 3599 )
    call SetSoundVolume( gg_snd_ConstructionLoop101, 127 )
    set gg_snd_ConstructionLoop102 = CreateSound( "Sound/Buildings/Shared/ConstructionLoop1.flac", false, true, true, 1, 1, "DefaultEAXON" )
    call SetSoundParamsFromLabel( gg_snd_ConstructionLoop102, "BuildingConstructionLoop" )
    call SetSoundDuration( gg_snd_ConstructionLoop102, 3599 )
    call SetSoundVolume( gg_snd_ConstructionLoop102, 127 )
    set gg_snd_Ability_ForTheHorde = CreateSound( "_HD.w3mod/Abilities/Spells/Orc/DoomhammerSpells/Ability_ForTheHorde.mp3", false, false, false, 1, 1, "SpellsEAX" )
    call SetSoundDuration( gg_snd_Ability_ForTheHorde, 8777 )
    call SetSoundChannel( gg_snd_Ability_ForTheHorde, 11 )
    call SetSoundVolume( gg_snd_Ability_ForTheHorde, 127 )
    call SetSoundPitch( gg_snd_Ability_ForTheHorde, 1.0 )
    set gg_snd_Ability_LocustJar = CreateSound( "_HD.w3mod/Abilities/Spells/Orc/ZuljinSpells/Ability_LocustJar.mp3", false, false, false, 1, 1, "SpellsEAX" )
    call SetSoundDuration( gg_snd_Ability_LocustJar, 1436 )
    call SetSoundChannel( gg_snd_Ability_LocustJar, 11 )
    call SetSoundVolume( gg_snd_Ability_LocustJar, 127 )
    call SetSoundPitch( gg_snd_Ability_LocustJar, 1.0 )
    set gg_snd_Ability_Tazdingo = CreateSound( "_HD.w3mod/Abilities/Spells/Orc/ZuljinSpells/Ability_Tazdingo.mp3", false, false, false, 1, 1, "SpellsEAX" )
    call SetSoundDuration( gg_snd_Ability_Tazdingo, 5067 )
    call SetSoundChannel( gg_snd_Ability_Tazdingo, 11 )
    call SetSoundVolume( gg_snd_Ability_Tazdingo, 127 )
    call SetSoundPitch( gg_snd_Ability_Tazdingo, 1.0 )
    set gg_snd_TyrandePissed1 = CreateSound( "units/nightelf/tyrande/TyrandePissed1.mp3", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_TyrandePissed1, 2612 )
    call SetSoundChannel( gg_snd_TyrandePissed1, 19 )
    call SetSoundVolume( gg_snd_TyrandePissed1, 127 )
    call SetSoundPitch( gg_snd_TyrandePissed1, 1.0 )
    set gg_snd_TyrandePissed3 = CreateSound( "units/nightelf/tyrande/TyrandePissed3.mp3", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_TyrandePissed3, 7471 )
    call SetSoundChannel( gg_snd_TyrandePissed3, 19 )
    call SetSoundVolume( gg_snd_TyrandePissed3, 127 )
    call SetSoundPitch( gg_snd_TyrandePissed3, 1.0 )
    set gg_snd_TyrandePissed4 = CreateSound( "units/nightelf/tyrande/TyrandePissed4.mp3", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_TyrandePissed4, 6295 )
    call SetSoundChannel( gg_snd_TyrandePissed4, 19 )
    call SetSoundVolume( gg_snd_TyrandePissed4, 127 )
    call SetSoundPitch( gg_snd_TyrandePissed4, 1.0 )
    set gg_snd_TyrandePissed5 = CreateSound( "units/nightelf/tyrande/TyrandePissed5.mp3", false, false, false, 1, 1, "DefaultEAXON" )
    call SetSoundDuration( gg_snd_TyrandePissed5, 5616 )
    call SetSoundChannel( gg_snd_TyrandePissed5, 19 )
    call SetSoundVolume( gg_snd_TyrandePissed5, 127 )
    call SetSoundPitch( gg_snd_TyrandePissed5, 1.0 )
endfunction

//***************************************************************************
//*
//*  Destructable Objects
//*
//***************************************************************************

function CreateAllDestructables takes nothing returns nothing
    local destructable d
    local trigger t
    local real life
    set gg_dest_B004_0095 = BlzCreateDestructableZWithSkin( 'B004', -4992.0, 1696.0, 1203.0, 90.000, 1.600, 0, 'B004' )
    set gg_dest_B00C_0342 = BlzCreateDestructableWithSkin( 'B00C', -5408.0, 5920.0, 172.560, 0.850, 0, 'B00C' )
    set gg_dest_B00C_6121 = BlzCreateDestructableWithSkin( 'B00C', -5280.0, 5536.0, 329.000, 0.868, 0, 'B00C' )
    set gg_dest_B00C_5899 = BlzCreateDestructableWithSkin( 'B00C', -5600.0, 6112.0, 177.560, 1.000, 0, 'B00C' )
    set gg_dest_B00C_5900 = BlzCreateDestructableWithSkin( 'B00C', -5408.0, 5792.0, 177.560, 0.850, 0, 'B00C' )
    set gg_dest_B00C_5922 = BlzCreateDestructableWithSkin( 'B00C', -6112.0, 6048.0, 71.693, 0.950, 0, 'B00C' )
    set gg_dest_B00C_6024 = BlzCreateDestructableWithSkin( 'B00C', -6048.0, 6304.0, 76.693, 1.150, 0, 'B00C' )
    set gg_dest_B00C_6025 = BlzCreateDestructableWithSkin( 'B00C', -6112.0, 6304.0, 21.693, 0.800, 0, 'B00C' )
    set gg_dest_B00C_6125 = BlzCreateDestructableWithSkin( 'B00C', -5856.0, 5664.0, 251.000, 1.187, 0, 'B00C' )
    set gg_dest_B00C_6124 = BlzCreateDestructableWithSkin( 'B00C', -5920.0, 5600.0, 157.000, 1.209, 0, 'B00C' )
    set gg_dest_B00C_6122 = BlzCreateDestructableWithSkin( 'B00C', -5920.0, 5536.0, 77.000, 1.164, 0, 'B00C' )
    set gg_dest_B00C_0304 = BlzCreateDestructableWithSkin( 'B00C', -5536.0, 5984.0, 157.560, 0.950, 0, 'B00C' )
    set gg_dest_B00C_6116 = BlzCreateDestructableWithSkin( 'B00C', -5344.0, 5600.0, 220.000, 0.825, 0, 'B00C' )
    set gg_dest_B00C_6113 = BlzCreateDestructableWithSkin( 'B00C', -5344.0, 5664.0, 181.000, 1.261, 0, 'B00C' )
    set gg_dest_B00C_6047 = BlzCreateDestructableWithSkin( 'B00C', -6112.0, 6240.0, 76.693, 1.150, 0, 'B00C' )
    set d = BlzCreateDestructableWithSkin( 'LTbr', -10016.0, 1376.0, 94.000, 1.232, 0, 'LTbr' )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function ItemTable000000_DropItems )
    set d = BlzCreateDestructableWithSkin( 'LTbr', -9504.0, 1312.0, 199.000, 1.188, 0, 'LTbr' )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function ItemTable000000_DropItems )
    set d = BlzCreateDestructableWithSkin( 'LTbr', -10144.0, 1056.0, 71.000, 1.240, 0, 'LTbr' )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function ItemTable000000_DropItems )
    set d = BlzCreateDestructableWithSkin( 'LTbr', -608.0, 4384.0, 313.000, 1.336, 0, 'LTbr' )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function ItemTable000000_DropItems )
    set d = BlzCreateDestructableWithSkin( 'LTcr', -448.0, 4288.0, 311.000, 1.165, 1, 'LTcr' )
    set t = CreateTrigger(  )
    call TriggerRegisterDeathEvent( t, d )
    call TriggerAddAction( t, function SaveDyingWidget )
    call TriggerAddAction( t, function ItemTable000000_DropItems )
    set gg_dest_VTlt_0194 = BlzCreateDestructableWithSkin( 'VTlt', -3968.0, 3520.0, 270.000, 0.934, 9, 'VTlt' )
    set gg_dest_VTlt_0196 = BlzCreateDestructableWithSkin( 'VTlt', -3904.0, 3392.0, 270.000, 0.808, 6, 'VTlt' )
endfunction

//***************************************************************************
//*
//*  Unit Creation
//*
//***************************************************************************

//===========================================================================
function CreateBuildingsForPlayer0 takes nothing returns nothing
    local player p = Player(0)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'o60X', -3296.0, 1632.0, 270.000, 'o60X' )
    set u = BlzCreateUnitWithSkin( p, 'o60W', -3744.0, 1184.0, 270.000, 'o60W' )
    set u = BlzCreateUnitWithSkin( p, 'o60W', -5728.0, 2656.0, 270.000, 'o60W' )
    set u = BlzCreateUnitWithSkin( p, 'o614', -3968.0, 2176.0, 270.000, 'o614' )
    set u = BlzCreateUnitWithSkin( p, 'o60Z', -4288.0, 3456.0, 270.000, 'o60Z' )
    set u = BlzCreateUnitWithSkin( p, 'o60W', -3168.0, 2848.0, 270.000, 'o60W' )
    set u = BlzCreateUnitWithSkin( p, 'o610', -5440.0, 2752.0, 270.000, 'o610' )
    set u = BlzCreateUnitWithSkin( p, 'o60L', -3456.0, 1280.0, 270.000, 'o60L' )
    set u = BlzCreateUnitWithSkin( p, 'o60X', -4896.0, 1056.0, 270.000, 'o60X' )
    set u = BlzCreateUnitWithSkin( p, 'o60X', -4704.0, 800.0, 270.000, 'o60X' )
    set u = BlzCreateUnitWithSkin( p, 'o60W', -5664.0, 3744.0, 270.000, 'o60W' )
    set u = BlzCreateUnitWithSkin( p, 'o60W', -4640.0, 3872.0, 270.000, 'o60W' )
endfunction

//===========================================================================
function CreateUnitsForPlayer0 takes nothing returns nothing
    local player p = Player(0)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_o608_0008 = BlzCreateUnitWithSkin( p, 'o608', -3006.1, 1849.0, 0.000, 'o608' )
    set gg_unit_O61P_0009 = BlzCreateUnitWithSkin( p, 'O61P', -2760.5, 1857.0, 0.000, 'O61P' )
    call SetHeroLevel( gg_unit_O61P_0009, 6, false )
    call SelectHeroSkill( gg_unit_O61P_0009, 'AOws' )
    call SelectHeroSkill( gg_unit_O61P_0009, 'AOws' )
    call SelectHeroSkill( gg_unit_O61P_0009, 'ANsh' )
    call SelectHeroSkill( gg_unit_O61P_0009, 'ANsh' )
    call SelectHeroSkill( gg_unit_O61P_0009, 'AOcr' )
    call SelectHeroSkill( gg_unit_O61P_0009, 'AOre' )
    set gg_unit_o605_0010 = BlzCreateUnitWithSkin( p, 'o605', -2880.7, 1848.4, 0.000, 'o605' )
    call SetUnitColor( gg_unit_o605_0010, ConvertPlayerColor(0) )
    set gg_unit_O617_0011 = BlzCreateUnitWithSkin( p, 'O617', -2781.6, 1726.8, 0.000, 'O617' )
    call SetUnitColor( gg_unit_O617_0011, ConvertPlayerColor(20) )
    set gg_unit_E602_0012 = BlzCreateUnitWithSkin( p, 'E602', -4988.4, 1745.7, 261.110, 'E602' )
    call SetHeroLevel( gg_unit_E602_0012, 10, false )
    call SelectHeroSkill( gg_unit_E602_0012, 'AEev' )
    call SelectHeroSkill( gg_unit_E602_0012, 'AEev' )
    call SelectHeroSkill( gg_unit_E602_0012, 'AEev' )
    call SelectHeroSkill( gg_unit_E602_0012, 'AEfk' )
    call SelectHeroSkill( gg_unit_E602_0012, 'AEfk' )
    call SelectHeroSkill( gg_unit_E602_0012, 'AEfk' )
    call SelectHeroSkill( gg_unit_E602_0012, 'AEsh' )
    call SelectHeroSkill( gg_unit_E602_0012, 'AEsh' )
    call SelectHeroSkill( gg_unit_E602_0012, 'AEsh' )
    call SelectHeroSkill( gg_unit_E602_0012, 'A61O' )
    call SelectHeroSkill( gg_unit_E602_0012, 'A61O' )
    call SelectHeroSkill( gg_unit_E602_0012, 'A61O' )
    call IssueImmediateOrder( gg_unit_E602_0012, "" )
    call SelectHeroSkill( gg_unit_E602_0012, 'ANr2' )
    set gg_unit_O60B_0013 = BlzCreateUnitWithSkin( p, 'O60B', -2885.9, 1735.3, 0.000, 'O60B' )
    call SetHeroLevel( gg_unit_O60B_0013, 6, false )
    call SetUnitColor( gg_unit_O60B_0013, ConvertPlayerColor(2) )
    call SelectHeroSkill( gg_unit_O60B_0013, 'A63X' )
    call SelectHeroSkill( gg_unit_O60B_0013, 'A63X' )
    call IssueImmediateOrder( gg_unit_O60B_0013, "" )
    call SelectHeroSkill( gg_unit_O60B_0013, 'A63Y' )
    call IssueImmediateOrder( gg_unit_O60B_0013, "" )
    set gg_unit_O602_0014 = BlzCreateUnitWithSkin( p, 'O602', -3013.3, 1724.2, 0.000, 'O602' )
    call SetHeroLevel( gg_unit_O602_0014, 6, false )
    call SetUnitColor( gg_unit_O602_0014, ConvertPlayerColor(0) )
    call SelectHeroSkill( gg_unit_O602_0014, 'AHbh' )
    call SelectHeroSkill( gg_unit_O602_0014, 'A00E' )
    call SelectHeroSkill( gg_unit_O602_0014, 'A00E' )
    call IssueImmediateOrder( gg_unit_O602_0014, "" )
    call SelectHeroSkill( gg_unit_O602_0014, 'A008' )
    call IssueImmediateOrder( gg_unit_O602_0014, "" )
    call SelectHeroSkill( gg_unit_O602_0014, 'A00F' )
    call SelectHeroSkill( gg_unit_O602_0014, 'A00F' )
    call IssueImmediateOrder( gg_unit_O602_0014, "" )
    call SelectHeroSkill( gg_unit_O602_0014, 'A00G' )
    call IssueImmediateOrder( gg_unit_O602_0014, "" )
    call UnitAddItemToSlotById( gg_unit_O602_0014, 'X002', 0 )
    call UnitAddItemToSlotById( gg_unit_O602_0014, 'I608', 1 )
    set gg_unit_o60D_0117 = BlzCreateUnitWithSkin( p, 'o60D', -2863.1, 2137.6, 0.000, 'o60D' )
    set gg_unit_o60D_0180 = BlzCreateUnitWithSkin( p, 'o60D', -3938.1, 3268.0, 77.140, 'o60D' )
    set gg_unit_o60D_0181 = BlzCreateUnitWithSkin( p, 'o60D', -3842.4, 2760.0, 83.184, 'o60D' )
    set u = BlzCreateUnitWithSkin( p, 'o60O', -6116.8, 2581.5, 334.681, 'o60O' )
    set gg_unit_o60D_0422 = BlzCreateUnitWithSkin( p, 'o60D', -3911.0, 2470.8, 82.554, 'o60D' )
    set gg_unit_o60D_0423 = BlzCreateUnitWithSkin( p, 'o60D', -3009.9, 2128.0, 0.000, 'o60D' )
    set gg_unit_o619_0424 = BlzCreateUnitWithSkin( p, 'o619', -2878.9, 1988.2, 0.000, 'o619' )
    call SetUnitColor( gg_unit_o619_0424, ConvertPlayerColor(20) )
    set gg_unit_o619_0425 = BlzCreateUnitWithSkin( p, 'o619', -2746.5, 1988.8, 0.000, 'o619' )
    call SetUnitColor( gg_unit_o619_0425, ConvertPlayerColor(20) )
    set u = BlzCreateUnitWithSkin( p, 'o60G', -6218.1, 2101.7, 321.313, 'o60G' )
    set u = BlzCreateUnitWithSkin( p, 'o60G', -6271.0, 1958.6, 4.216, 'o60G' )
    set u = BlzCreateUnitWithSkin( p, 'o60G', -4925.4, 3934.6, 217.941, 'o60G' )
    set u = BlzCreateUnitWithSkin( p, 'o60G', -3047.5, 2630.0, 279.644, 'o60G' )
    set u = BlzCreateUnitWithSkin( p, 'o60G', -3978.1, 836.5, 4.070, 'o60G' )
    set u = BlzCreateUnitWithSkin( p, 'o60O', -3823.0, 951.9, 227.867, 'o60O' )
    set u = BlzCreateUnitWithSkin( p, 'o60O', -3727.4, 802.7, 130.424, 'o60O' )
    set gg_unit_o60O_0435 = BlzCreateUnitWithSkin( p, 'o60O', -3278.9, 2110.9, 334.681, 'o60O' )
    set gg_unit_npig_0439 = BlzCreateUnitWithSkin( p, 'npig', -2751.2, 2126.2, 0.000, 'npig' )
    set gg_unit_o60O_0446 = BlzCreateUnitWithSkin( p, 'o60O', -3137.3, 2121.7, 334.681, 'o60O' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer1 takes nothing returns nothing
    local player p = Player(1)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h62B', -10176.0, -128.0, 270.000, 'h62B' )
    set u = BlzCreateUnitWithSkin( p, 'h626', -9216.0, 384.0, 190.237, 'h626' )
    set u = BlzCreateUnitWithSkin( p, 'h62A', -10752.0, -640.0, 270.000, 'h62A' )
    set u = BlzCreateUnitWithSkin( p, 'h626', -9152.0, -1024.0, 236.561, 'h626' )
    set u = BlzCreateUnitWithSkin( p, 'h60A', -10048.0, 512.0, 261.494, 'h60A' )
    set u = BlzCreateUnitWithSkin( p, 'n61N', -10208.0, 1184.0, 279.134, 'n61N' )
    set u = BlzCreateUnitWithSkin( p, 'h62A', -10688.0, 128.0, 270.000, 'h62A' )
    set u = BlzCreateUnitWithSkin( p, 'h62A', -10368.0, 1088.0, 306.312, 'h62A' )
    set u = BlzCreateUnitWithSkin( p, 'n61N', -9504.0, 928.0, 270.000, 'n61N' )
    set u = BlzCreateUnitWithSkin( p, 'n61N', -10688.0, -864.0, 70.106, 'n61N' )
    set u = BlzCreateUnitWithSkin( p, 'h629', -9664.0, -1024.0, 270.000, 'h629' )
    set u = BlzCreateUnitWithSkin( p, 'n61R', -10016.0, -800.0, 39.814, 'n61R' )
    set u = BlzCreateUnitWithSkin( p, 'h62A', -9600.0, 1088.0, 270.000, 'h62A' )
endfunction

//===========================================================================
function CreateUnitsForPlayer1 takes nothing returns nothing
    local player p = Player(1)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h61I', -10228.4, 223.9, 304.343, 'h61I' )
    set u = BlzCreateUnitWithSkin( p, 'o60A', -9741.4, 611.7, 304.960, 'o60A' )
    set u = BlzCreateUnitWithSkin( p, 'n604', -9399.5, 204.3, 300.563, 'n604' )
    set u = BlzCreateUnitWithSkin( p, 'n61T', -9810.3, -76.1, 332.713, 'n61T' )
    set u = BlzCreateUnitWithSkin( p, 'n604', -9511.5, 122.4, 320.703, 'n604' )
    set u = BlzCreateUnitWithSkin( p, 'n61T', -9532.8, -1467.3, 60.328, 'n61T' )
    set u = BlzCreateUnitWithSkin( p, 'n61T', -9568.5, -1280.2, 14.746, 'n61T' )
    set u = BlzCreateUnitWithSkin( p, 'e60K', -9485.1, -1094.1, 50.483, 'e60K' )
    set u = BlzCreateUnitWithSkin( p, 'n604', -9684.8, -219.4, 349.755, 'n604' )
    set u = BlzCreateUnitWithSkin( p, 'n604', -9673.2, -425.8, 12.165, 'n604' )
    set u = BlzCreateUnitWithSkin( p, 'h60T', -9430.3, -868.1, 53.344, 'h60T' )
    set gg_unit_H62H_0260 = BlzCreateUnitWithSkin( p, 'H62H', -10636.6, -2545.1, 325.100, 'H62H' )
    set u = BlzCreateUnitWithSkin( p, 'h60T', -9543.0, -339.0, 0.744, 'h60T' )
    set u = BlzCreateUnitWithSkin( p, 'h61V', -10271.7, -607.5, 10.285, 'h61V' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer4 takes nothing returns nothing
    local player p = Player(4)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h629', 6368.0, -6464.0, 270.000, 'h629' )
    set u = BlzCreateUnitWithSkin( p, 'h62C', 6272.0, -4608.0, 313.565, 'h62C' )
    set u = BlzCreateUnitWithSkin( p, 'h626', 6720.0, -5696.0, 240.925, 'h626' )
    set u = BlzCreateUnitWithSkin( p, 'n61N', 5728.0, -4832.0, 343.275, 'n61N' )
    set u = BlzCreateUnitWithSkin( p, 'h62A', 5760.0, -4672.0, 270.000, 'h62A' )
    set u = BlzCreateUnitWithSkin( p, 'h626', 5760.0, -6272.0, 273.943, 'h626' )
    set u = BlzCreateUnitWithSkin( p, 'h611', 5120.0, -4800.0, 289.431, 'h611' )
    set u = BlzCreateUnitWithSkin( p, 'n61N', 4704.0, -6048.0, 71.847, 'n61N' )
    set u = BlzCreateUnitWithSkin( p, 'h62A', 4544.0, -5056.0, 336.499, 'h62A' )
    set u = BlzCreateUnitWithSkin( p, 'h62A', 6784.0, -4416.0, 270.000, 'h62A' )
    set u = BlzCreateUnitWithSkin( p, 'h62A', 7680.0, -4800.0, 270.000, 'h62A' )
    set u = BlzCreateUnitWithSkin( p, 'h60A', 7168.0, -4864.0, 220.229, 'h60A' )
    set u = BlzCreateUnitWithSkin( p, 'h624', 6208.0, -5824.0, 182.534, 'h624' )
    set u = BlzCreateUnitWithSkin( p, 'n61N', 6944.0, -4448.0, 285.269, 'n61N' )
endfunction

//===========================================================================
function CreateUnitsForPlayer4 takes nothing returns nothing
    local player p = Player(4)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h61I', 6947.0, -5809.5, 245.598, 'h61I' )
    set u = BlzCreateUnitWithSkin( p, 'h61I', 6532.9, -5952.7, 311.023, 'h61I' )
    set u = BlzCreateUnitWithSkin( p, 'h60T', 7496.5, -5574.9, 358.552, 'h60T' )
    set u = BlzCreateUnitWithSkin( p, 'h60T', 7502.6, -5148.3, 320.342, 'h60T' )
    set u = BlzCreateUnitWithSkin( p, 'h60T', 6642.0, -6204.1, 358.552, 'h60T' )
    set u = BlzCreateUnitWithSkin( p, 'n61T', 7158.2, -5578.6, 14.843, 'n61T' )
    set u = BlzCreateUnitWithSkin( p, 'h61V', 7246.5, -5154.4, 333.500, 'h61V' )
    set u = BlzCreateUnitWithSkin( p, 'o60A', 5872.3, -5239.2, 328.051, 'o60A' )
    set u = BlzCreateUnitWithSkin( p, 'e60K', 6114.5, -5503.6, 95.160, 'e60K' )
    set u = BlzCreateUnitWithSkin( p, 'e60K', 6701.4, -5926.8, 324.444, 'e60K' )
    set u = BlzCreateUnitWithSkin( p, 'n61T', 4975.3, -5125.5, 229.867, 'n61T' )
    set u = BlzCreateUnitWithSkin( p, 'n604', 6754.5, -4637.3, 168.859, 'n604' )
    set u = BlzCreateUnitWithSkin( p, 'n604', 6707.8, -4792.3, 102.115, 'n604' )
    set u = BlzCreateUnitWithSkin( p, 'n604', 7250.4, -5767.1, 26.171, 'n604' )
    set u = BlzCreateUnitWithSkin( p, 'n604', 7394.8, -5838.5, 45.967, 'n604' )
    set u = BlzCreateUnitWithSkin( p, 'e60K', 7217.4, -5347.4, 359.686, 'e60K' )
    set u = BlzCreateUnitWithSkin( p, 'h61I', 7364.4, -5225.5, 335.593, 'h61I' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer9 takes nothing returns nothing
    local player p = Player(9)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_h005_0027 = BlzCreateUnitWithSkin( p, 'h005', -11104.0, -2848.0, 326.448, 'h005' )
    set gg_unit_h005_0034 = BlzCreateUnitWithSkin( p, 'h005', -9760.0, -2528.0, 242.329, 'h005' )
    set gg_unit_h005_0108 = BlzCreateUnitWithSkin( p, 'h005', -10144.0, -2272.0, 270.000, 'h005' )
    set gg_unit_h004_0111 = BlzCreateUnitWithSkin( p, 'h004', -10976.0, -2016.0, 270.000, 'h004' )
    set gg_unit_h60Z_0240 = BlzCreateUnitWithSkin( p, 'h60Z', -9920.0, -3072.0, 270.000, 'h60Z' )
    set gg_unit_h60Z_0241 = BlzCreateUnitWithSkin( p, 'h60Z', -9856.0, -2304.0, 270.000, 'h60Z' )
endfunction

//===========================================================================
function CreateUnitsForPlayer9 takes nothing returns nothing
    local player p = Player(9)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'hpea', -10836.0, -2210.4, 72.437, 'hpea' )
    set gg_unit_h60K_0029 = BlzCreateUnitWithSkin( p, 'h60K', -10493.4, -2593.6, 6.419, 'h60K' )
    set u = BlzCreateUnitWithSkin( p, 'hrdh', -10966.0, -2974.1, 355.288, 'hrdh' )
    set u = BlzCreateUnitWithSkin( p, 'hrdh', -10420.2, -2243.7, 25.348, 'hrdh' )
    set gg_unit_H61J_0057 = BlzCreateUnitWithSkin( p, 'H61J', -10638.9, -2701.6, 20.300, 'H61J' )
    call SetHeroLevel( gg_unit_H61J_0057, 10, false )
    call SetUnitColor( gg_unit_H61J_0057, ConvertPlayerColor(1) )
    call SelectHeroSkill( gg_unit_H61J_0057, 'A62M' )
    call SelectHeroSkill( gg_unit_H61J_0057, 'A62M' )
    call SelectHeroSkill( gg_unit_H61J_0057, 'A62M' )
    call IssueImmediateOrder( gg_unit_H61J_0057, "" )
    call SelectHeroSkill( gg_unit_H61J_0057, 'A621' )
    call SelectHeroSkill( gg_unit_H61J_0057, 'A621' )
    call SelectHeroSkill( gg_unit_H61J_0057, 'A621' )
    call IssueImmediateOrder( gg_unit_H61J_0057, "" )
    call SelectHeroSkill( gg_unit_H61J_0057, 'A620' )
    call SelectHeroSkill( gg_unit_H61J_0057, 'A620' )
    call SelectHeroSkill( gg_unit_H61J_0057, 'A620' )
    call IssueImmediateOrder( gg_unit_H61J_0057, "" )
    call SelectHeroSkill( gg_unit_H61J_0057, 'A622' )
    call IssueImmediateOrder( gg_unit_H61J_0057, "" )
    set u = BlzCreateUnitWithSkin( p, 'e601', -10662.9, -2049.0, 281.183, 'e601' )
    set u = BlzCreateUnitWithSkin( p, 'hpea', -10900.3, -2890.3, 265.853, 'hpea' )
    set u = BlzCreateUnitWithSkin( p, 'e601', -10454.6, -2047.7, 235.662, 'e601' )
    set gg_unit_hcth_0237 = BlzCreateUnitWithSkin( p, 'hcth', -10256.8, -2560.9, 168.401, 'hcth' )
    set u = BlzCreateUnitWithSkin( p, 'hrdh', -10756.2, -2166.8, 134.123, 'hrdh' )
    set u = BlzCreateUnitWithSkin( p, 'hpea', -11179.7, -2559.0, 123.864, 'hpea' )
    set u = BlzCreateUnitWithSkin( p, 'hpea', -10352.6, -2299.0, 135.779, 'hpea' )
    set gg_unit_h60K_0262 = BlzCreateUnitWithSkin( p, 'h60K', -10365.8, -2465.8, 324.884, 'h60K' )
    set gg_unit_h60K_0267 = BlzCreateUnitWithSkin( p, 'h60K', -10467.3, -2479.8, 340.802, 'h60K' )
    set gg_unit_h60B_0268 = BlzCreateUnitWithSkin( p, 'h60B', -10975.8, -2664.3, 27.298, 'h60B' )
    set gg_unit_h60K_0269 = BlzCreateUnitWithSkin( p, 'h60K', -10378.1, -2673.2, 35.928, 'h60K' )
    set gg_unit_h60B_0270 = BlzCreateUnitWithSkin( p, 'h60B', -10827.8, -2630.3, 189.558, 'h60B' )
    set u = BlzCreateUnitWithSkin( p, 'h60L', -11162.4, -2188.6, 350.330, 'h60L' )
    set u = BlzCreateUnitWithSkin( p, 'h60L', -11268.7, -2436.4, 356.615, 'h60L' )
    set gg_unit_h60K_0310 = BlzCreateUnitWithSkin( p, 'h60K', -9942.2, -2643.1, 332.555, 'h60K' )
    set gg_unit_h60K_0311 = BlzCreateUnitWithSkin( p, 'h60K', -9821.4, -2882.6, 26.379, 'h60K' )
    set u = BlzCreateUnitWithSkin( p, 'e601', -10109.0, -2988.3, 23.110, 'e601' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer11 takes nothing returns nothing
    local player p = Player(11)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'o61I', 3968.0, -64.0, 270.000, 'o61I' )
    set u = BlzCreateUnitWithSkin( p, 'o61K', 3296.0, -288.0, 270.000, 'o61K' )
    set gg_unit_o61I_0074 = BlzCreateUnitWithSkin( p, 'o61I', 2176.0, 192.0, 270.000, 'o61I' )
    set u = BlzCreateUnitWithSkin( p, 'o61J', 3456.0, -896.0, 270.000, 'o61J' )
    set u = BlzCreateUnitWithSkin( p, 'n60W', 3488.0, -1312.0, 270.000, 'n60W' )
    set u = BlzCreateUnitWithSkin( p, 'o61I', 5184.0, -1344.0, 270.000, 'o61I' )
    set u = BlzCreateUnitWithSkin( p, 'o61I', 4672.0, -1088.0, 270.000, 'o61I' )
    set u = BlzCreateUnitWithSkin( p, 'n60W', 4768.0, 32.0, 270.000, 'n60W' )
    set u = BlzCreateUnitWithSkin( p, 'n60X', 2944.0, -672.0, 38.666, 'n60X' )
endfunction

//===========================================================================
function CreateUnitsForPlayer11 takes nothing returns nothing
    local player p = Player(11)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'nftr', 4034.9, -315.6, 342.162, 'nftr' )
    set u = BlzCreateUnitWithSkin( p, 'nftr', 4102.4, -453.1, 340.967, 'nftr' )
    set gg_unit_nfsh_0454 = BlzCreateUnitWithSkin( p, 'nfsh', 3659.7, -1110.0, 45.446, 'nfsh' )
    set u = BlzCreateUnitWithSkin( p, 'nftr', 4181.1, -767.8, 42.923, 'nftr' )
    set u = BlzCreateUnitWithSkin( p, 'nfsp', 3660.7, -746.5, 15.694, 'nfsp' )
    set u = BlzCreateUnitWithSkin( p, 'nftt', 3763.8, -407.9, 348.959, 'nftt' )
    set u = BlzCreateUnitWithSkin( p, 'nftb', 3456.8, -646.4, 3.387, 'nftb' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer12 takes nothing returns nothing
    local player p = Player(12)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h629', -10784.0, -6752.0, 270.000, 'h629' )
    set u = BlzCreateUnitWithSkin( p, 'h60A', -8960.0, -6336.0, 219.377, 'h60A' )
    set u = BlzCreateUnitWithSkin( p, 'h62G', -10176.0, -6688.0, 323.109, 'h62G' )
    set u = BlzCreateUnitWithSkin( p, 'n61N', -10528.0, -7136.0, 86.148, 'n61N' )
    set u = BlzCreateUnitWithSkin( p, 'h62A', -9984.0, -5952.0, 270.000, 'h62A' )
    set u = BlzCreateUnitWithSkin( p, 'h624', -8896.0, -6912.0, 134.036, 'h624' )
    set u = BlzCreateUnitWithSkin( p, 'h62A', -10048.0, -5056.0, 325.280, 'h62A' )
    set u = BlzCreateUnitWithSkin( p, 'n61N', -10976.0, -4448.0, 314.290, 'n61N' )
    set u = BlzCreateUnitWithSkin( p, 'h626', -9664.0, -4224.0, 229.651, 'h626' )
    set u = BlzCreateUnitWithSkin( p, 'h62A', -11008.0, -5312.0, 343.165, 'h62A' )
    set u = BlzCreateUnitWithSkin( p, 'h61L', -10784.0, -4192.0, 339.476, 'h61L' )
    set u = BlzCreateUnitWithSkin( p, 'h62A', -11136.0, -5440.0, 340.563, 'h62A' )
    set u = BlzCreateUnitWithSkin( p, 'n61R', -8928.0, -4960.0, 270.000, 'n61R' )
    set u = BlzCreateUnitWithSkin( p, 'n61N', -10080.0, -4128.0, 277.665, 'n61N' )
    set gg_unit_h62A_0198 = BlzCreateUnitWithSkin( p, 'h62A', -10368.0, -4032.0, 270.000, 'h62A' )
    set u = BlzCreateUnitWithSkin( p, 'h626', -9664.0, -6624.0, 249.372, 'h626' )
endfunction

//===========================================================================
function CreateUnitsForPlayer12 takes nothing returns nothing
    local player p = Player(12)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_h61I_0107 = BlzCreateUnitWithSkin( p, 'h61I', -6928.0, -1980.8, 260.080, 'h61I' )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, gg_unit_h61I_0107, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, gg_unit_h61I_0107, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000137_DropItems )
    set u = BlzCreateUnitWithSkin( p, 'h60T', -10919.8, -5815.5, 46.441, 'h60T' )
    set u = BlzCreateUnitWithSkin( p, 'o60A', -9186.9, -6696.7, 78.247, 'o60A' )
    set u = BlzCreateUnitWithSkin( p, 'n61T', -10091.7, -4676.4, 74.750, 'n61T' )
    set u = BlzCreateUnitWithSkin( p, 'n61T', -10725.8, -4507.6, 355.777, 'n61T' )
    set u = BlzCreateUnitWithSkin( p, 'n604', -9400.0, -5422.3, 3.497, 'n604' )
    set u = BlzCreateUnitWithSkin( p, 'h61V', -10272.5, -6273.8, 37.640, 'h61V' )
    set u = BlzCreateUnitWithSkin( p, 'n604', -9878.8, -4335.7, 270.000, 'n604' )
    set u = BlzCreateUnitWithSkin( p, 'n604', -10189.3, -5144.7, 270.000, 'n604' )
    set u = BlzCreateUnitWithSkin( p, 'n604', -9412.1, -6468.8, 73.287, 'n604' )
    set u = BlzCreateUnitWithSkin( p, 'n604', -11110.8, -5942.9, 58.077, 'n604' )
    set u = BlzCreateUnitWithSkin( p, 'o60A', -9818.7, -5356.6, 328.051, 'o60A' )
    set u = BlzCreateUnitWithSkin( p, 'o60A', -10225.8, -6133.8, 30.370, 'o60A' )
    set u = BlzCreateUnitWithSkin( p, 'e60K', -10011.9, -6235.6, 18.928, 'e60K' )
    set u = BlzCreateUnitWithSkin( p, 'h60T', -9343.5, -5668.7, 15.755, 'h60T' )
    set u = BlzCreateUnitWithSkin( p, 'h60T', -9504.8, -4450.1, 326.898, 'h60T' )
    set u = BlzCreateUnitWithSkin( p, 'h60T', -9482.7, -4707.0, 7.076, 'h60T' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer14 takes nothing returns nothing
    local player p = Player(14)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_edob_0039 = BlzCreateUnitWithSkin( p, 'edob', 6912.0, 4992.0, 330.978, 'edob' )
    set u = BlzCreateUnitWithSkin( p, 'nef0', 8928.0, 5600.0, 215.000, 'nef0' )
    set u = BlzCreateUnitWithSkin( p, 'nef1', 9632.0, 6688.0, 240.000, 'nef1' )
    set u = BlzCreateUnitWithSkin( p, 'n006', 10240.0, 6528.0, 270.000, 'n006' )
    set u = BlzCreateUnitWithSkin( p, 'nef3', 9888.0, 5024.0, 230.000, 'nef3' )
    set u = BlzCreateUnitWithSkin( p, 'nef4', 6176.0, 4768.0, 212.579, 'nef4' )
    set u = BlzCreateUnitWithSkin( p, 'nef5', 8544.0, 4960.0, 320.000, 'nef5' )
    set u = BlzCreateUnitWithSkin( p, 'nef6', 8608.0, 4576.0, 220.080, 'nef6' )
    set u = BlzCreateUnitWithSkin( p, 'nefm', 8032.0, 3168.0, 285.000, 'nefm' )
    set u = BlzCreateUnitWithSkin( p, 'h615', 5856.0, 4960.0, 270.000, 'h615' )
    set u = BlzCreateUnitWithSkin( p, 'nefm', 9184.0, 5920.0, 105.000, 'nefm' )
    set u = BlzCreateUnitWithSkin( p, 'nefm', 9952.0, 5472.0, 225.000, 'nefm' )
    set u = BlzCreateUnitWithSkin( p, 'h61M', 10368.0, 4800.0, 270.000, 'h61M' )
    set u = BlzCreateUnitWithSkin( p, 'h61N', 9152.0, 6336.0, 270.000, 'h61N' )
    set u = BlzCreateUnitWithSkin( p, 'n006', 7744.0, 4736.0, 270.000, 'n006' )
    set u = BlzCreateUnitWithSkin( p, 'negt', 8192.0, 3072.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'nefm', 10528.0, 5280.0, 175.000, 'nefm' )
    set u = BlzCreateUnitWithSkin( p, 'nef5', 8800.0, 4704.0, 337.099, 'nef5' )
    set u = BlzCreateUnitWithSkin( p, 'negt', 8768.0, 4544.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'negt', 9728.0, 3712.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'nef0', 8800.0, 6880.0, 280.000, 'nef0' )
    set u = BlzCreateUnitWithSkin( p, 'nef0', 9440.0, 7008.0, 240.000, 'nef0' )
    set u = BlzCreateUnitWithSkin( p, 'nef5', 7200.0, 4256.0, 354.442, 'nef5' )
    set u = BlzCreateUnitWithSkin( p, 'nef5', 6240.0, 5216.0, 270.000, 'nef5' )
    set u = BlzCreateUnitWithSkin( p, 'h621', 10720.0, 5728.0, 185.000, 'h621' )
    set u = BlzCreateUnitWithSkin( p, 'h620', 10528.0, 5472.0, 121.647, 'h620' )
    set u = BlzCreateUnitWithSkin( p, 'htow', 9792.0, 4224.0, 270.000, 'htow' )
    set u = BlzCreateUnitWithSkin( p, 'h620', 8288.0, 4704.0, 217.355, 'h620' )
    set u = BlzCreateUnitWithSkin( p, 'h621', 8992.0, 4704.0, 27.696, 'h621' )
    set u = BlzCreateUnitWithSkin( p, 'nefm', 8736.0, 2592.0, 245.000, 'nefm' )
    set u = BlzCreateUnitWithSkin( p, 'negt', 8320.0, 3904.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'negt', 9600.0, 4736.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'nefm', 9888.0, 4768.0, 280.000, 'nefm' )
    set u = BlzCreateUnitWithSkin( p, 'nefm', 8032.0, 5600.0, 215.771, 'nefm' )
    set u = BlzCreateUnitWithSkin( p, 'nefm', 8736.0, 4896.0, 95.000, 'nefm' )
    set u = BlzCreateUnitWithSkin( p, 'nefm', 8416.0, 5152.0, 85.000, 'nefm' )
    set u = BlzCreateUnitWithSkin( p, 'nefm', 7264.0, 5152.0, 321.222, 'nefm' )
    set u = BlzCreateUnitWithSkin( p, 'nefm', 6112.0, 5024.0, 270.000, 'nefm' )
    set u = BlzCreateUnitWithSkin( p, 'nefm', 7392.0, 4192.0, 96.583, 'nefm' )
    set u = BlzCreateUnitWithSkin( p, 'nefm', 8480.0, 4768.0, 270.000, 'nefm' )
    set u = BlzCreateUnitWithSkin( p, 'nefm', 9056.0, 4512.0, 10.632, 'nefm' )
    set u = BlzCreateUnitWithSkin( p, 'h621', 8864.0, 4384.0, 247.665, 'h621' )
endfunction

//===========================================================================
function CreateUnitsForPlayer14 takes nothing returns nothing
    local player p = Player(14)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'hhes', 9362.5, 3796.5, 206.517, 'hhes' )
    set u = BlzCreateUnitWithSkin( p, 'hhes', 8989.3, 4050.3, 280.355, 'hhes' )
    set u = BlzCreateUnitWithSkin( p, 'hhes', 9092.2, 3938.6, 264.287, 'hhes' )
    set u = BlzCreateUnitWithSkin( p, 'hhes', 9204.4, 3845.8, 234.587, 'hhes' )
    set u = BlzCreateUnitWithSkin( p, 'hmpr', 9543.1, 4217.7, 229.925, 'hmpr' )
    set u = BlzCreateUnitWithSkin( p, 'hmpr', 9359.8, 4342.2, 246.882, 'hmpr' )
    set u = BlzCreateUnitWithSkin( p, 'h60S', 9390.6, 4212.1, 239.901, 'h60S' )
    set u = BlzCreateUnitWithSkin( p, 'h60S', 9487.5, 4082.2, 225.711, 'h60S' )
    set u = BlzCreateUnitWithSkin( p, 'h60S', 9210.1, 4300.1, 257.311, 'h60S' )
    set u = BlzCreateUnitWithSkin( p, 'h60S', 9526.0, 3774.1, 195.347, 'h60S' )
    set gg_unit_hbot_0114 = BlzCreateUnitWithSkin( p, 'hbot', 7189.8, 6225.5, 174.259, 'hbot' )
    set gg_unit_hbot_0115 = BlzCreateUnitWithSkin( p, 'hbot', 6431.8, 6905.9, 39.174, 'hbot' )
    set u = BlzCreateUnitWithSkin( p, 'h003', 10280.8, 4419.9, 317.733, 'h003' )
    set u = BlzCreateUnitWithSkin( p, 'h003', 10103.6, 4551.0, 317.733, 'h003' )
    set u = BlzCreateUnitWithSkin( p, 'h003', 5649.1, 4779.2, 180.778, 'h003' )
    set u = BlzCreateUnitWithSkin( p, 'h003', 9689.0, 5737.2, 265.869, 'h003' )
    set u = BlzCreateUnitWithSkin( p, 'h003', 10412.8, 4239.3, 336.548, 'h003' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer17 takes nothing returns nothing
    local player p = Player(17)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'n60X', -544.0, -5664.0, 270.000, 'n60X' )
    set u = BlzCreateUnitWithSkin( p, 'n60W', -1184.0, -5856.0, 270.000, 'n60W' )
    set u = BlzCreateUnitWithSkin( p, 'n60W', -1184.0, -6048.0, 270.000, 'n60W' )
    set u = BlzCreateUnitWithSkin( p, 'n60W', -288.0, -6880.0, 270.000, 'n60W' )
    set u = BlzCreateUnitWithSkin( p, 'o61L', 320.0, -6592.0, 270.000, 'o61L' )
    set u = BlzCreateUnitWithSkin( p, 'o60Z', -1984.0, -6720.0, 270.000, 'o60Z' )
    set u = BlzCreateUnitWithSkin( p, 'o61I', -576.0, -6848.0, 270.000, 'o61I' )
    set u = BlzCreateUnitWithSkin( p, 'o61I', 64.0, -5568.0, 270.000, 'o61I' )
    set u = BlzCreateUnitWithSkin( p, 'o61I', 576.0, -6080.0, 270.000, 'o61I' )
    set u = BlzCreateUnitWithSkin( p, 'o61I', 448.0, -7104.0, 270.000, 'o61I' )
    set u = BlzCreateUnitWithSkin( p, 'o61I', -1344.0, -6528.0, 270.000, 'o61I' )
    set u = BlzCreateUnitWithSkin( p, 'n60X', -96.0, -7328.0, 12.289, 'n60X' )
    set u = BlzCreateUnitWithSkin( p, 'o61K', -288.0, -6176.0, 270.000, 'o61K' )
endfunction

//===========================================================================
function CreateUnitsForPlayer17 takes nothing returns nothing
    local player p = Player(17)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_nfsh_0457 = BlzCreateUnitWithSkin( p, 'nfsh', 136.1, -6115.1, 202.483, 'nfsh' )
    set u = BlzCreateUnitWithSkin( p, 'nftr', -492.0, -5969.5, 347.772, 'nftr' )
    set u = BlzCreateUnitWithSkin( p, 'nftr', -608.7, -5866.1, 256.242, 'nftr' )
    set u = BlzCreateUnitWithSkin( p, 'nftr', -401.1, -5814.0, 346.596, 'nftr' )
    set u = BlzCreateUnitWithSkin( p, 'nftt', 153.2, -6370.5, 275.470, 'nftt' )
    set u = BlzCreateUnitWithSkin( p, 'nftb', -3.0, -6369.0, 209.983, 'nftb' )
    set u = BlzCreateUnitWithSkin( p, 'nftb', 71.3, -6644.0, 160.725, 'nftb' )
    set u = BlzCreateUnitWithSkin( p, 'ocat', 173.2, -6920.2, 145.840, 'ocat' )
    call SetUnitAcquireRange( u, 200.0 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer18 takes nothing returns nothing
    local player p = Player(18)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'o61I', 10176.0, -2048.0, 270.000, 'o61I' )
    set u = BlzCreateUnitWithSkin( p, 'n60W', 11040.0, -1568.0, 270.000, 'n60W' )
    set u = BlzCreateUnitWithSkin( p, 'o61I', 10624.0, -3008.0, 270.000, 'o61I' )
    set u = BlzCreateUnitWithSkin( p, 'o61I', 11008.0, -3392.0, 270.000, 'o61I' )
    set u = BlzCreateUnitWithSkin( p, 'n60X', 10848.0, -1248.0, 270.000, 'n60X' )
endfunction

//===========================================================================
function CreateUnitsForPlayer18 takes nothing returns nothing
    local player p = Player(18)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_nfsh_0455 = BlzCreateUnitWithSkin( p, 'nfsh', 10989.5, -2228.4, 142.693, 'nfsh' )
    set u = BlzCreateUnitWithSkin( p, 'nftt', 10888.8, -1603.3, 208.960, 'nftt' )
    set u = BlzCreateUnitWithSkin( p, 'nfsp', 10716.1, -1951.1, 134.728, 'nfsp' )
    set u = BlzCreateUnitWithSkin( p, 'nftt', 10407.6, -2058.7, 208.227, 'nftt' )
    set u = BlzCreateUnitWithSkin( p, 'nftb', 10215.4, -1561.3, 259.784, 'nftb' )
    set u = BlzCreateUnitWithSkin( p, 'nfsp', 10819.1, -1766.4, 177.455, 'nfsp' )
    set u = BlzCreateUnitWithSkin( p, 'nfsp', 10724.3, -1582.1, 228.188, 'nfsp' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer19 takes nothing returns nothing
    local player p = Player(19)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'n60W', 10272.0, -5664.0, 270.000, 'n60W' )
    set u = BlzCreateUnitWithSkin( p, 'o61I', 10560.0, -6016.0, 270.000, 'o61I' )
    set u = BlzCreateUnitWithSkin( p, 'o61I', 9664.0, -6272.0, 270.000, 'o61I' )
    set u = BlzCreateUnitWithSkin( p, 'n60X', 9568.0, -5760.0, 355.066, 'n60X' )
endfunction

//===========================================================================
function CreateUnitsForPlayer19 takes nothing returns nothing
    local player p = Player(19)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_nfsh_0456 = BlzCreateUnitWithSkin( p, 'nfsh', 9792.4, -5722.0, 303.335, 'nfsh' )
    set u = BlzCreateUnitWithSkin( p, 'nftk', 9771.6, -6035.0, 6.090, 'nftk' )
    set u = BlzCreateUnitWithSkin( p, 'nftr', 10112.3, -5811.1, 285.163, 'nftr' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer20 takes nothing returns nothing
    local player p = Player(20)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'n60W', 2464.0, 2912.0, 270.000, 'n60W' )
    set u = BlzCreateUnitWithSkin( p, 'o61L', 2496.0, 2432.0, 270.000, 'o61L' )
    set u = BlzCreateUnitWithSkin( p, 'n60X', 2656.0, 1952.0, 270.000, 'n60X' )
    set u = BlzCreateUnitWithSkin( p, 'n60W', 1952.0, 1952.0, 270.000, 'n60W' )
    set u = BlzCreateUnitWithSkin( p, 'o61I', 1664.0, 2112.0, 270.000, 'o61I' )
    set u = BlzCreateUnitWithSkin( p, 'o61I', 1536.0, 2688.0, 270.000, 'o61I' )
endfunction

//===========================================================================
function CreateUnitsForPlayer20 takes nothing returns nothing
    local player p = Player(20)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'ocat', 2426.3, 2116.0, 145.840, 'ocat' )
    call SetUnitAcquireRange( u, 200.0 )
    set gg_unit_nfsh_0453 = BlzCreateUnitWithSkin( p, 'nfsh', 2311.0, 2633.7, 222.846, 'nfsh' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer21 takes nothing returns nothing
    local player p = Player(21)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h629', -7040.0, -7040.0, 270.000, 'h629' )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000127_DropItems )
    set gg_unit_h626_0248 = BlzCreateUnitWithSkin( p, 'h626', -8000.0, -3520.0, 270.000, 'h626' )
    set u = BlzCreateUnitWithSkin( p, 'h626', -1152.0, -2816.0, 270.000, 'h626' )
    set u = BlzCreateUnitWithSkin( p, 'n61R', 4064.0, -5984.0, 258.560, 'n61R' )
    set u = BlzCreateUnitWithSkin( p, 'h62A', 3840.0, -5952.0, 270.000, 'h62A' )
    set u = BlzCreateUnitWithSkin( p, 'h62A', -1216.0, -3008.0, 290.669, 'h62A' )
endfunction

//===========================================================================
function CreateUnitsForPlayer21 takes nothing returns nothing
    local player p = Player(21)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'e60G', -7208.6, -6866.4, 117.958, 'e60G' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'e60G', -7151.5, -6487.2, 153.320, 'e60G' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'e60G', -7442.5, -6900.7, 113.375, 'e60G' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'e60H', -7806.7, -6574.7, 100.119, 'e60H' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'e60H', -7394.8, -6279.5, 154.026, 'e60H' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'e60H', -7470.5, -6628.8, 111.464, 'e60H' )
    call SetUnitAcquireRange( u, 200.0 )
endfunction

//===========================================================================
function CreateBuildingsForPlayer22 takes nothing returns nothing
    local player p = Player(22)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h62A', -5952.0, -1472.0, 270.000, 'h62A' )
    set u = BlzCreateUnitWithSkin( p, 'h626', -7040.0, -1600.0, 270.000, 'h626' )
    set u = BlzCreateUnitWithSkin( p, 'h62A', -6016.0, -1344.0, 270.000, 'h62A' )
    set u = BlzCreateUnitWithSkin( p, 'h60A', -6720.0, -1408.0, 270.000, 'h60A' )
    set gg_unit_n61N_0152 = BlzCreateUnitWithSkin( p, 'n61N', -6048.0, -992.0, 270.000, 'n61N' )
    set u = BlzCreateUnitWithSkin( p, 'h62A', -7360.0, -1344.0, 270.000, 'h62A' )
endfunction

//===========================================================================
function CreateUnitsForPlayer22 takes nothing returns nothing
    local player p = Player(22)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h61V', -6511.6, -1693.4, 209.649, 'h61V' )
endfunction

//===========================================================================
function CreateUnitsForPlayer23 takes nothing returns nothing
    local player p = Player(23)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'o60A', 10932.7, -4435.9, 328.051, 'o60A' )
    set u = BlzCreateUnitWithSkin( p, 'h61I', 11048.3, -4433.2, 270.000, 'h61I' )
    set u = BlzCreateUnitWithSkin( p, 'e60G', 11383.2, -4390.5, 270.000, 'e60G' )
    set u = BlzCreateUnitWithSkin( p, 'e60K', 11292.8, -4391.9, 270.000, 'e60K' )
    set u = BlzCreateUnitWithSkin( p, 'h61V', 11105.1, -4019.4, 270.000, 'h61V' )
    set u = BlzCreateUnitWithSkin( p, 'h60T', 11205.2, -4397.5, 270.000, 'h60T' )
    set u = BlzCreateUnitWithSkin( p, 'e60H', 11232.9, -4038.6, 270.000, 'e60H' )
    set u = BlzCreateUnitWithSkin( p, 'H62H', -10358.6, -3324.8, 210.190, 'H62H' )
    set u = BlzCreateUnitWithSkin( p, 'H61J', -10555.7, -3325.8, 290.303, 'H61J' )
    call SetHeroLevel( u, 10, false )
    call SetUnitColor( u, ConvertPlayerColor(1) )
    call SelectHeroSkill( u, 'A62M' )
    call SelectHeroSkill( u, 'A62M' )
    call SelectHeroSkill( u, 'A62M' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A621' )
    call SelectHeroSkill( u, 'A621' )
    call SelectHeroSkill( u, 'A621' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A620' )
    call SelectHeroSkill( u, 'A620' )
    call SelectHeroSkill( u, 'A620' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A622' )
    call IssueImmediateOrder( u, "" )
    set u = BlzCreateUnitWithSkin( p, 'n61T', 11379.0, -4005.8, 270.000, 'n61T' )
    set u = BlzCreateUnitWithSkin( p, 'n604', 11129.6, -4410.6, 270.000, 'n604' )
    set u = BlzCreateUnitWithSkin( p, 'o608', -4490.9, 2611.0, 303.763, 'o608' )
    set u = BlzCreateUnitWithSkin( p, 'o60D', -4261.2, 2656.4, 216.816, 'o60D' )
    set u = BlzCreateUnitWithSkin( p, 'H61J', -5332.8, 4690.5, 326.547, 'H61J' )
    call SetHeroLevel( u, 10, false )
    call SetUnitColor( u, ConvertPlayerColor(1) )
    call SelectHeroSkill( u, 'A62M' )
    call SelectHeroSkill( u, 'A62M' )
    call SelectHeroSkill( u, 'A62M' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A621' )
    call SelectHeroSkill( u, 'A621' )
    call SelectHeroSkill( u, 'A621' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A620' )
    call SelectHeroSkill( u, 'A620' )
    call SelectHeroSkill( u, 'A620' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A622' )
    call IssueImmediateOrder( u, "" )
    set u = BlzCreateUnitWithSkin( p, 'H62I', -5126.9, 4731.2, 222.110, 'H62H' )
    set u = BlzCreateUnitWithSkin( p, 'O61P', -5908.0, 6034.3, 298.451, 'O61P' )
    call SetHeroLevel( u, 6, false )
    call SelectHeroSkill( u, 'AOws' )
    call SelectHeroSkill( u, 'AOws' )
    call SelectHeroSkill( u, 'ANsh' )
    call SelectHeroSkill( u, 'ANsh' )
    call SelectHeroSkill( u, 'AOcr' )
    call SelectHeroSkill( u, 'AOre' )
    set u = BlzCreateUnitWithSkin( p, 'H61J', -9435.2, -2797.3, 3.151, 'H61J' )
    call SetHeroLevel( u, 10, false )
    call SetUnitColor( u, ConvertPlayerColor(1) )
    call SelectHeroSkill( u, 'A62M' )
    call SelectHeroSkill( u, 'A62M' )
    call SelectHeroSkill( u, 'A62M' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A621' )
    call SelectHeroSkill( u, 'A621' )
    call SelectHeroSkill( u, 'A621' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A620' )
    call SelectHeroSkill( u, 'A620' )
    call SelectHeroSkill( u, 'A620' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A622' )
    call IssueImmediateOrder( u, "" )
    set u = BlzCreateUnitWithSkin( p, 'H61J', -5909.9, 5923.8, 307.928, 'H61J' )
    call SetHeroLevel( u, 10, false )
    call SetUnitColor( u, ConvertPlayerColor(1) )
    call SelectHeroSkill( u, 'A62M' )
    call SelectHeroSkill( u, 'A62M' )
    call SelectHeroSkill( u, 'A62M' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A621' )
    call SelectHeroSkill( u, 'A621' )
    call SelectHeroSkill( u, 'A621' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A620' )
    call SelectHeroSkill( u, 'A620' )
    call SelectHeroSkill( u, 'A620' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A622' )
    call IssueImmediateOrder( u, "" )
    set u = BlzCreateUnitWithSkin( p, 'E602', -5759.5, 6202.9, 235.884, 'E602' )
    call SetHeroLevel( u, 10, false )
    call SelectHeroSkill( u, 'AEev' )
    call SelectHeroSkill( u, 'AEev' )
    call SelectHeroSkill( u, 'AEev' )
    call SelectHeroSkill( u, 'AEfk' )
    call SelectHeroSkill( u, 'AEfk' )
    call SelectHeroSkill( u, 'AEfk' )
    call SelectHeroSkill( u, 'AEsh' )
    call SelectHeroSkill( u, 'AEsh' )
    call SelectHeroSkill( u, 'AEsh' )
    call SelectHeroSkill( u, 'A61O' )
    call SelectHeroSkill( u, 'A61O' )
    call SelectHeroSkill( u, 'A61O' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'ANr2' )
    set u = BlzCreateUnitWithSkin( p, 'O61P', -5857.9, 6784.7, 298.451, 'O61P' )
    call SetHeroLevel( u, 6, false )
    call SelectHeroSkill( u, 'AOws' )
    call SelectHeroSkill( u, 'AOws' )
    call SelectHeroSkill( u, 'ANsh' )
    call SelectHeroSkill( u, 'ANsh' )
    call SelectHeroSkill( u, 'AOcr' )
    call SelectHeroSkill( u, 'AOre' )
    set u = BlzCreateUnitWithSkin( p, 'O60B', -8379.9, -2730.9, 221.404, 'O60B' )
    call SetHeroLevel( u, 6, false )
    call SetUnitColor( u, ConvertPlayerColor(2) )
    call SelectHeroSkill( u, 'A63X' )
    call SelectHeroSkill( u, 'A63X' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A63Y' )
    call IssueImmediateOrder( u, "" )
    set u = BlzCreateUnitWithSkin( p, 'O602', -8624.0, -2968.0, 181.105, 'O602' )
    call SetHeroLevel( u, 6, false )
    call SetUnitColor( u, ConvertPlayerColor(0) )
    call SelectHeroSkill( u, 'AHbh' )
    set u = BlzCreateUnitWithSkin( p, 'O602', -8595.2, -2576.1, 266.341, 'O602' )
    call SetHeroLevel( u, 6, false )
    call SetUnitColor( u, ConvertPlayerColor(0) )
    call SelectHeroSkill( u, 'AHbh' )
    set u = BlzCreateUnitWithSkin( p, 'O60B', -8786.6, -2318.9, 275.510, 'O60B' )
    call SetHeroLevel( u, 6, false )
    call SetUnitColor( u, ConvertPlayerColor(2) )
    call SelectHeroSkill( u, 'A63X' )
    call SelectHeroSkill( u, 'A63X' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A63Y' )
    call IssueImmediateOrder( u, "" )
    set u = BlzCreateUnitWithSkin( p, 'o60D', -4756.9, 1684.7, 163.960, 'o60D' )
    set u = BlzCreateUnitWithSkin( p, 'n007', -4414.3, 2915.9, 315.960, 'n007' )
    set u = BlzCreateUnitWithSkin( p, 'H61J', -8594.1, -2705.4, 92.043, 'H61J' )
    call SetHeroLevel( u, 10, false )
    call SetUnitColor( u, ConvertPlayerColor(1) )
    call SelectHeroSkill( u, 'A62M' )
    call SelectHeroSkill( u, 'A62M' )
    call SelectHeroSkill( u, 'A62M' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A621' )
    call SelectHeroSkill( u, 'A621' )
    call SelectHeroSkill( u, 'A621' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A620' )
    call SelectHeroSkill( u, 'A620' )
    call SelectHeroSkill( u, 'A620' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A622' )
    call IssueImmediateOrder( u, "" )
    set u = BlzCreateUnitWithSkin( p, 'o619', -5102.0, 2705.8, 2.005, 'o619' )
    call SetUnitColor( u, ConvertPlayerColor(20) )
    set u = BlzCreateUnitWithSkin( p, 'o60G', -8452.8, -2579.5, 276.020, 'o60G' )
    set u = BlzCreateUnitWithSkin( p, 'H62H', -8872.7, -2774.9, 76.508, 'H62H' )
    set u = BlzCreateUnitWithSkin( p, 'h60B', -8721.3, -2836.0, 53.138, 'h60B' )
    set u = BlzCreateUnitWithSkin( p, 'h60B', -8458.4, -2832.3, 115.835, 'h60B' )
    set u = BlzCreateUnitWithSkin( p, 'h60K', -8303.0, -2754.2, 115.151, 'h60K' )
    set u = BlzCreateUnitWithSkin( p, 'O602', -4814.1, 2126.4, 241.390, 'O602' )
    call SetHeroLevel( u, 6, false )
    call SetUnitColor( u, ConvertPlayerColor(0) )
    call SelectHeroSkill( u, 'AHbh' )
    set u = BlzCreateUnitWithSkin( p, 'o608', -4679.2, 2263.8, 236.199, 'o608' )
    set u = BlzCreateUnitWithSkin( p, 'o60D', -4322.1, 2461.0, 130.684, 'o60D' )
    set u = BlzCreateUnitWithSkin( p, 'o608', -4257.6, 2707.2, 162.046, 'o608' )
    set u = BlzCreateUnitWithSkin( p, 'o608', -6022.2, 1972.1, 148.058, 'o608' )
    set u = BlzCreateUnitWithSkin( p, 'o605', -4305.5, 2922.2, 202.277, 'o605' )
    call SetUnitColor( u, ConvertPlayerColor(0) )
    set u = BlzCreateUnitWithSkin( p, 'O61P', -6048.7, 2214.4, 269.991, 'O61P' )
    call SetHeroLevel( u, 6, false )
    call SelectHeroSkill( u, 'AOws' )
    call SelectHeroSkill( u, 'AOws' )
    call SelectHeroSkill( u, 'ANsh' )
    call SelectHeroSkill( u, 'ANsh' )
    call SelectHeroSkill( u, 'AOcr' )
    call SelectHeroSkill( u, 'AOre' )
    set u = BlzCreateUnitWithSkin( p, 'O61P', -5284.1, 1808.2, 212.077, 'O61P' )
    call SetHeroLevel( u, 6, false )
    call SelectHeroSkill( u, 'AOws' )
    call SelectHeroSkill( u, 'AOws' )
    call SelectHeroSkill( u, 'ANsh' )
    call SelectHeroSkill( u, 'ANsh' )
    call SelectHeroSkill( u, 'AOcr' )
    call SelectHeroSkill( u, 'AOre' )
    set u = BlzCreateUnitWithSkin( p, 'o619', -4905.2, 3059.2, 311.342, 'o619' )
    call SetUnitColor( u, ConvertPlayerColor(20) )
    set u = BlzCreateUnitWithSkin( p, 'O60B', -5200.4, 3502.1, 298.912, 'O60B' )
    call SetHeroLevel( u, 6, false )
    call SetUnitColor( u, ConvertPlayerColor(2) )
    call SelectHeroSkill( u, 'A63X' )
    call SelectHeroSkill( u, 'A63X' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A63Y' )
    call IssueImmediateOrder( u, "" )
    set u = BlzCreateUnitWithSkin( p, 'O617', -5510.2, 3783.8, 303.618, 'O617' )
    call SetUnitColor( u, ConvertPlayerColor(20) )
    set u = BlzCreateUnitWithSkin( p, 'O602', -4994.8, 3750.8, 295.824, 'O602' )
    call SetHeroLevel( u, 6, false )
    call SetUnitColor( u, ConvertPlayerColor(0) )
    call SelectHeroSkill( u, 'AHbh' )
    set u = BlzCreateUnitWithSkin( p, 'o605', -5216.9, 3898.7, 314.164, 'o605' )
    call SetUnitColor( u, ConvertPlayerColor(0) )
    set u = BlzCreateUnitWithSkin( p, 'o619', -5511.4, 4112.2, 297.341, 'o619' )
    call SetUnitColor( u, ConvertPlayerColor(20) )
    set u = BlzCreateUnitWithSkin( p, 'o619', -5397.0, 3281.3, 298.601, 'o619' )
    call SetUnitColor( u, ConvertPlayerColor(20) )
    set u = BlzCreateUnitWithSkin( p, 'O602', -4528.4, 2805.5, 284.680, 'O602' )
    call SetHeroLevel( u, 6, false )
    call SetUnitColor( u, ConvertPlayerColor(0) )
    call SelectHeroSkill( u, 'AHbh' )
    set u = BlzCreateUnitWithSkin( p, 'npig', -4464.3, 2652.4, 296.450, 'npig' )
    set u = BlzCreateUnitWithSkin( p, 'O61P', -4988.5, 2143.1, 358.390, 'O61P' )
    call SetHeroLevel( u, 6, false )
    call SelectHeroSkill( u, 'AOws' )
    call SelectHeroSkill( u, 'AOws' )
    call SelectHeroSkill( u, 'ANsh' )
    call SelectHeroSkill( u, 'ANsh' )
    call SelectHeroSkill( u, 'AOcr' )
    call SelectHeroSkill( u, 'AOre' )
    set u = BlzCreateUnitWithSkin( p, 'O60B', -5072.4, 2234.2, 328.924, 'O60B' )
    call SetHeroLevel( u, 6, false )
    call SetUnitColor( u, ConvertPlayerColor(2) )
    call SelectHeroSkill( u, 'A63X' )
    call SelectHeroSkill( u, 'A63X' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A63Y' )
    call IssueImmediateOrder( u, "" )
    set u = BlzCreateUnitWithSkin( p, 'O617', -4802.7, 2763.2, 4.325, 'O617' )
    call SetUnitColor( u, ConvertPlayerColor(20) )
    set u = BlzCreateUnitWithSkin( p, 'O60B', -4719.7, 2496.4, 56.794, 'O60B' )
    call SetHeroLevel( u, 6, false )
    call SetUnitColor( u, ConvertPlayerColor(2) )
    call SelectHeroSkill( u, 'A63X' )
    call SelectHeroSkill( u, 'A63X' )
    call IssueImmediateOrder( u, "" )
    call SelectHeroSkill( u, 'A63Y' )
    call IssueImmediateOrder( u, "" )
    set u = BlzCreateUnitWithSkin( p, 'o60O', -4463.6, 2409.0, 76.548, 'o60O' )
    set u = BlzCreateUnitWithSkin( p, 'o60O', -4299.7, 2370.6, 107.345, 'o60O' )
endfunction

//===========================================================================
function CreateNeutralHostile takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_AGGRESSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'nwld', -9581.6, 3809.1, 36.990, 'nwld' )
    call SetUnitAcquireRange( u, 200.0 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000096_DropItems )
    set u = BlzCreateUnitWithSkin( p, 'nwlg', -9409.6, 3989.2, 236.419, 'nwlg' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nftt', 10392.5, -6440.3, 280.369, 'nftt' )
    set u = BlzCreateUnitWithSkin( p, 'ntrs', -2218.4, -269.0, 353.210, 'ntrs' )
    call SetUnitAcquireRange( u, 200.0 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000353_DropItems )
    set u = BlzCreateUnitWithSkin( p, 'nsbm', -4674.9, -1797.5, 66.460, 'nsbm' )
    call SetUnitAcquireRange( u, 200.0 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000331_DropItems )
    set u = BlzCreateUnitWithSkin( p, 'nsgt', -4439.7, -1809.8, 77.453, 'nsgt' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nssp', -4741.1, -1588.2, 9.235, 'nssp' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nssp', -4503.4, -1597.4, 43.282, 'nssp' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nsgt', -4674.9, -1449.7, 323.729, 'nsgt' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nwlt', -9612.5, 3993.4, 314.833, 'nwlt' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ntrs', 8237.4, -2100.7, 210.190, 'ntrs' )
    call SetUnitAcquireRange( u, 200.0 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000092_DropItems )
    set u = BlzCreateUnitWithSkin( p, 'ntrh', 8010.4, -2276.4, 5.113, 'ntrh' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ntrh', 8398.5, -2288.1, 157.018, 'ntrh' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ntrh', 8266.3, -2459.2, 113.960, 'ntrh' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ntrs', 8092.5, -2442.7, 45.648, 'ntrs' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nowb', 9750.4, 1495.1, 355.363, 'nowb' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nowk', 10088.3, 1659.5, 218.820, 'nowk' )
    call SetUnitAcquireRange( u, 200.0 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000070_DropItems )
    set u = BlzCreateUnitWithSkin( p, 'nowe', 10114.0, 1433.6, 168.974, 'nowe' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nowe', 9843.2, 1619.8, 281.822, 'nowe' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nowb', 9986.4, 1263.7, 97.512, 'nowb' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nwld', 9426.6, -2614.7, 270.794, 'nwld' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nwlg', 9581.8, -2749.5, 254.620, 'nwlg' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ntrs', -1984.8, -8.5, 263.442, 'ntrs' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ntrh', -2046.7, -390.9, 48.986, 'ntrh' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ntrh', -1829.8, -147.6, 157.018, 'ntrh' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ntrh', -2022.3, -191.7, 321.165, 'ntrh' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nwlt', 9246.0, -2754.8, 289.878, 'nwlt' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ngrw', -6598.1, -4899.5, 327.470, 'ngrw' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ngrw', -6771.5, -4691.5, 146.817, 'ngrw' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ngdk', -6895.8, -4922.2, 6.269, 'ngdk' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nwlt', -9376.5, 3731.3, 135.164, 'nwlt' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nmrl', 1354.4, -4396.8, 217.107, 'nmrl' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nmrr', 1142.7, -4490.8, 349.321, 'nmrr' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nmrm', 1341.3, -4577.4, 110.180, 'nmrm' )
    call SetUnitAcquireRange( u, 200.0 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000359_DropItems )
    set u = BlzCreateUnitWithSkin( p, 'nmrl', 119.7, -1313.4, 217.107, 'nmrl' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nmrr', -92.1, -1407.3, 349.321, 'nmrr' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nmrm', 106.5, -1493.9, 110.180, 'nmrm' )
    call SetUnitAcquireRange( u, 200.0 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000362_DropItems )
    set u = BlzCreateUnitWithSkin( p, 'nwld', -450.0, 748.6, 36.992, 'nwld' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nwlg', -277.9, 928.8, 236.419, 'nwlg' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nwlt', -480.8, 932.9, 314.833, 'nwlt' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nowk', -1440.4, 1417.3, 314.290, 'nowk' )
    call SetUnitAcquireRange( u, 200.0 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000065_DropItems )
    set u = BlzCreateUnitWithSkin( p, 'nowe', -1289.5, 1362.4, 168.974, 'nowe' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nowb', -1424.3, 1250.9, 80.756, 'nowb' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nmrl', 4673.9, 1607.2, 23.034, 'nmrl' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nmrr', 4631.3, 1330.6, 41.559, 'nmrr' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nmrm', 4511.0, 1487.4, 26.540, 'nmrm' )
    call SetUnitAcquireRange( u, 200.0 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000085_DropItems )
    set u = BlzCreateUnitWithSkin( p, 'nmrl', 4806.9, 1414.3, 47.033, 'nmrl' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nmrl', 4465.6, 1394.6, 30.798, 'nmrl' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nwlt', -10191.5, 3051.3, 358.845, 'nwlt' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nwlt', -9958.8, 2917.5, 121.476, 'nwlt' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nwlt', -9994.0, 3180.4, 235.428, 'nwlt' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ngz1', 4220.6, 4504.8, 35.789, 'ngz1' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ngz2', 4300.6, 4636.1, 284.130, 'ngz2' )
    call SetUnitAcquireRange( u, 200.0 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000163_DropItems )
    set u = BlzCreateUnitWithSkin( p, 'ngz1', 4460.2, 4508.8, 156.467, 'ngz1' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ngz2', 2504.4, -5881.9, 343.070, 'ngz2' )
    call SetUnitAcquireRange( u, 200.0 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000014_DropItems )
    set u = BlzCreateUnitWithSkin( p, 'ngz1', 2756.2, -5791.1, 355.861, 'ngz1' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ngz1', 2684.2, -6089.1, 0.244, 'ngz1' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ngdk', -5183.9, -4112.6, 305.536, 'ngdk' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ngrw', -5193.1, -4369.2, 239.708, 'ngrw' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ngrw', -5004.9, -4749.0, 77.816, 'ngrw' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ngrw', -4507.3, -4680.9, 146.817, 'ngrw' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ngrw', -4654.0, -4652.1, 84.451, 'ngrw' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ngdk', -4236.8, -6232.5, 305.536, 'ngdk' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ngrw', -4509.2, -6260.9, 239.708, 'ngrw' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ngrd', -4781.3, -4269.1, 268.290, 'ngrd' )
    call SetUnitAcquireRange( u, 200.0 )
    set t = CreateTrigger(  )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_DEATH )
    call TriggerRegisterUnitEvent( t, u, EVENT_UNIT_CHANGE_OWNER )
    call TriggerAddAction( t, function Unit000002_DropItems )
    set u = BlzCreateUnitWithSkin( p, 'ngrw', -4204.5, -6579.6, 146.817, 'ngrw' )
    call SetUnitAcquireRange( u, 200.0 )
endfunction

//===========================================================================
function CreateNeutralPassiveBuildings takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'nmh0', 1568.0, -4256.0, 270.000, 'nmh0' )
    set u = BlzCreateUnitWithSkin( p, 'nmh1', 1184.0, -4832.0, 270.000, 'nmh1' )
    set u = BlzCreateUnitWithSkin( p, 'n60M', 6976.0, -6208.0, 270.000, 'n60M' )
    call SetResourceAmount( u, 99000 )
    set u = BlzCreateUnitWithSkin( p, 'ngol', 10560.0, 4096.0, 270.000, 'ngol' )
    call SetResourceAmount( u, 105000 )
    set u = BlzCreateUnitWithSkin( p, 'nfoh', -2304.0, 0.0, 324.353, 'nfoh' )
    set gg_unit_ngol_0122 = BlzCreateUnitWithSkin( p, 'ngol', -3840.0, 2944.0, 270.000, 'ngol' )
    call SetResourceAmount( gg_unit_ngol_0122, 78000 )
    set u = BlzCreateUnitWithSkin( p, 'ngol', -10624.0, 512.0, 270.000, 'ngol' )
    call SetResourceAmount( u, 98000 )
    set u = BlzCreateUnitWithSkin( p, 'h62A', -6400.0, -64.0, 270.000, 'h62A' )
    set u = BlzCreateUnitWithSkin( p, 'nmh0', 992.0, -4320.0, 270.000, 'nmh0' )
    set u = BlzCreateUnitWithSkin( p, 'n60W', -608.0, -1760.0, 270.000, 'n60W' )
    set gg_unit_ncop_0272 = BlzCreateUnitWithSkin( p, 'ncop', 10048.0, -6016.0, 270.000, 'ncop' )
    set u = BlzCreateUnitWithSkin( p, 'nmh1', 224.0, -1056.0, 270.000, 'nmh1' )
    set u = BlzCreateUnitWithSkin( p, 'o61I', -576.0, -1600.0, 270.000, 'o61I' )
    set u = BlzCreateUnitWithSkin( p, 'nmh0', 4640.0, 1760.0, 270.000, 'nmh0' )
    set u = BlzCreateUnitWithSkin( p, 'nmh0', 5280.0, 1888.0, 270.000, 'nmh0' )
    set u = BlzCreateUnitWithSkin( p, 'nmh0', 5536.0, 1184.0, 270.000, 'nmh0' )
    set gg_unit_ncop_0486 = BlzCreateUnitWithSkin( p, 'ncop', 10560.0, -1792.0, 270.000, 'ncop' )
    set gg_unit_ncop_0487 = BlzCreateUnitWithSkin( p, 'ncop', 3904.0, -640.0, 270.000, 'ncop' )
    set gg_unit_ncop_0488 = BlzCreateUnitWithSkin( p, 'ncop', 2048.0, 2432.0, 270.000, 'ncop' )
    set gg_unit_ncop_0489 = BlzCreateUnitWithSkin( p, 'ncop', -512.0, -6464.0, 270.000, 'ncop' )
endfunction

//===========================================================================
function CreateNeutralPassive takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'n60Y', -2630.4, 455.7, 217.536, 'n60Y' )
    set gg_unit_nspr_0105 = BlzCreateUnitWithSkin( p, 'nspr', -5779.4, -2806.6, 336.785, 'nspr' )
    set u = BlzCreateUnitWithSkin( p, 'nshe', -7306.2, -1055.3, 351.397, 'nshe' )
    set u = BlzCreateUnitWithSkin( p, 'nshe', -7321.0, -1100.2, 68.348, 'nshe' )
    set u = BlzCreateUnitWithSkin( p, 'nshe', -7248.2, -1096.6, 267.525, 'nshe' )
    set u = BlzCreateUnitWithSkin( p, 'nshe', -7305.4, -1131.6, 246.881, 'nshe' )
    set u = BlzCreateUnitWithSkin( p, 'nshe', -7279.8, -1107.5, 42.321, 'nshe' )
    set u = BlzCreateUnitWithSkin( p, 'nshe', -557.2, -1895.8, 234.214, 'nshe' )
    set gg_unit_ngsp_0232 = BlzCreateUnitWithSkin( p, 'ngsp', -5514.1, 5894.3, 29.707, 'ngsp' )
    set gg_unit_ngsp_0234 = BlzCreateUnitWithSkin( p, 'ngsp', -6030.6, 6168.1, 128.983, 'ngsp' )
    set gg_unit_nglm_0242 = BlzCreateUnitWithSkin( p, 'nglm', -5508.4, 5446.7, 52.725, 'nglm' )
    set gg_unit_nglm_0255 = BlzCreateUnitWithSkin( p, 'nglm', -5726.4, 5630.7, 342.377, 'nglm' )
    set gg_unit_nglm_0275 = BlzCreateUnitWithSkin( p, 'nglm', -5593.4, 5765.6, 18.809, 'nglm' )
    set gg_unit_nglm_0276 = BlzCreateUnitWithSkin( p, 'nglm', -5732.7, 5864.7, 46.693, 'nglm' )
    set gg_unit_nglm_0277 = BlzCreateUnitWithSkin( p, 'nglm', -5872.5, 5717.2, 129.346, 'nglm' )
    set gg_unit_nglm_0278 = BlzCreateUnitWithSkin( p, 'nglm', -5760.2, 5448.1, 306.572, 'nglm' )
    set gg_unit_nglm_0279 = BlzCreateUnitWithSkin( p, 'nglm', -5628.5, 5357.9, 67.414, 'nglm' )
    set u = BlzCreateUnitWithSkin( p, 'n009', -1466.5, -757.5, 112.668, 'n009' )
    set gg_unit_nglm_0285 = BlzCreateUnitWithSkin( p, 'nglm', -5515.3, 5255.5, 80.104, 'nglm' )
    set gg_unit_h006_0288 = BlzCreateUnitWithSkin( p, 'h006', -9840.7, 4448.1, 270.000, 'h006' )
    set gg_unit_h006_0289 = BlzCreateUnitWithSkin( p, 'h006', -7523.0, 3903.2, 270.000, 'h006' )
    set gg_unit_h006_0291 = BlzCreateUnitWithSkin( p, 'h006', -2038.9, 4746.9, 270.000, 'h006' )
    set gg_unit_h006_0294 = BlzCreateUnitWithSkin( p, 'h006', 2357.5, 4699.9, 270.000, 'h006' )
    set gg_unit_h006_0297 = BlzCreateUnitWithSkin( p, 'h006', 10132.1, 1762.2, 270.000, 'h006' )
    set gg_unit_h006_0298 = BlzCreateUnitWithSkin( p, 'h006', 7591.1, 535.1, 270.000, 'h006' )
    set gg_unit_h006_0299 = BlzCreateUnitWithSkin( p, 'h006', 10571.9, -3238.1, 270.000, 'h006' )
    set gg_unit_h006_0300 = BlzCreateUnitWithSkin( p, 'h006', 8197.6, -2330.8, 270.000, 'h006' )
    set gg_unit_h006_0302 = BlzCreateUnitWithSkin( p, 'h006', 5282.0, -5154.9, 270.000, 'h006' )
    set gg_unit_h006_0305 = BlzCreateUnitWithSkin( p, 'h006', 3242.0, -6039.7, 270.000, 'h006' )
    set u = BlzCreateUnitWithSkin( p, 'n009', 8438.0, -60.6, 220.920, 'n009' )
    set gg_unit_h006_0313 = BlzCreateUnitWithSkin( p, 'h006', -4983.4, -3043.8, 270.000, 'h006' )
    set gg_unit_h006_0315 = BlzCreateUnitWithSkin( p, 'h006', -1294.6, 1057.5, 270.000, 'h006' )
    set gg_unit_h006_0330 = BlzCreateUnitWithSkin( p, 'h006', -824.8, -1586.1, 270.000, 'h006' )
    set gg_unit_h006_0341 = BlzCreateUnitWithSkin( p, 'h006', -2345.6, 30.0, 270.000, 'h006' )
    set gg_unit_h006_0343 = BlzCreateUnitWithSkin( p, 'h006', -10089.9, -4579.3, 270.000, 'h006' )
    set gg_unit_h006_0344 = BlzCreateUnitWithSkin( p, 'h006', -10032.6, -6493.7, 270.000, 'h006' )
    set gg_unit_h006_0363 = BlzCreateUnitWithSkin( p, 'h006', -9984.7, 24.0, 270.000, 'h006' )
    set gg_unit_h006_0364 = BlzCreateUnitWithSkin( p, 'h006', 2668.5, -2350.9, 270.000, 'h006' )
    set u = BlzCreateUnitWithSkin( p, 'n009', -9950.5, 3412.7, 221.821, 'n009' )
    set u = BlzCreateUnitWithSkin( p, 'n009', -5855.7, -5581.7, 289.433, 'n009' )
endfunction

//===========================================================================
function CreatePlayerBuildings takes nothing returns nothing
    call CreateBuildingsForPlayer0(  )
    call CreateBuildingsForPlayer1(  )
    call CreateBuildingsForPlayer4(  )
    call CreateBuildingsForPlayer9(  )
    call CreateBuildingsForPlayer11(  )
    call CreateBuildingsForPlayer12(  )
    call CreateBuildingsForPlayer14(  )
    call CreateBuildingsForPlayer17(  )
    call CreateBuildingsForPlayer18(  )
    call CreateBuildingsForPlayer19(  )
    call CreateBuildingsForPlayer20(  )
    call CreateBuildingsForPlayer21(  )
    call CreateBuildingsForPlayer22(  )
endfunction

//===========================================================================
function CreatePlayerUnits takes nothing returns nothing
    call CreateUnitsForPlayer0(  )
    call CreateUnitsForPlayer1(  )
    call CreateUnitsForPlayer4(  )
    call CreateUnitsForPlayer9(  )
    call CreateUnitsForPlayer11(  )
    call CreateUnitsForPlayer12(  )
    call CreateUnitsForPlayer14(  )
    call CreateUnitsForPlayer17(  )
    call CreateUnitsForPlayer18(  )
    call CreateUnitsForPlayer19(  )
    call CreateUnitsForPlayer20(  )
    call CreateUnitsForPlayer21(  )
    call CreateUnitsForPlayer22(  )
    call CreateUnitsForPlayer23(  )
endfunction

//===========================================================================
function CreateAllUnits takes nothing returns nothing
    call CreateNeutralPassiveBuildings(  )
    call CreatePlayerBuildings(  )
    call CreateNeutralHostile(  )
    call CreateNeutralPassive(  )
    call CreatePlayerUnits(  )
endfunction

//***************************************************************************
//*
//*  Regions
//*
//***************************************************************************

function CreateRegions takes nothing returns nothing
    local weathereffect we

    set gg_rct_AllianceGuard01 = Rect( -9984.0, -2688.0, -9888.0, -2592.0 )
    set gg_rct_AllianceGuard02 = Rect( -9888.0, -3008.0, -9792.0, -2912.0 )
    set gg_rct_AllianceGuard03 = Rect( -10496.0, -3168.0, -10400.0, -3072.0 )
    set gg_rct_AllianceGuard04 = Rect( -10208.0, -3136.0, -10112.0, -3040.0 )
    set gg_rct_AllianceGuard05 = Rect( -10080.0, -2496.0, -9984.0, -2400.0 )
    set gg_rct_AllianceGuard06 = Rect( -10144.0, -2624.0, -10048.0, -2528.0 )
    set gg_rct_AllianceGuard07 = Rect( -10144.0, -3008.0, -10048.0, -2912.0 )
    set gg_rct_AllianceGuard08 = Rect( -10784.0, -2976.0, -10688.0, -2880.0 )
    set gg_rct_AllianceGuard09 = Rect( -10432.0, -3008.0, -10336.0, -2912.0 )
    set gg_rct_AvalanchFog = Rect( -6400.0, 4480.0, -4864.0, 7232.0 )
    set gg_rct_BasePatrol01 = Rect( -6304.0, 1952.0, -5984.0, 2272.0 )
    set gg_rct_BasePatrol02 = Rect( -4416.0, 576.0, -4096.0, 896.0 )
    set gg_rct_BasePatrol03 = Rect( -2912.0, 2432.0, -2592.0, 2752.0 )
    set gg_rct_BasePatrol04 = Rect( -5344.0, 3040.0, -4960.0, 3424.0 )
    set gg_rct_CampfireControl = Rect( -10880.0, -3072.0, -10752.0, -2944.0 )
    set gg_rct_CutsceneHeroRevive = Rect( -11488.0, 4224.0, -11264.0, 4480.0 )
    set gg_rct_DoomhammersWolf = Rect( -4480.0, 2848.0, -4352.0, 2976.0 )
    set gg_rct_ElfBase = Rect( 5664.0, 3200.0, 11360.0, 7040.0 )
    set gg_rct_ElvenBase = Rect( 9024.0, 4960.0, 9152.0, 5088.0 )
    set gg_rct_Falstaaaad = Rect( -7488.0, -2496.0, -6752.0, -2272.0 )
    set gg_rct_GaronaCage = Rect( -5152.0, 1536.0, -4832.0, 1856.0 )
    set gg_rct_GaronaExit = Rect( -5824.0, 6912.0, -5728.0, 7008.0 )
    set gg_rct_IntroBlockers = Rect( -5984.0, 1696.0, -4512.0, 2464.0 )
    set gg_rct_IntroDH01 = Rect( -5056.0, 3680.0, -4928.0, 3808.0 )
    set gg_rct_IntroDH02 = Rect( -4576.0, 2848.0, -4480.0, 2944.0 )
    set gg_rct_IntroDH02Capture = Rect( -4608.0, 2848.0, -4512.0, 2944.0 )
    set gg_rct_IntroDH03B = Rect( -4864.0, 2080.0, -4768.0, 2176.0 )
    set gg_rct_IntroDR01 = Rect( -5568.0, 3712.0, -5440.0, 3840.0 )
    set gg_rct_IntroDR02 = Rect( -4864.0, 2688.0, -4736.0, 2816.0 )
    set gg_rct_IntroDR03 = Rect( -3776.0, 2368.0, -3680.0, 2464.0 )
    set gg_rct_IntroDRGuardA01 = Rect( -5440.0, 3232.0, -5344.0, 3328.0 )
    set gg_rct_IntroDRGuardA02 = Rect( -5152.0, 2656.0, -5056.0, 2752.0 )
    set gg_rct_IntroDRGuardA03 = Rect( -3712.0, 2656.0, -3616.0, 2752.0 )
    set gg_rct_IntroDRGuardB01 = Rect( -5568.0, 4064.0, -5472.0, 4160.0 )
    set gg_rct_IntroDRGuardB02 = Rect( -4960.0, 3008.0, -4864.0, 3104.0 )
    set gg_rct_IntroDRGuardB03 = Rect( -3968.0, 3104.0, -3872.0, 3200.0 )
    set gg_rct_IntroEitrigg01 = Rect( -6112.0, 2144.0, -5984.0, 2272.0 )
    set gg_rct_IntroEitrigg02 = Rect( -5024.0, 2080.0, -4928.0, 2208.0 )
    set gg_rct_IntroEitrigg02Catch = Rect( -5056.0, 2080.0, -4928.0, 2208.0 )
    set gg_rct_IntroEitrigg03 = Rect( -5344.0, 1760.0, -5248.0, 1856.0 )
    set gg_rct_IntroEitriggCamera = Rect( -5248.0, 1952.0, -5152.0, 2368.0 )
    set gg_rct_IntroPeon01 = Rect( -4320.0, 2592.0, -4224.0, 2720.0 )
    set gg_rct_IntroPeon02 = Rect( -4384.0, 2432.0, -4288.0, 2528.0 )
    set gg_rct_IntroPig01 = Rect( -4512.0, 2592.0, -4416.0, 2688.0 )
    set gg_rct_IntroPig02 = Rect( -5856.0, 3328.0, -5760.0, 3424.0 )
    set gg_rct_IntroTharbek00 = Rect( -6080.0, 1920.0, -5984.0, 2016.0 )
    set gg_rct_IntroTharbek01 = Rect( -4544.0, 2560.0, -4448.0, 2656.0 )
    set gg_rct_IntroTharbek02 = Rect( -4320.0, 2656.0, -4192.0, 2784.0 )
    set gg_rct_IntroTharbek03 = Rect( -4736.0, 2240.0, -4640.0, 2336.0 )
    set gg_rct_IntroTharTurn = Rect( -4736.0, 2816.0, -4480.0, 3072.0 )
    set gg_rct_IntroTrollA00 = Rect( -4544.0, 2144.0, -4448.0, 2240.0 )
    set gg_rct_IntroTrollA01 = Rect( -4512.0, 2368.0, -4416.0, 2464.0 )
    set gg_rct_IntroTrollA02 = Rect( -3616.0, 2688.0, -3520.0, 2784.0 )
    set gg_rct_IntroTrollB00 = Rect( -4320.0, 2112.0, -4224.0, 2208.0 )
    set gg_rct_IntroTrollB01 = Rect( -4352.0, 2336.0, -4256.0, 2432.0 )
    set gg_rct_IntroTrollB02 = Rect( -3520.0, 2624.0, -3424.0, 2720.0 )
    set gg_rct_IntroUnits = Rect( -3104.0, 1632.0, -2656.0, 2080.0 )
    set gg_rct_IntroUtok01 = Rect( -5248.0, 3840.0, -5152.0, 3936.0 )
    set gg_rct_IntroUtok02 = Rect( -4352.0, 2880.0, -4256.0, 2976.0 )
    set gg_rct_IntroUtok03 = Rect( -3584.0, 2432.0, -3488.0, 2528.0 )
    set gg_rct_IntroZuljin01 = Rect( -5248.0, 3456.0, -5152.0, 3552.0 )
    set gg_rct_IntroZuljin02 = Rect( -4736.0, 2432.0, -4640.0, 2528.0 )
    set gg_rct_IntroZuljin03 = Rect( -6144.0, 2368.0, -6048.0, 2464.0 )
    set gg_rct_IntroZuljin04 = Rect( -5120.0, 2176.0, -5024.0, 2272.0 )
    set gg_rct_KurdranMidOut = Rect( -8928.0, -2848.0, -8832.0, -2752.0 )
    set gg_rct_MidAlliance = Rect( -11488.0, -3424.0, -9568.0, -1856.0 )
    set gg_rct_MidAllianceSpawn00 = Rect( -11456.0, -2304.0, -11328.0, -2176.0 )
    set gg_rct_MidAllianceSpawn01 = Rect( -11456.0, -2464.0, -11328.0, -2336.0 )
    set gg_rct_MidAllianceSpawn02 = Rect( -4160.0, -3456.0, -4032.0, -3328.0 )
    set gg_rct_MidAllianceSpawn03 = Rect( -2592.0, -3936.0, -2464.0, -3808.0 )
    set gg_rct_MidAllianceSpawn04 = Rect( -416.0, 3232.0, -288.0, 3360.0 )
    set gg_rct_MidAllianceSpawn05 = Rect( -736.0, 4416.0, -608.0, 4544.0 )
    set gg_rct_MidAllianceSpawnGuard = Rect( -11456.0, -2368.0, -11328.0, -2272.0 )
    set gg_rct_MidAnduin01 = Rect( -10624.0, -3360.0, -10496.0, -3264.0 )
    set gg_rct_MidAnduin02 = Rect( -9696.0, -2848.0, -9600.0, -2752.0 )
    set gg_rct_MidAnduin03 = Rect( -9472.0, -2848.0, -9376.0, -2752.0 )
    set gg_rct_MidAnduin04 = Rect( -8640.0, -2752.0, -8544.0, -2656.0 )
    set gg_rct_MidAnduin05 = Rect( -8160.0, -576.0, -8064.0, -480.0 )
    set gg_rct_MidAnduin06 = Rect( -9152.0, 2176.0, -9056.0, 2272.0 )
    set gg_rct_MidAnduin07 = Rect( -10336.0, -2976.0, -10240.0, -2880.0 )
    set gg_rct_MidAnduinGuard01 = Rect( -9440.0, -3040.0, -9344.0, -2944.0 )
    set gg_rct_MidAnduinGuard02 = Rect( -9440.0, -2656.0, -9344.0, -2560.0 )
    set gg_rct_MidAnduinGuard03 = Rect( -8512.0, -2880.0, -8416.0, -2784.0 )
    set gg_rct_MidAnduinGuard04 = Rect( -8352.0, -2784.0, -8256.0, -2688.0 )
    set gg_rct_MidAnims01 = Rect( -7968.0, -3232.0, -7744.0, -2848.0 )
    set gg_rct_MidCombat01 = Rect( -8544.0, -768.0, -7872.0, -96.0 )
    set gg_rct_MidCombat02 = Rect( -9568.0, 2208.0, -8896.0, 2880.0 )
    set gg_rct_MidDH01 = Rect( -8320.0, -3008.0, -8224.0, -2912.0 )
    set gg_rct_MidDH02 = Rect( -8672.0, -3008.0, -8576.0, -2912.0 )
    set gg_rct_MidDH03 = Rect( -8640.0, -2624.0, -8544.0, -2528.0 )
    set gg_rct_MidDH04 = Rect( -8160.0, -448.0, -8064.0, -352.0 )
    set gg_rct_MidDH05 = Rect( -9184.0, 2304.0, -9088.0, 2400.0 )
    set gg_rct_MidDH06 = Rect( -4960.0, 2048.0, -4864.0, 2144.0 )
    set gg_rct_MidDH07 = Rect( -5760.0, 7040.0, -5664.0, 7136.0 )
    set gg_rct_MidDHFinalLines = Rect( -5376.0, 1792.0, -4704.0, 2528.0 )
    set gg_rct_MidDHGuard01 = Rect( -8512.0, -2624.0, -8416.0, -2528.0 )
    set gg_rct_MidHeroExitFade = Rect( -6368.0, 5696.0, -5216.0, 5952.0 )
    set gg_rct_MidKurdran01 = Rect( -10432.0, -3392.0, -10272.0, -3232.0 )
    set gg_rct_MidKurdran04 = Rect( -8320.0, -672.0, -8224.0, -576.0 )
    set gg_rct_MidKurdran05 = Rect( -9536.0, 2432.0, -9440.0, 2528.0 )
    set gg_rct_MidKurdran06 = Rect( -10688.0, -3008.0, -10592.0, -2912.0 )
    set gg_rct_MidPlayerClear = Rect( -11648.0, -3488.0, -7616.0, -1696.0 )
    set gg_rct_MidWave01 = Rect( -9440.0, 2336.0, -9024.0, 2752.0 )
    set gg_rct_MidWave01Check = Rect( -9504.0, 2272.0, -8960.0, 2816.0 )
    set gg_rct_MidWave02 = Rect( -3296.0, -1760.0, -2880.0, -1344.0 )
    set gg_rct_MidWave02Check = Rect( -3360.0, -1824.0, -2816.0, -1280.0 )
    set gg_rct_MidWave03 = Rect( -1696.0, 4224.0, -1280.0, 4640.0 )
    set gg_rct_MidWave03Check = Rect( -1760.0, 4160.0, -1216.0, 4704.0 )
    set gg_rct_MidZuljin01 = Rect( -8032.0, -2848.0, -7936.0, -2752.0 )
    set gg_rct_MidZuljin02 = Rect( -8416.0, -2784.0, -8320.0, -2688.0 )
    set gg_rct_MidZuljin03 = Rect( -8832.0, -2368.0, -8736.0, -2272.0 )
    set gg_rct_MidZuljin04 = Rect( -8384.0, -288.0, -8256.0, -160.0 )
    set gg_rct_MidZuljin05 = Rect( -9280.0, 2624.0, -9152.0, 2752.0 )
    set gg_rct_MidZuljin06 = Rect( -5056.0, 2368.0, -4928.0, 2496.0 )
    set gg_rct_MidZuljin07 = Rect( -5888.0, 7040.0, -5792.0, 7136.0 )
    set gg_rct_OutroAnduin01 = Rect( -5408.0, 4640.0, -5280.0, 4736.0 )
    set gg_rct_OutroAnduin02 = Rect( -5184.0, 4096.0, -5088.0, 4192.0 )
    set gg_rct_OutroEitrigg01 = Rect( -5920.0, 6720.0, -5792.0, 6848.0 )
    set gg_rct_OutroEitrigg02 = Rect( 11104.0, -4768.0, 11232.0, -4640.0 )
    set gg_rct_OutroEitrigg03 = Rect( -6048.0, 5984.0, -5888.0, 6112.0 )
    set gg_rct_OutroGarona01 = Rect( -5856.0, 6048.0, -5728.0, 6176.0 )
    set gg_rct_OutroKurdran01 = Rect( -5184.0, 4672.0, -5056.0, 4800.0 )
    set gg_rct_OutroKurdran02 = Rect( -4992.0, 4128.0, -4896.0, 4224.0 )
    set gg_rct_OutroPlayerClear = Rect( -6176.0, 3136.0, -4480.0, 7296.0 )
    set gg_rct_OutroRocksHidden = Rect( -6560.0, 4512.0, -4416.0, 6816.0 )
    set gg_rct_OutroRocksMountain = Rect( -6944.0, 4960.0, -3008.0, 7328.0 )
    set gg_rct_OutroSappers01 = Rect( -6112.0, 6112.0, -5984.0, 6240.0 )
    set gg_rct_OutroSappers02 = Rect( -5568.0, 5824.0, -5440.0, 5952.0 )
    set gg_rct_OutroTarget = Rect( -5856.0, 6816.0, -5760.0, 6912.0 )
    set gg_rct_OutroVFX01 = Rect( -4736.0, 6144.0, -4640.0, 6240.0 )
    set gg_rct_OutroVFX02 = Rect( -4768.0, 5856.0, -4672.0, 5952.0 )
    set gg_rct_OutroVFX03 = Rect( -4256.0, 5728.0, -4160.0, 5824.0 )
    set gg_rct_OutroVFX04 = Rect( -5216.0, 6368.0, -5120.0, 6464.0 )
    set gg_rct_OutroVFX05 = Rect( -6336.0, 5792.0, -6240.0, 5888.0 )
    set gg_rct_OutroVFX06 = Rect( -6240.0, 6528.0, -6144.0, 6624.0 )
    set gg_rct_PlayerBase = Rect( -6272.0, 480.0, -2816.0, 4000.0 )
    set gg_rct_PlayerRelocate = Rect( -5600.0, 1344.0, -3840.0, 3296.0 )
    set gg_rct_PlayerRelocateNoA = Rect( -10912.0, -1760.0, -8800.0, 1184.0 )
    set gg_rct_PlayerRelocateNoB = Rect( 4448.0, -6944.0, 8096.0, -4256.0 )
    set gg_rct_RedShirtGuyHiden = Rect( -6144.0, -1152.0, -6048.0, -1056.0 )
    set gg_rct_SnowedTrees01 = Rect( -8416.0, -7776.0, -5760.0, -3360.0 )
    set gg_rct_SnowedTrees02 = Rect( -8576.0, -3392.0, -4352.0, 2048.0 )
    set gg_rct_SnowedTrees03 = Rect( -11840.0, 2016.0, -2592.0, 7232.0 )
    set gg_rct_SnowedTrees04 = Rect( -2624.0, 3904.0, 4320.0, 7584.0 )
    set gg_rct_SnowedTrees05 = Rect( -3648.0, 384.0, -1664.0, 2912.0 )
    set gg_rct_SnowedTrees06 = Rect( 896.0, 2176.0, 5568.0, 3936.0 )
    set gg_rct_SnowedTrees07 = Rect( -11648.0, -7776.0, -8384.0, -3360.0 )
    set gg_rct_SnowedTrees08 = Rect( -11648.0, -3392.0, -8544.0, 2048.0 )
    set gg_rct_SurviveMarker = Rect( -5216.0, 3872.0, -5120.0, 3968.0 )
    set gg_rct_TrollBase01 = Rect( 1984.0, 2368.0, 2112.0, 2496.0 )
    set gg_rct_TrollBase01VO = Rect( 1920.0, 2304.0, 2176.0, 2560.0 )
    set gg_rct_TrollBase02 = Rect( 3840.0, -704.0, 3968.0, -576.0 )
    set gg_rct_TrollBase02VO = Rect( 3776.0, -768.0, 4032.0, -512.0 )
    set gg_rct_TrollBase03 = Rect( 10496.0, -1856.0, 10624.0, -1728.0 )
    set gg_rct_TrollBase03Open = Rect( 9120.0, -2720.0, 10048.0, -2144.0 )
    set gg_rct_TrollBase03VO = Rect( 10432.0, -1920.0, 10688.0, -1664.0 )
    set gg_rct_TrollBase04 = Rect( 9984.0, -6080.0, 10112.0, -5952.0 )
    set gg_rct_TrollBase04VO = Rect( 9920.0, -6144.0, 10176.0, -5888.0 )
    set gg_rct_TrollBase05 = Rect( -576.0, -6528.0, -448.0, -6400.0 )
    set gg_rct_TrollBase05VO = Rect( -640.0, -6592.0, -384.0, -6336.0 )
    set gg_rct_TrollFade01 = Rect( -6368.0, 5792.0, -5216.0, 5888.0 )
    set gg_rct_TrollFade02 = Rect( -6368.0, 5888.0, -5216.0, 5984.0 )
    set gg_rct_TrollFade03 = Rect( -6368.0, 5984.0, -5216.0, 6080.0 )
    set gg_rct_TrollFade04 = Rect( -6368.0, 6080.0, -5216.0, 6176.0 )
    set gg_rct_TrollFade05 = Rect( -6368.0, 6176.0, -5216.0, 6272.0 )
    set gg_rct_TrollFade06 = Rect( -6368.0, 6272.0, -5216.0, 6368.0 )
    set gg_rct_TrollFade07 = Rect( -6368.0, 6368.0, -5216.0, 6464.0 )
    set gg_rct_TrollFade08 = Rect( -6368.0, 6464.0, -5216.0, 6560.0 )
    set gg_rct_TrollFade09 = Rect( -6368.0, 6560.0, -5216.0, 6656.0 )
    set gg_rct_TrollFade10 = Rect( -6368.0, 6656.0, -5216.0, 6752.0 )
    set gg_rct_TrollsExit = Rect( -5824.0, 6976.0, -5728.0, 7072.0 )
    set gg_rct_WildhammerBase01Blue = Rect( -9760.0, -896.0, -9664.0, -800.0 )
    set gg_rct_WildhammerBase02Yellow = Rect( 6304.0, -5440.0, 6400.0, -5344.0 )
    set gg_rct_WildhammerBase03Red = Rect( -9984.0, -5376.0, -9888.0, -5280.0 )
    set gg_rct_WildhammerBase04Green = Rect( -6688.0, -1280.0, -6592.0, -1184.0 )
    set gg_rct_WildhammerBase04GreenOpen = Rect( -7584.0, -2944.0, -6720.0, -2368.0 )
    set gg_rct_WildhammerBaseDruids = Rect( -8320.0, -6048.0, -7680.0, -5376.0 )
    set gg_rct_MidKurdran02 = Rect( -9440.0, -3392.0, -9216.0, -3232.0 )
    set gg_rct_MidPlatforms = Rect( -9696.0, -3616.0, -9056.0, -3104.0 )
    set gg_rct_FailureAnduin = Rect( -5952.0, 5888.0, -5856.0, 5984.0 )
    set gg_rct_FailureArmyCreate = Rect( -5760.0, 5248.0, -5632.0, 5376.0 )
    set gg_rct_FailureArmyTarget = Rect( -5792.0, 7936.0, -5664.0, 8064.0 )
    set gg_rct_PeonBuildingCage = Rect( -4800.0, 1632.0, -4704.0, 1728.0 )
    set gg_rct_LoadDoomhammer = Rect( -3072.0, 1664.0, -2944.0, 1792.0 )
    set gg_rct_LoadZuljin = Rect( -2944.0, 1664.0, -2816.0, 1792.0 )
    set gg_rct_WaterSounds01 = Rect( -2560.0, -3008.0, 768.0, 192.0 )
    call SetSoundPosition( gg_snd_WaterLakeLoop1, -896.0, -1408.0, 647.0 )
    call RegisterStackedSound( gg_snd_WaterLakeLoop1, true, 3328.0, 3200.0 )
    set gg_rct_WaterfallSounds01 = Rect( -3040.0, -384.0, -1824.0, 960.0 )
    call SetSoundPosition( gg_snd_WaterWaterFallLoop1, -2432.0, 288.0, 186.4 )
    call RegisterStackedSound( gg_snd_WaterWaterFallLoop1, true, 1216.0, 1344.0 )
    set gg_rct_WaterfallSounds02 = Rect( 1376.0, -3360.0, 3104.0, -1920.0 )
    call SetSoundPosition( gg_snd_WaterWaterFallLoop1, 2240.0, -2640.0, 124.2 )
    call RegisterStackedSound( gg_snd_WaterWaterFallLoop1, true, 1728.0, 1440.0 )
    set gg_rct_Watersounds02 = Rect( 352.0, -7840.0, 2112.0, -3456.0 )
    call SetSoundPosition( gg_snd_WaterLakeLoop1, 1232.0, -5648.0, 286.2 )
    call RegisterStackedSound( gg_snd_WaterLakeLoop1, true, 1760.0, 4384.0 )
    set gg_rct_Watersounds03 = Rect( 5952.0, -2880.0, 9152.0, -1280.0 )
    set gg_rct_WaterfallSounds03 = Rect( 6528.0, -1696.0, 7136.0, -256.0 )
    call SetSoundPosition( gg_snd_WaterWaterFallLoop1, 6832.0, -976.0, 197.5 )
    call RegisterStackedSound( gg_snd_WaterWaterFallLoop1, true, 608.0, 1440.0 )
    set gg_rct_WaterfallSounds04 = Rect( 8032.0, -2656.0, 8960.0, -1344.0 )
    call SetSoundPosition( gg_snd_WaterWaterFallLoop1, 8496.0, -2000.0, 197.4 )
    call RegisterStackedSound( gg_snd_WaterWaterFallLoop1, true, 928.0, 1312.0 )
    set gg_rct_WaterfallSounds05 = Rect( 5696.0, -2752.0, 6784.0, -1696.0 )
    call SetSoundPosition( gg_snd_WaterWaterFallLoop1, 6240.0, -2224.0, 173.5 )
    call RegisterStackedSound( gg_snd_WaterWaterFallLoop1, true, 1088.0, 1056.0 )
    set gg_rct_WaterfallSounds06 = Rect( 3744.0, 1056.0, 4672.0, 2112.0 )
    call SetSoundPosition( gg_snd_WaterWaterFallLoop1, 4208.0, 1584.0, 45.5 )
    call RegisterStackedSound( gg_snd_WaterWaterFallLoop1, true, 928.0, 1056.0 )
    set gg_rct_WaterfallSounds07 = Rect( 5568.0, 2336.0, 6432.0, 3680.0 )
    call SetSoundPosition( gg_snd_WaterWaterFallLoop1, 6000.0, 3008.0, 45.5 )
    call RegisterStackedSound( gg_snd_WaterWaterFallLoop1, true, 864.0, 1344.0 )
    set gg_rct_WaterfallSounds08 = Rect( -5344.0, -5952.0, -4544.0, -5088.0 )
    call SetSoundPosition( gg_snd_WaterWaterFallLoop1, -4944.0, -5520.0, 426.0 )
    call RegisterStackedSound( gg_snd_WaterWaterFallLoop1, true, 800.0, 864.0 )
    set gg_rct_WaterfallSounds09 = Rect( 1888.0, 4448.0, 2816.0, 5504.0 )
    set we = AddWeatherEffect( gg_rct_WaterfallSounds09, 'FDwh' )
    call EnableWeatherEffect( we, true )
    call SetSoundPosition( gg_snd_WaterWaterFallLoop1, 2352.0, 4976.0, 284.2 )
    call RegisterStackedSound( gg_snd_WaterWaterFallLoop1, true, 928.0, 1056.0 )
    set gg_rct_WaterfallSounds10 = Rect( 4480.0, 6208.0, 5408.0, 7264.0 )
    call SetSoundPosition( gg_snd_WaterWaterFallLoop1, 4944.0, 6736.0, 271.5 )
    call RegisterStackedSound( gg_snd_WaterWaterFallLoop1, true, 928.0, 1056.0 )
    set gg_rct_Watersounds04 = Rect( 4864.0, 5344.0, 8096.0, 7296.0 )
    call SetSoundPosition( gg_snd_WaterLakeLoop1, 6480.0, 6320.0, 271.5 )
    call RegisterStackedSound( gg_snd_WaterLakeLoop1, true, 3232.0, 1952.0 )
    set gg_rct_Watersounds05 = Rect( 8800.0, -1888.0, 10656.0, -608.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 9728.0, -1248.0, 195.0 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 1856.0, 1280.0 )
    set gg_rct_Watersounds06 = Rect( 4416.0, 928.0, 6272.0, 2208.0 )
    call SetSoundPosition( gg_snd_WaterStreamLoop1, 5344.0, 1568.0, 45.5 )
    call RegisterStackedSound( gg_snd_WaterStreamLoop1, true, 1856.0, 1280.0 )
    set gg_rct_BarrelsWIthExposives = Rect( -6496.0, 5088.0, -5024.0, 6720.0 )
    set gg_rct_OrcsLeaving = Rect( -4160.0, 2432.0, -4064.0, 2528.0 )
    set gg_rct_FinalStandGrunt01 = Rect( -6016.0, 6592.0, -5920.0, 6688.0 )
    set gg_rct_FinalStandGrunt02 = Rect( -5920.0, 6560.0, -5824.0, 6656.0 )
    set gg_rct_FinalStandGrunt03 = Rect( -5824.0, 6528.0, -5728.0, 6624.0 )
    set gg_rct_FinalStandGrunt04 = Rect( -5728.0, 6560.0, -5632.0, 6656.0 )
    set gg_rct_FinalStandGrunt05 = Rect( -5664.0, 6656.0, -5568.0, 6752.0 )
    set gg_rct_WaterfallFog01 = Rect( 8512.0, -2304.0, 8672.0, -1888.0 )
    set we = AddWeatherEffect( gg_rct_WaterfallFog01, 'FDwh' )
    call EnableWeatherEffect( we, true )
    set gg_rct_OutroGarona00 = Rect( -5664.0, 6208.0, -5568.0, 6336.0 )
    set gg_rct_VisibilityMod01 = Rect( -11392.0, 3424.0, -8480.0, 5440.0 )
    set gg_rct_VisibilityMod02 = Rect( -8512.0, 3072.0, -6688.0, 4832.0 )
    set gg_rct_VisibilityMod03 = Rect( -3296.0, 3904.0, -736.0, 5568.0 )
    set gg_rct_VisibilityMod04 = Rect( 960.0, 3616.0, 3456.0, 5568.0 )
    set gg_rct_VisibilityMod05 = Rect( 9248.0, 960.0, 10816.0, 2624.0 )
    set gg_rct_VisibilityMod06 = Rect( 6080.0, -1312.0, 9088.0, 2240.0 )
    set gg_rct_VisibilityMod07 = Rect( 9568.0, -3968.0, 11648.0, -2336.0 )
    set gg_rct_VisibilityMod08 = Rect( 7136.0, -2816.0, 8800.0, -1632.0 )
    set gg_rct_VisibilityMod09 = Rect( 4352.0, -6368.0, 6208.0, -4256.0 )
    set gg_rct_VisibilityMod10 = Rect( 2048.0, -6880.0, 4384.0, -5216.0 )
    set gg_rct_VisibilityMod11 = Rect( -6752.0, -3584.0, -4256.0, -2080.0 )
    set gg_rct_VisibilityMod12 = Rect( 2624.0, -1536.0, 5280.0, 160.0 )
    set gg_rct_VisibilityMod13 = Rect( -1888.0, 160.0, -128.0, 1824.0 )
    set gg_rct_VisibilityMod14 = Rect( 864.0, -3936.0, 4608.0, -1984.0 )
endfunction

//***************************************************************************
//*
//*  Cameras
//*
//***************************************************************************

function CreateCameras takes nothing returns nothing

    set gg_cam_EitrigWounded02 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_EitrigWounded02, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded02, CAMERA_FIELD_ROTATION, 117.5, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded02, CAMERA_FIELD_ANGLE_OF_ATTACK, 333.2, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded02, CAMERA_FIELD_TARGET_DISTANCE, 434.5, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded02, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded02, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded02, CAMERA_FIELD_FARZ, 4000.0, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded02, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded02, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded02, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded02, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_EitrigWounded02, -5866.8, 6184.2, 0.0 )

    set gg_cam_Camera_029 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_029, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_029, CAMERA_FIELD_ROTATION, 30.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_029, CAMERA_FIELD_ANGLE_OF_ATTACK, 294.2, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_029, CAMERA_FIELD_TARGET_DISTANCE, 1500.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_029, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_029, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_029, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_029, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_029, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_029, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_029, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_029, 10987.5, -4700.4, 0.0 )

    set gg_cam_elven_city_01 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_elven_city_01, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_01, CAMERA_FIELD_ROTATION, 327.6, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_01, CAMERA_FIELD_ANGLE_OF_ATTACK, 0.2, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_01, CAMERA_FIELD_TARGET_DISTANCE, 3536.9, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_01, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_01, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_01, CAMERA_FIELD_FARZ, 8052.5, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_01, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_01, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_01, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_01, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_elven_city_01, 7798.2, 5528.4, 0.0 )

    set gg_cam_elven_city_02 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_elven_city_02, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_02, CAMERA_FIELD_ROTATION, 87.6, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_02, CAMERA_FIELD_ANGLE_OF_ATTACK, 332.9, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_02, CAMERA_FIELD_TARGET_DISTANCE, 3215.4, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_02, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_02, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_02, CAMERA_FIELD_FARZ, 8052.5, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_02, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_02, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_02, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_elven_city_02, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_elven_city_02, 9381.7, 4911.1, 0.0 )

    set gg_cam_GaronaCam = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_GaronaCam, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_GaronaCam, CAMERA_FIELD_ROTATION, 90.0, 0.0 )
    call CameraSetupSetField( gg_cam_GaronaCam, CAMERA_FIELD_ANGLE_OF_ATTACK, 304.0, 0.0 )
    call CameraSetupSetField( gg_cam_GaronaCam, CAMERA_FIELD_TARGET_DISTANCE, 1650.0, 0.0 )
    call CameraSetupSetField( gg_cam_GaronaCam, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_GaronaCam, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_GaronaCam, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetField( gg_cam_GaronaCam, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_GaronaCam, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_GaronaCam, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_GaronaCam, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_GaronaCam, -5100.5, 1798.9, 0.0 )

    set gg_cam_Hinterlands_overview = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Hinterlands_overview, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Hinterlands_overview, CAMERA_FIELD_ROTATION, 327.6, 0.0 )
    call CameraSetupSetField( gg_cam_Hinterlands_overview, CAMERA_FIELD_ANGLE_OF_ATTACK, 332.6, 0.0 )
    call CameraSetupSetField( gg_cam_Hinterlands_overview, CAMERA_FIELD_TARGET_DISTANCE, 4707.6, 0.0 )
    call CameraSetupSetField( gg_cam_Hinterlands_overview, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Hinterlands_overview, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Hinterlands_overview, CAMERA_FIELD_FARZ, 10000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Hinterlands_overview, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Hinterlands_overview, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Hinterlands_overview, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Hinterlands_overview, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Hinterlands_overview, -679.9, -1990.4, 0.0 )

    set gg_cam_Intro01Pan01 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro01Pan01, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro01Pan01, CAMERA_FIELD_ROTATION, 146.2, 0.0 )
    call CameraSetupSetField( gg_cam_Intro01Pan01, CAMERA_FIELD_ANGLE_OF_ATTACK, 333.1, 0.0 )
    call CameraSetupSetField( gg_cam_Intro01Pan01, CAMERA_FIELD_TARGET_DISTANCE, 1900.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro01Pan01, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro01Pan01, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro01Pan01, CAMERA_FIELD_FARZ, 6000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro01Pan01, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro01Pan01, CAMERA_FIELD_LOCAL_PITCH, 340.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro01Pan01, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro01Pan01, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro01Pan01, -3171.4, 932.2, 0.0 )

    set gg_cam_Intro02Pan02 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro02Pan02, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro02Pan02, CAMERA_FIELD_ROTATION, 104.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro02Pan02, CAMERA_FIELD_ANGLE_OF_ATTACK, 325.4, 0.0 )
    call CameraSetupSetField( gg_cam_Intro02Pan02, CAMERA_FIELD_TARGET_DISTANCE, 2500.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro02Pan02, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro02Pan02, CAMERA_FIELD_FIELD_OF_VIEW, 60.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro02Pan02, CAMERA_FIELD_FARZ, 6000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro02Pan02, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro02Pan02, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro02Pan02, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro02Pan02, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro02Pan02, -4999.0, 3168.4, 0.0 )

    set gg_cam_Intro03TaskMaster = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro03TaskMaster, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro03TaskMaster, CAMERA_FIELD_ROTATION, 83.7, 0.0 )
    call CameraSetupSetField( gg_cam_Intro03TaskMaster, CAMERA_FIELD_ANGLE_OF_ATTACK, 328.5, 0.0 )
    call CameraSetupSetField( gg_cam_Intro03TaskMaster, CAMERA_FIELD_TARGET_DISTANCE, 475.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro03TaskMaster, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro03TaskMaster, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro03TaskMaster, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro03TaskMaster, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro03TaskMaster, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro03TaskMaster, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro03TaskMaster, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro03TaskMaster, -4389.3, 2698.9, 0.0 )

    set gg_cam_Intro04ArrivalExit = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro04ArrivalExit, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro04ArrivalExit, CAMERA_FIELD_ROTATION, 103.3, 0.0 )
    call CameraSetupSetField( gg_cam_Intro04ArrivalExit, CAMERA_FIELD_ANGLE_OF_ATTACK, 338.9, 0.0 )
    call CameraSetupSetField( gg_cam_Intro04ArrivalExit, CAMERA_FIELD_TARGET_DISTANCE, 909.1, 0.0 )
    call CameraSetupSetField( gg_cam_Intro04ArrivalExit, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro04ArrivalExit, CAMERA_FIELD_FIELD_OF_VIEW, 60.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro04ArrivalExit, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro04ArrivalExit, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro04ArrivalExit, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro04ArrivalExit, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro04ArrivalExit, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro04ArrivalExit, -4559.9, 2923.8, 0.0 )

    set gg_cam_Intro05Doomhammer = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro05Doomhammer, CAMERA_FIELD_ZOFFSET, 57.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro05Doomhammer, CAMERA_FIELD_ROTATION, 101.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro05Doomhammer, CAMERA_FIELD_ANGLE_OF_ATTACK, 345.9, 0.0 )
    call CameraSetupSetField( gg_cam_Intro05Doomhammer, CAMERA_FIELD_TARGET_DISTANCE, 726.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro05Doomhammer, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro05Doomhammer, CAMERA_FIELD_FIELD_OF_VIEW, 50.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro05Doomhammer, CAMERA_FIELD_FARZ, 3000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro05Doomhammer, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro05Doomhammer, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro05Doomhammer, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro05Doomhammer, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro05Doomhammer, -4672.2, 3179.0, 0.0 )

    set gg_cam_Intro06Rend = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro06Rend, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro06Rend, CAMERA_FIELD_ROTATION, 142.8, 0.0 )
    call CameraSetupSetField( gg_cam_Intro06Rend, CAMERA_FIELD_ANGLE_OF_ATTACK, 337.6, 0.0 )
    call CameraSetupSetField( gg_cam_Intro06Rend, CAMERA_FIELD_TARGET_DISTANCE, 636.2, 0.0 )
    call CameraSetupSetField( gg_cam_Intro06Rend, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro06Rend, CAMERA_FIELD_FIELD_OF_VIEW, 60.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro06Rend, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro06Rend, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro06Rend, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro06Rend, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro06Rend, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro06Rend, -5100.1, 3022.3, 0.0 )

    set gg_cam_Intro07Group = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro07Group, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07Group, CAMERA_FIELD_ROTATION, 145.1, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07Group, CAMERA_FIELD_ANGLE_OF_ATTACK, 336.8, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07Group, CAMERA_FIELD_TARGET_DISTANCE, 846.7, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07Group, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07Group, CAMERA_FIELD_FIELD_OF_VIEW, 60.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07Group, CAMERA_FIELD_FARZ, 6700.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07Group, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07Group, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07Group, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07Group, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro07Group, -4843.4, 2844.1, 0.0 )

    set gg_cam_Intro07ZJ = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro07ZJ, CAMERA_FIELD_ZOFFSET, 10.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07ZJ, CAMERA_FIELD_ROTATION, 160.2, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07ZJ, CAMERA_FIELD_ANGLE_OF_ATTACK, 338.6, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07ZJ, CAMERA_FIELD_TARGET_DISTANCE, 700.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07ZJ, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07ZJ, CAMERA_FIELD_FIELD_OF_VIEW, 60.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07ZJ, CAMERA_FIELD_FARZ, 6700.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07ZJ, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07ZJ, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07ZJ, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro07ZJ, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro07ZJ, -5113.6, 2742.6, 0.0 )

    set gg_cam_Intro09CageApproach = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro09CageApproach, CAMERA_FIELD_ZOFFSET, 45.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro09CageApproach, CAMERA_FIELD_ROTATION, 102.8, 0.0 )
    call CameraSetupSetField( gg_cam_Intro09CageApproach, CAMERA_FIELD_ANGLE_OF_ATTACK, 359.5, 0.0 )
    call CameraSetupSetField( gg_cam_Intro09CageApproach, CAMERA_FIELD_TARGET_DISTANCE, 1639.8, 0.0 )
    call CameraSetupSetField( gg_cam_Intro09CageApproach, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro09CageApproach, CAMERA_FIELD_FIELD_OF_VIEW, 60.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro09CageApproach, CAMERA_FIELD_FARZ, 6000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro09CageApproach, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro09CageApproach, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro09CageApproach, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro09CageApproach, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro09CageApproach, -5107.5, 2830.7, 0.0 )

    set gg_cam_Intro10Cage01 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro10Cage01, CAMERA_FIELD_ZOFFSET, 12.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage01, CAMERA_FIELD_ROTATION, 120.2, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage01, CAMERA_FIELD_ANGLE_OF_ATTACK, 344.6, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage01, CAMERA_FIELD_TARGET_DISTANCE, 578.5, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage01, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage01, CAMERA_FIELD_FIELD_OF_VIEW, 60.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage01, CAMERA_FIELD_FARZ, 3500.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage01, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage01, CAMERA_FIELD_LOCAL_PITCH, 354.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage01, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage01, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro10Cage01, -5041.9, 2420.1, 0.0 )

    set gg_cam_Intro10Cage02 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro10Cage02, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage02, CAMERA_FIELD_ROTATION, 85.9, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage02, CAMERA_FIELD_ANGLE_OF_ATTACK, 355.1, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage02, CAMERA_FIELD_TARGET_DISTANCE, 826.5, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage02, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage02, CAMERA_FIELD_FIELD_OF_VIEW, 60.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage02, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage02, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage02, CAMERA_FIELD_LOCAL_PITCH, 354.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage02, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro10Cage02, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro10Cage02, -4909.0, 2405.8, 0.0 )

    set gg_cam_Intro11 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Intro11, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro11, CAMERA_FIELD_ROTATION, 90.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro11, CAMERA_FIELD_ANGLE_OF_ATTACK, 304.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro11, CAMERA_FIELD_TARGET_DISTANCE, 1650.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro11, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro11, CAMERA_FIELD_FIELD_OF_VIEW, 60.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro11, CAMERA_FIELD_FARZ, 3500.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro11, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro11, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro11, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Intro11, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Intro11, -4847.2, 2191.6, 0.0 )

    set gg_cam_IntroDialogue = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_IntroDialogue, CAMERA_FIELD_ZOFFSET, 17.0, 0.0 )
    call CameraSetupSetField( gg_cam_IntroDialogue, CAMERA_FIELD_ROTATION, 130.0, 0.0 )
    call CameraSetupSetField( gg_cam_IntroDialogue, CAMERA_FIELD_ANGLE_OF_ATTACK, 340.6, 0.0 )
    call CameraSetupSetField( gg_cam_IntroDialogue, CAMERA_FIELD_TARGET_DISTANCE, 878.5, 0.0 )
    call CameraSetupSetField( gg_cam_IntroDialogue, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_IntroDialogue, CAMERA_FIELD_FIELD_OF_VIEW, 50.0, 0.0 )
    call CameraSetupSetField( gg_cam_IntroDialogue, CAMERA_FIELD_FARZ, 3000.0, 0.0 )
    call CameraSetupSetField( gg_cam_IntroDialogue, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_IntroDialogue, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_IntroDialogue, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_IntroDialogue, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_IntroDialogue, -4810.0, 2876.3, 0.0 )

    set gg_cam_Mid01Oversee = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Mid01Oversee, CAMERA_FIELD_ZOFFSET, 25.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01Oversee, CAMERA_FIELD_ROTATION, 91.1, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01Oversee, CAMERA_FIELD_ANGLE_OF_ATTACK, 357.9, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01Oversee, CAMERA_FIELD_TARGET_DISTANCE, 1449.5, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01Oversee, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01Oversee, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01Oversee, CAMERA_FIELD_FARZ, 3000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01Oversee, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01Oversee, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01Oversee, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01Oversee, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Mid01Oversee, -10428.9, -3638.8, 0.0 )

    set gg_cam_Mid01OverseeB = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Mid01OverseeB, CAMERA_FIELD_ZOFFSET, 25.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01OverseeB, CAMERA_FIELD_ROTATION, 91.6, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01OverseeB, CAMERA_FIELD_ANGLE_OF_ATTACK, 357.5, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01OverseeB, CAMERA_FIELD_TARGET_DISTANCE, 1700.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01OverseeB, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01OverseeB, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01OverseeB, CAMERA_FIELD_FARZ, 3000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01OverseeB, CAMERA_FIELD_NEARZ, 8.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01OverseeB, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01OverseeB, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid01OverseeB, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Mid01OverseeB, -10437.2, -2595.6, 0.0 )

    set gg_cam_Mid02 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Mid02, CAMERA_FIELD_ZOFFSET, 15.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid02, CAMERA_FIELD_ROTATION, 99.6, 0.0 )
    call CameraSetupSetField( gg_cam_Mid02, CAMERA_FIELD_ANGLE_OF_ATTACK, 345.2, 0.0 )
    call CameraSetupSetField( gg_cam_Mid02, CAMERA_FIELD_TARGET_DISTANCE, 769.7, 0.0 )
    call CameraSetupSetField( gg_cam_Mid02, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid02, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid02, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid02, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid02, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid02, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid02, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Mid02, -10510.3, -2941.4, 0.0 )

    set gg_cam_Mid03 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Mid03, CAMERA_FIELD_ZOFFSET, 90.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid03, CAMERA_FIELD_ROTATION, 99.6, 0.0 )
    call CameraSetupSetField( gg_cam_Mid03, CAMERA_FIELD_ANGLE_OF_ATTACK, 345.2, 0.0 )
    call CameraSetupSetField( gg_cam_Mid03, CAMERA_FIELD_TARGET_DISTANCE, 769.7, 0.0 )
    call CameraSetupSetField( gg_cam_Mid03, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid03, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid03, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid03, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid03, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid03, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid03, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Mid03, -10510.3, -2941.4, 0.0 )

    set gg_cam_MidOutro = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_MidOutro, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_MidOutro, CAMERA_FIELD_ROTATION, 90.0, 0.0 )
    call CameraSetupSetField( gg_cam_MidOutro, CAMERA_FIELD_ANGLE_OF_ATTACK, 304.0, 0.0 )
    call CameraSetupSetField( gg_cam_MidOutro, CAMERA_FIELD_TARGET_DISTANCE, 1650.0, 0.0 )
    call CameraSetupSetField( gg_cam_MidOutro, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_MidOutro, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_MidOutro, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetField( gg_cam_MidOutro, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_MidOutro, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_MidOutro, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_MidOutro, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_MidOutro, -8601.3, -2617.0, 0.0 )

    set gg_cam_Outro01 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Outro01, CAMERA_FIELD_ZOFFSET, 150.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro01, CAMERA_FIELD_ROTATION, 78.5, 0.0 )
    call CameraSetupSetField( gg_cam_Outro01, CAMERA_FIELD_ANGLE_OF_ATTACK, 4.9, 0.0 )
    call CameraSetupSetField( gg_cam_Outro01, CAMERA_FIELD_TARGET_DISTANCE, 1650.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro01, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro01, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro01, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro01, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro01, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro01, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro01, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Outro01, -4955.0, 5209.1, 0.0 )

    set gg_cam_Outro02 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Outro02, CAMERA_FIELD_ZOFFSET, 250.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro02, CAMERA_FIELD_ROTATION, 109.9, 0.0 )
    call CameraSetupSetField( gg_cam_Outro02, CAMERA_FIELD_ANGLE_OF_ATTACK, 4.9, 0.0 )
    call CameraSetupSetField( gg_cam_Outro02, CAMERA_FIELD_TARGET_DISTANCE, 1000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro02, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro02, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro02, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro02, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro02, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro02, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro02, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Outro02, -5188.4, 5109.1, 0.0 )

    set gg_cam_Outro03 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Outro03, CAMERA_FIELD_ZOFFSET, 10.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro03, CAMERA_FIELD_ROTATION, 97.8, 0.0 )
    call CameraSetupSetField( gg_cam_Outro03, CAMERA_FIELD_ANGLE_OF_ATTACK, 0.4, 0.0 )
    call CameraSetupSetField( gg_cam_Outro03, CAMERA_FIELD_TARGET_DISTANCE, 450.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro03, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro03, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro03, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro03, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro03, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro03, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Outro03, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Outro03, -5223.8, 4784.1, 0.0 )

    set gg_cam_Mid04A = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Mid04A, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04A, CAMERA_FIELD_ROTATION, 115.1, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04A, CAMERA_FIELD_ANGLE_OF_ATTACK, 331.7, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04A, CAMERA_FIELD_TARGET_DISTANCE, 1368.9, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04A, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04A, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04A, CAMERA_FIELD_FARZ, 6000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04A, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04A, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04A, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04A, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Mid04A, -9002.3, -2792.8, 0.0 )

    set gg_cam_Mid04B = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Mid04B, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04B, CAMERA_FIELD_ROTATION, 98.1, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04B, CAMERA_FIELD_ANGLE_OF_ATTACK, 331.7, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04B, CAMERA_FIELD_TARGET_DISTANCE, 1368.9, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04B, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04B, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04B, CAMERA_FIELD_FARZ, 6000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04B, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04B, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04B, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid04B, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Mid04B, -9002.3, -2792.8, 0.0 )

    set gg_cam_Mid05 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Mid05, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid05, CAMERA_FIELD_ROTATION, 90.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid05, CAMERA_FIELD_ANGLE_OF_ATTACK, 308.7, 0.0 )
    call CameraSetupSetField( gg_cam_Mid05, CAMERA_FIELD_TARGET_DISTANCE, 1368.9, 0.0 )
    call CameraSetupSetField( gg_cam_Mid05, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid05, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid05, CAMERA_FIELD_FARZ, 6000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid05, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid05, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid05, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Mid05, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Mid05, -9002.3, -2792.8, 0.0 )

    set gg_cam_Failure = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Failure, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Failure, CAMERA_FIELD_ROTATION, 93.9, 0.0 )
    call CameraSetupSetField( gg_cam_Failure, CAMERA_FIELD_ANGLE_OF_ATTACK, 352.6, 0.0 )
    call CameraSetupSetField( gg_cam_Failure, CAMERA_FIELD_TARGET_DISTANCE, 1300.0, 0.0 )
    call CameraSetupSetField( gg_cam_Failure, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Failure, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Failure, CAMERA_FIELD_FARZ, 5000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Failure, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Failure, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Failure, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Failure, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Failure, -5690.9, 6652.8, 0.0 )

    set gg_cam_EitrigWounded01 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_EitrigWounded01, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded01, CAMERA_FIELD_ROTATION, 123.3, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded01, CAMERA_FIELD_ANGLE_OF_ATTACK, 331.7, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded01, CAMERA_FIELD_TARGET_DISTANCE, 223.0, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded01, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded01, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded01, CAMERA_FIELD_FARZ, 4000.0, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded01, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded01, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded01, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_EitrigWounded01, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_EitrigWounded01, -5930.6, 6123.3, 0.0 )

endfunction

//***************************************************************************
//*
//*  Custom Script Code
//*
//***************************************************************************
//
// - Music
// - Load Heros and order of Herous
// - Tharbek Priority
// - Sunder Armor Upgrade
// - VO Portraits
// - Burning Oil Updgrade
// - Remove Altar of Storms
// - Tharbek Icon
// - Eitrig Patrol region needs to be closer to tower
// - Tharbek needs unique facefx
// - Share vision for trolls that walk away
// - CInematic names "Orgrim Doomhammer and Anduin Lothar"
// - the times dimishes if quest is completed
// - Save game after camera is moved to Eitrig
// - Grunts and Tharbek leaving
// - Kurdran SHould have tag "Wildhammer Clan"
// - Ask VIncent to make an Icon for Eitrig
// - Optional QUest Trolls reward - add trolls as reinforcements
// - Human Camp should being build during cinematics
// - Share vision for goblins
// - Add working animation for goblins
// - Hide Neutral and enemy inventories
// - elven priests should be RoC skin
// - Final cineamtic - Show big explosion of units and some fight in the end
// - Eitrig wounded - make it more dramatic
// - Grunt disapearing after the mid cinematic
// - rework ubersplats - make them daker to fit the terrain
// - Fail CInematic - Hide the timer
// - Eitrig still have echo
// - Remouce Excessive imports

// - Elves should attack base and not chase player across the map (however they can attack trolls) - for MEDIUM and EASY Difficulty. In case of HARD = leave it as is.
// - Once Main Troll quest is completed - Zuljin should speak his line.
// - If the additional troll quest is completed then Eitrigg should get troll reinforcements in the last stage of survival mode when his Iron Orc Timer starts.
// - When Doomhammer and Zuljin leave - they take some spawned at Great hall units (grunts, axethrowers) And Tharbek an leave together. 
// - In midgame cinematic when Anduin talks to Kurdran - the human camp should be in a build process - buildings should have birth animations and peasants should build them
// - Timer Of the WH Quest should not be cut off after Successful Quest Completion - Alliance should not arrive earlier.
// - There is no portrait used during voice overs.
// - Each Voice Line should use triggers "set volume for speech" before it is played because fight sounds and quotes interfiere it.
//
//***************************************************************************
//*
//*  Triggers
//*
//***************************************************************************

//===========================================================================
// Trigger: Unit Event Config
//
// GUI Unit Event by Bribe, version 2.5.0.0
//===========================================================================
function Trig_Unit_Event_Config_Actions takes nothing returns nothing
    //  
    // Copy Unit Event Ability from Object Editor, then set DetectRemoveAbility to it as follows:
    //  
    set udg_DetectRemoveAbility = 'A65I'
    //  
    // Paste it a second time, then set DetectTransformAbility to it as follows:
    //  
    set udg_DetectTransformAbility = 'A65J'
    //  
    // One additional event to run right before Unit Indexer initializes, added 29 May 2017 for ZiBitheWand3r3r 
    set udg_UnitIndexEvent = -1.00
    //  
    // Initialize Unit Event now that all the InitTrig_ functions have run
    //  
    set udg_IsUnitPreplaced[0] = true
    call ExecuteFunc("UnitEventInit")
    set udg_UnitIndexEvent = 3.00
    set udg_IsUnitPreplaced[0] = udg_IsUnitTransforming[0]
endfunction

//===========================================================================
function InitTrig_Unit_Event_Config takes nothing returns nothing
    set gg_trg_Unit_Event_Config = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Unit_Event_Config, function Trig_Unit_Event_Config_Actions )
endfunction

//===========================================================================
// Trigger: Unit Event
//===========================================================================
//===========================================================================
function UnitEventDestroyGroup takes integer i returns nothing
    if udg_CargoTransportGroup[i] != null then
        call DestroyGroup(udg_CargoTransportGroup[i])
        set udg_CargoTransportGroup[i] = null
    endif
endfunction
function UnitEventCheckAfter takes nothing returns nothing
    local integer i = 0
    loop
        set i = udg_CheckDeathList[i]
        exitwhen i == 0
        if udg_IsUnitNew[i] then
            //The unit was just created.
            set udg_IsUnitNew[i] = false
        elseif udg_IsUnitTransforming[i] then
           //Added 21 July 2017 to fix the issue re-adding this ability in the same instant
           set udg_UDex = i
           set udg_UnitTypeEvent = 0.00
           set udg_UnitTypeEvent = 1.00
           set udg_UnitTypeOf[i] = GetUnitTypeId(udg_UDexUnits[i]) //Set this afterward to give the user extra reference
           set udg_IsUnitTransforming[i] = false
           call UnitAddAbility(udg_UDexUnits[i], udg_DetectTransformAbility)
        elseif udg_IsUnitAlive[i] then
            //The unit has started reincarnating.
            set udg_IsUnitReincarnating[i] = true
            set udg_IsUnitAlive[i] = false
            set udg_UDex = i
            set udg_DeathEvent = 0.50
            set udg_DeathEvent = 0.00
        endif
        set udg_CheckDeathInList[i] = false
    endloop
    //Empty the list
    set udg_CheckDeathList[0] = 0
endfunction
function UnitEventCheckAfterProxy takes integer i returns nothing
    if udg_CheckDeathList[0] == 0 then
        call TimerStart(udg_CheckDeathTimer, 0.00, false, function UnitEventCheckAfter)
    endif
    if not udg_CheckDeathInList[i] then
        set udg_CheckDeathList[i] = udg_CheckDeathList[0]
        set udg_CheckDeathList[0] = i
        set udg_CheckDeathInList[i] = true
    endif
endfunction

function UnitEventOnUnload takes nothing returns nothing
    local integer i = udg_UDex
    call GroupRemoveUnit(udg_CargoTransportGroup[GetUnitUserData(udg_CargoTransportUnit[i])], udg_UDexUnits[i])
    set udg_IsUnitBeingUnloaded[i] = true
    set udg_CargoEvent = 0.00
    set udg_CargoEvent = 2.00
    set udg_CargoEvent = 0.00
    set udg_IsUnitBeingUnloaded[i] = false
    if not IsUnitLoaded(udg_UDexUnits[i]) or IsUnitType(udg_CargoTransportUnit[i], UNIT_TYPE_DEAD) or GetUnitTypeId(udg_CargoTransportUnit[i]) == 0 then
        set udg_CargoTransportUnit[i] = null
    endif
endfunction

function UnitEventOnDeath takes nothing returns boolean
    local integer pdex = udg_UDex
    set udg_UDex = GetUnitUserData(GetTriggerUnit())
    if udg_UDex != 0 then
        set udg_KillerOfUnit[udg_UDex] = GetKillingUnit() //Added 29 May 2017 for GIMLI_2 
        set udg_IsUnitAlive[udg_UDex] = false
        set udg_DeathEvent = 0.00
        set udg_DeathEvent = 1.00
        set udg_DeathEvent = 0.00
        set udg_KillerOfUnit[udg_UDex] = null
        if udg_CargoTransportUnit[udg_UDex] != null then
            call UnitEventOnUnload()
        endif
    endif
    set udg_UDex = pdex
    return false
endfunction
  
function UnitEventOnOrder takes nothing returns boolean
    local integer pdex = udg_UDex
    local unit u = GetFilterUnit()
    local integer i = GetUnitUserData(u)
    if i > 0 then
        set udg_UDex = i
        if GetUnitAbilityLevel(u, udg_DetectRemoveAbility) == 0 then
            if not udg_IsUnitRemoved[i] then
                set udg_IsUnitRemoved[i] = true
                set udg_IsUnitAlive[i] = false
                set udg_SummonerOfUnit[i] = null
                
                //For backwards-compatibility:
                set udg_DeathEvent = 0.00
                set udg_DeathEvent = 3.00
                set udg_DeathEvent = 0.00
                
                //Fire deindex event for UDex:
                set udg_UnitIndexEvent = 0.00
                set udg_UnitIndexEvent = 2.00
                set udg_UnitIndexEvent = 0.00
                
                set udg_UDexNext[udg_UDexPrev[i]] = udg_UDexNext[i]
                set udg_UDexPrev[udg_UDexNext[i]] = udg_UDexPrev[i]
                
                // Recycle the index for later use
                set udg_UDexUnits[i] = null
                set udg_UDexPrev[i] = udg_UDexLastRecycled
                set udg_UDexLastRecycled = i
                call UnitEventDestroyGroup(i)
            endif
        elseif not udg_IsUnitAlive[i] then
            if not IsUnitType(u, UNIT_TYPE_DEAD) then
                set udg_IsUnitAlive[i] = true
                set udg_DeathEvent = 0.00
                set udg_DeathEvent = 2.00
                set udg_DeathEvent = 0.00
                set udg_IsUnitReincarnating[i] = false
            endif
        elseif IsUnitType(u, UNIT_TYPE_DEAD) then
            if udg_IsUnitNew[i] then
                //This unit was created as a corpse.
                set udg_IsUnitAlive[i] = false
                set udg_DeathEvent = 0.00
                set udg_DeathEvent = 1.00
                set udg_DeathEvent = 0.00
            elseif udg_CargoTransportUnit[i] == null or not IsUnitType(u, UNIT_TYPE_HERO) then
                //The unit may have just started reincarnating.
                call UnitEventCheckAfterProxy(i)
            endif
        elseif GetUnitAbilityLevel(u, udg_DetectTransformAbility) == 0 and not udg_IsUnitTransforming[i] then
            set udg_IsUnitTransforming[i] = true
            call UnitEventCheckAfterProxy(i)  //This block has been updated on 21 July 2017
        endif
        if udg_CargoTransportUnit[i] != null and not udg_IsUnitBeingUnloaded[i] and not IsUnitLoaded(u) or IsUnitType(u, UNIT_TYPE_DEAD) then
            call UnitEventOnUnload()
        endif
        set udg_UDex = pdex
    endif
    set u = null
    return false
endfunction
function UnitEventOnSummon takes nothing returns boolean
    local integer pdex = udg_UDex
    set udg_UDex = GetUnitUserData(GetTriggerUnit())
    if udg_IsUnitNew[udg_UDex] then
        set udg_SummonerOfUnit[udg_UDex] = GetSummoningUnit()
        set udg_UnitIndexEvent = 0.00
        set udg_UnitIndexEvent = 0.50
        set udg_UnitIndexEvent = 0.00
    endif
    set udg_UDex = pdex
    return false
endfunction
function UnitEventOnLoad takes nothing returns boolean
    local integer pdex = udg_UDex
    local integer i = GetUnitUserData(GetTriggerUnit())
    local integer index
    if i != 0 then
        set udg_UDex = i
        if udg_CargoTransportUnit[i] != null then
            call UnitEventOnUnload()
        endif
        //Loaded corpses do not issue an order when unloaded, therefore must
        //use the enter-region event method taken from Jesus4Lyf's Transport.
        if not udg_IsUnitAlive[i] then
            call SetUnitX(udg_UDexUnits[i], udg_WorldMaxX)
            call SetUnitY(udg_UDexUnits[i], udg_WorldMaxY)
        endif
        
        set udg_CargoTransportUnit[i] = GetTransportUnit()
        set index = GetUnitUserData(udg_CargoTransportUnit[i])
        if udg_CargoTransportGroup[index] == null then
            set udg_CargoTransportGroup[index] = CreateGroup()
        endif
        call GroupAddUnit(udg_CargoTransportGroup[index], udg_UDexUnits[i])
        set udg_CargoEvent = 0.00
        set udg_CargoEvent = 1.00
        set udg_CargoEvent = 0.00
        set udg_UDex = pdex
    endif
    return false
endfunction
function UnitEventEnter takes nothing returns boolean
    local integer pdex = udg_UDex
    local integer i = udg_UDexLastRecycled
    local unit u = GetFilterUnit()
    if udg_UnitIndexerEnabled and GetUnitAbilityLevel(u, udg_DetectRemoveAbility) == 0 then
        //Generate a unique integer index for this unit
        if i == 0 then
            set i = udg_UDexMax + 1
            set udg_UDexMax = i
        else
            set udg_UDexLastRecycled = udg_UDexPrev[i]
        endif
        //Link index to unit, unit to index
        set udg_UDexUnits[i] = u
        call SetUnitUserData(u, i)
        
        //For backwards-compatibility, add the unit to a linked list
        set udg_UDexNext[i] = udg_UDexNext[0]
        set udg_UDexPrev[udg_UDexNext[0]] = i
        set udg_UDexNext[0] = i
        set udg_UDexPrev[i] = 0

        set udg_CheckDeathInList[i] = false

        call UnitAddAbility(u, udg_DetectRemoveAbility)
        call UnitMakeAbilityPermanent(u, true, udg_DetectRemoveAbility)
        call UnitAddAbility(u, udg_DetectTransformAbility)
        set udg_UnitTypeOf[i] = GetUnitTypeId(u)
        set udg_IsUnitNew[i] = true
        set udg_IsUnitAlive[i] = true
        set udg_IsUnitRemoved[i] = false
        set udg_IsUnitReincarnating[i] = false
        set udg_IsUnitPreplaced[i] = udg_IsUnitPreplaced[0] //Added 29 May 2017 for Spellbound
        call UnitEventCheckAfterProxy(i)
        
        //Fire index event for UDex
        set udg_UDex = i
        set udg_UnitIndexEvent = 0.00
        set udg_UnitIndexEvent = 1.00
        set udg_UnitIndexEvent = 0.00
    else
        set udg_UDex = GetUnitUserData(u)
        if udg_CargoTransportUnit[udg_UDex] != null and not IsUnitLoaded(u) then
            //The unit was dead, but has re-entered the map.
            call UnitEventOnUnload()
        endif
    endif
    set udg_UDex = pdex
    set u = null
    return false
endfunction
//===========================================================================
function UnitEventInit takes nothing returns nothing
    local integer i = bj_MAX_PLAYER_SLOTS //update to make it work with 1.29 
    local player p
    local trigger t = CreateTrigger()
    local trigger load = CreateTrigger()
    local trigger death = CreateTrigger()
    local trigger summon = CreateTrigger()
    local rect r = GetWorldBounds()
    local region re = CreateRegion()
    local boolexpr enterB = Filter(function UnitEventEnter)
    local boolexpr orderB = Filter(function UnitEventOnOrder)
    set udg_WorldMaxX = GetRectMaxX(r)
    set udg_WorldMaxY = GetRectMaxY(r)
    call RegionAddRect(re, r)
    call RemoveRect(r)
    call UnitEventDestroyGroup(0)
    call UnitEventDestroyGroup(1)
    
    set udg_CheckDeathList[0] = 0
    set udg_UnitIndexerEnabled = true
    call TriggerRegisterEnterRegion(CreateTrigger(), re, enterB)
    call TriggerAddCondition(load, Filter(function UnitEventOnLoad))
    call TriggerAddCondition(death, Filter(function UnitEventOnDeath))
    call TriggerAddCondition(summon, Filter(function UnitEventOnSummon))
    loop
        set i = i - 1
        set p = Player(i)
        call SetPlayerAbilityAvailable(p, udg_DetectRemoveAbility, false)
        call SetPlayerAbilityAvailable(p, udg_DetectTransformAbility, false)
        call TriggerRegisterPlayerUnitEvent(summon, p, EVENT_PLAYER_UNIT_SUMMON, null)
        call TriggerRegisterPlayerUnitEvent(t, p, EVENT_PLAYER_UNIT_ISSUED_ORDER, orderB)
        call TriggerRegisterPlayerUnitEvent(death, p, EVENT_PLAYER_UNIT_DEATH, null)
        call TriggerRegisterPlayerUnitEvent(load, p, EVENT_PLAYER_UNIT_LOADED, null)
        call GroupEnumUnitsOfPlayer(bj_lastCreatedGroup, p, enterB)
        exitwhen i == 0
    endloop
    set summon = null
    set death = null
    set load = null
    set re = null
    set enterB = null
    set orderB = null
    set p = null
    set r = null
    set t = null
endfunction
function InitTrig_Unit_Event takes nothing returns nothing
endfunction
//===========================================================================
// Trigger: SunderArmor
//===========================================================================
function Trig_SunderArmor_Conditions takes nothing returns boolean
    if ( not ( IsUnitEnemy(GetAttackedUnitBJ(), udg_Player01) == true ) ) then
        return false
    endif
    if ( not ( IsUnitAliveBJ(GetAttackedUnitBJ()) == true ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetAttackedUnitBJ(), UNIT_TYPE_STRUCTURE) == false ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetAttackedUnitBJ(), UNIT_TYPE_GROUND) == true ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetAttacker()) == 'o60G' ) ) then
        return false
    endif
    if ( not ( udg_HeavyHammersResearched == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_SunderArmor_Func008C takes nothing returns boolean
    if ( not ( udg_Chance == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_SunderArmor_Actions takes nothing returns nothing
    set udg_Chance = GetRandomInt(1, 5)
    if ( Trig_SunderArmor_Func008C() ) then
        set udg_TempPointGrunt = GetUnitLoc(GetAttackedUnitBJ())
        call CreateNUnitsAtLoc( 1, 'u602', GetOwningPlayer(GetAttacker()), udg_TempPointGrunt, bj_UNIT_FACING )
        set udg_DummyGrunt = GetLastCreatedUnit()
        call UnitAddAbilityBJ( 'A018', udg_DummyGrunt )
        call IssueTargetOrderBJ( udg_DummyGrunt, "innerfire", GetAttackedUnitBJ() )
        call UnitApplyTimedLifeBJ( 2.00, 'BTLF', udg_DummyGrunt )
        call RemoveLocation (udg_TempPointGrunt)
    else
    endif
endfunction

//===========================================================================
function InitTrig_SunderArmor takes nothing returns nothing
    set gg_trg_SunderArmor = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_SunderArmor, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_SunderArmor, Condition( function Trig_SunderArmor_Conditions ) )
    call TriggerAddAction( gg_trg_SunderArmor, function Trig_SunderArmor_Actions )
endfunction

//===========================================================================
// Trigger: HeavyHammersResearched
//===========================================================================
function Trig_HeavyHammersResearched_Conditions takes nothing returns boolean
    if ( not ( GetResearched() == 'R00F' ) ) then
        return false
    endif
    return true
endfunction

function Trig_HeavyHammersResearched_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_HeavyHammersResearched = true
endfunction

//===========================================================================
function InitTrig_HeavyHammersResearched takes nothing returns nothing
    set gg_trg_HeavyHammersResearched = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_HeavyHammersResearched, Player(0), EVENT_PLAYER_UNIT_RESEARCH_FINISH )
    call TriggerAddCondition( gg_trg_HeavyHammersResearched, Condition( function Trig_HeavyHammersResearched_Conditions ) )
    call TriggerAddAction( gg_trg_HeavyHammersResearched, function Trig_HeavyHammersResearched_Actions )
endfunction

//===========================================================================
// Trigger: Doomhammer I Doomstrike
//===========================================================================
function Trig_Doomhammer_I_Doomstrike_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'XDQ1' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Doomhammer_I_Doomstrike_Func013Func001Func003Func002Func002C takes nothing returns boolean
    if ( not ( GetUnitAbilityLevelSwapped('XDQ1', GetTriggerUnit()) == 3 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Doomhammer_I_Doomstrike_Func013Func001Func003Func002C takes nothing returns boolean
    if ( not ( GetUnitAbilityLevelSwapped('XDQ1', GetTriggerUnit()) == 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Doomhammer_I_Doomstrike_Func013Func001Func003C takes nothing returns boolean
    if ( not ( GetUnitAbilityLevelSwapped('XDQ1', GetTriggerUnit()) == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Doomhammer_I_Doomstrike_Func013Func001C takes nothing returns boolean
    if ( not ( IsDestructableAliveBJ(GetEnumDestructable()) == true ) ) then
        return false
    endif
    if ( not ( IsDestructableInvulnerableBJ(GetEnumDestructable()) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Doomhammer_I_Doomstrike_Func013A takes nothing returns nothing
    if ( Trig_Doomhammer_I_Doomstrike_Func013Func001C() ) then
        if ( Trig_Doomhammer_I_Doomstrike_Func013Func001Func003C() ) then
            call SetDestructableLife( GetEnumDestructable(), ( GetDestructableLife(GetEnumDestructable()) - 100.00 ) )
        else
            if ( Trig_Doomhammer_I_Doomstrike_Func013Func001Func003Func002C() ) then
                call SetDestructableLife( GetEnumDestructable(), ( GetDestructableLife(GetEnumDestructable()) - 175.00 ) )
            else
                if ( Trig_Doomhammer_I_Doomstrike_Func013Func001Func003Func002Func002C() ) then
                    call SetDestructableLife( GetEnumDestructable(), ( GetDestructableLife(GetEnumDestructable()) - 250.00 ) )
                else
                endif
            endif
        endif
    else
    endif
endfunction

function Trig_Doomhammer_I_Doomstrike_Actions takes nothing returns nothing
    set udg_Doomhammer_TempPoint_Q = GetSpellTargetLoc()
    //  
    // Dummy (Spells)
    call CreateNUnitsAtLoc( 1, 'u003', GetOwningPlayer(GetTriggerUnit()), udg_Doomhammer_TempPoint_Q, bj_UNIT_FACING )
    set udg_Doomhammer_Dummy_Q = GetLastCreatedUnit()
    call UnitApplyTimedLifeBJ( 2.00, 'BTLF', udg_Doomhammer_Dummy_Q )
    // Ability: Doomstrike (Doomhammer - Effect)
    call UnitAddAbilityBJ( 'X00E', udg_Doomhammer_Dummy_Q )
    call SetUnitAbilityLevelSwapped( 'X00E', udg_Doomhammer_Dummy_Q, GetUnitAbilityLevelSwapped('XDQ1', GetTriggerUnit()) )
    call IssueImmediateOrderBJ( udg_Doomhammer_Dummy_Q, "thunderclap" )
    //  
    set bj_wantDestroyGroup = true
    call EnumDestructablesInCircleBJ( 300.00, udg_Doomhammer_TempPoint_Q, function Trig_Doomhammer_I_Doomstrike_Func013A )
    //  
    call RemoveLocation (udg_Doomhammer_TempPoint_Q)
endfunction

//===========================================================================
function InitTrig_Doomhammer_I_Doomstrike takes nothing returns nothing
    set gg_trg_Doomhammer_I_Doomstrike = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Doomhammer_I_Doomstrike, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Doomhammer_I_Doomstrike, Condition( function Trig_Doomhammer_I_Doomstrike_Conditions ) )
    call TriggerAddAction( gg_trg_Doomhammer_I_Doomstrike, function Trig_Doomhammer_I_Doomstrike_Actions )
endfunction

//===========================================================================
// Trigger: Doomhammer I Warbanner
//
// Conditions
// (Unit-type of (Summoned unit)) Equal to Warbanner (Doomhammer)
//===========================================================================
function Trig_Doomhammer_I_Warbanner_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetSummonedUnit()) == 'o002' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Doomhammer_I_Warbanner_Actions takes nothing returns nothing
    // Set level of Warbanner (Doomhammer - Buff) for (Summoned unit) to (Level of Warbanner (Doomhammer) for (Summoning unit))
    call SetUnitAbilityLevelSwapped( 'A00H', GetSummonedUnit(), GetUnitAbilityLevelSwapped('A008', GetSummoningUnit()) )
endfunction

//===========================================================================
function InitTrig_Doomhammer_I_Warbanner takes nothing returns nothing
    set gg_trg_Doomhammer_I_Warbanner = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Doomhammer_I_Warbanner, EVENT_PLAYER_UNIT_SUMMON )
    call TriggerAddCondition( gg_trg_Doomhammer_I_Warbanner, Condition( function Trig_Doomhammer_I_Warbanner_Conditions ) )
    call TriggerAddAction( gg_trg_Doomhammer_I_Warbanner, function Trig_Doomhammer_I_Warbanner_Actions )
endfunction

//===========================================================================
// Trigger: Doohmammer I For the Horde
//
// Conditions
// (Ability being cast) Equal to For the Horde! (Doomhammer)
//===========================================================================
function Trig_Doohmammer_I_For_the_Horde_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A00G' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Doohmammer_I_For_the_Horde_Func014001003 takes nothing returns boolean
    return ( IsUnitAlly(GetFilterUnit(), GetOwningPlayer(GetTriggerUnit())) == true )
endfunction

function Trig_Doohmammer_I_For_the_Horde_Func014Func001C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(GetEnumUnit()) == true ) ) then
        return false
    endif
    if ( not ( IsUnitIdType(GetUnitTypeId(GetEnumUnit()), UNIT_TYPE_STRUCTURE) == false ) ) then
        return false
    endif
    if ( not ( IsUnitIdType(GetUnitTypeId(GetEnumUnit()), UNIT_TYPE_MECHANICAL) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Doohmammer_I_For_the_Horde_Func014A takes nothing returns nothing
    if ( Trig_Doohmammer_I_For_the_Horde_Func014Func001C() ) then
        call SetUnitLifeBJ( GetEnumUnit(), ( GetUnitStateSwap(UNIT_STATE_LIFE, GetEnumUnit()) + 200.00 ) )
        call QueueUnitAnimationBJ( GetEnumUnit(), "stand victory" )
    else
    endif
endfunction

function Trig_Doohmammer_I_For_the_Horde_Actions takes nothing returns nothing
    set udg_Doomhammer_TempPoint_R = GetUnitLoc(GetTriggerUnit())
    // Sound: Ability_ForTheHorde
    call PlaySoundOnUnitBJ( gg_snd_Ability_ForTheHorde, 75.00, GetTriggerUnit() )
    //  
    // Dummy (Spells)
    call CreateNUnitsAtLoc( 1, 'u003', GetOwningPlayer(GetTriggerUnit()), udg_Doomhammer_TempPoint_R, bj_UNIT_FACING )
    set udg_Doomhammer_Dummy_R = GetLastCreatedUnit()
    call UnitApplyTimedLifeBJ( 2.00, 'BTLF', udg_Doomhammer_Dummy_R )
    // Ability: For the Horde! (Doomhammer - Effect)
    call UnitAddAbilityBJ( 'A00I', udg_Doomhammer_Dummy_R )
    call IssueTargetOrderBJ( udg_Doomhammer_Dummy_R, "spiritlink", GetTriggerUnit() )
    //  
    set bj_wantDestroyGroup = true
    call ForGroupBJ( GetUnitsInRangeOfLocMatching(800.00, udg_Doomhammer_TempPoint_R, Condition(function Trig_Doohmammer_I_For_the_Horde_Func014001003)), function Trig_Doohmammer_I_For_the_Horde_Func014A )
    //  
    call RemoveLocation (udg_Doomhammer_TempPoint_R)
endfunction

//===========================================================================
function InitTrig_Doohmammer_I_For_the_Horde takes nothing returns nothing
    set gg_trg_Doohmammer_I_For_the_Horde = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Doohmammer_I_For_the_Horde, EVENT_PLAYER_UNIT_SPELL_CAST )
    call TriggerAddCondition( gg_trg_Doohmammer_I_For_the_Horde, Condition( function Trig_Doohmammer_I_For_the_Horde_Conditions ) )
    call TriggerAddAction( gg_trg_Doohmammer_I_For_the_Horde, function Trig_Doohmammer_I_For_the_Horde_Actions )
endfunction

//===========================================================================
// Trigger: Zuljin I Grievous Throw
//
// Conditions
// (Ability being cast) Equal to Grievous Throw (Zul'jin)
//===========================================================================
function Trig_Zuljin_I_Grievous_Throw_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'XAZ2' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Zuljin_I_Grievous_Throw_Actions takes nothing returns nothing
    set udg_Zuljin_TempPoint_E = GetUnitLoc(GetTriggerUnit())
    // Dummy (Spells)
    call CreateNUnitsAtLoc( 1, 'u003', GetOwningPlayer(GetTriggerUnit()), udg_Zuljin_TempPoint_E, bj_UNIT_FACING )
    set udg_Zuljin_Dummy_E = GetLastCreatedUnit()
    call UnitApplyTimedLifeBJ( 2.00, 'BTLF', udg_Zuljin_Dummy_E )
    // Ability: Grievous Throw (Zul'jin - DoT)
    call UnitAddAbilityBJ( 'XAZ6', udg_Zuljin_Dummy_E )
    call SetUnitAbilityLevelSwapped( 'XAZ6', udg_Zuljin_Dummy_E, GetUnitAbilityLevelSwapped('XAZ2', GetTriggerUnit()) )
    call IssueTargetOrderBJ( udg_Zuljin_Dummy_E, "acidbomb", GetSpellTargetUnit() )
    //  
    call RemoveLocation (udg_Zuljin_TempPoint_E)
endfunction

//===========================================================================
function InitTrig_Zuljin_I_Grievous_Throw takes nothing returns nothing
    set gg_trg_Zuljin_I_Grievous_Throw = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Zuljin_I_Grievous_Throw, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Zuljin_I_Grievous_Throw, Condition( function Trig_Zuljin_I_Grievous_Throw_Conditions ) )
    call TriggerAddAction( gg_trg_Zuljin_I_Grievous_Throw, function Trig_Zuljin_I_Grievous_Throw_Actions )
endfunction

//===========================================================================
// Trigger: Zuljin I Locust Jar I Launch
//
// Conditions
// (Ability being cast) Equal to Locust Jar (Zul'jin)
//===========================================================================
function Trig_Zuljin_I_Locust_Jar_I_Launch_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'XAZ1' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Zuljin_I_Locust_Jar_I_Launch_Actions takes nothing returns nothing
    set udg_Zuljin_Caster = GetTriggerUnit()
endfunction

//===========================================================================
function InitTrig_Zuljin_I_Locust_Jar_I_Launch takes nothing returns nothing
    set gg_trg_Zuljin_I_Locust_Jar_I_Launch = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Zuljin_I_Locust_Jar_I_Launch, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Zuljin_I_Locust_Jar_I_Launch, Condition( function Trig_Zuljin_I_Locust_Jar_I_Launch_Conditions ) )
    call TriggerAddAction( gg_trg_Zuljin_I_Locust_Jar_I_Launch, function Trig_Zuljin_I_Locust_Jar_I_Launch_Actions )
endfunction

//===========================================================================
// Trigger: Zuljin I Locust Jar I Land
//
// Conditions
// (Unit-type of (Triggering unit)) Equal to Dummy (Zul'jin)
//===========================================================================
function Trig_Zuljin_I_Locust_Jar_I_Land_Conditions takes nothing returns boolean
    if ( not ( IsUnitType(GetEnteringUnit(), UNIT_TYPE_SUMMONED) == true ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) == 'u601' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Zuljin_I_Locust_Jar_I_Land_Actions takes nothing returns nothing
    // Sound: Ability_LocustJar
    //  
    set udg_Zuljin_Dummy_Q = GetEnteringUnit()
    call PlaySoundOnUnitBJ( gg_snd_Ability_LocustJar, 100, udg_Zuljin_Dummy_Q )
    // Ability: Locust Jar (Zul'jin - Summon)
    call UnitAddAbilityBJ( 'XAZ5', udg_Zuljin_Dummy_Q )
    call SetUnitAbilityLevelSwapped( 'XAZ5', udg_Zuljin_Dummy_Q, GetUnitAbilityLevelSwapped('XAZ1', udg_Zuljin_Caster) )
    call IssueImmediateOrderBJ( udg_Zuljin_Dummy_Q, "locustswarm" )
endfunction

//===========================================================================
function InitTrig_Zuljin_I_Locust_Jar_I_Land takes nothing returns nothing
    set gg_trg_Zuljin_I_Locust_Jar_I_Land = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Zuljin_I_Locust_Jar_I_Land, GetPlayableMapRect() )
    call TriggerAddCondition( gg_trg_Zuljin_I_Locust_Jar_I_Land, Condition( function Trig_Zuljin_I_Locust_Jar_I_Land_Conditions ) )
    call TriggerAddAction( gg_trg_Zuljin_I_Locust_Jar_I_Land, function Trig_Zuljin_I_Locust_Jar_I_Land_Actions )
endfunction

//===========================================================================
// Trigger: Zuljin I Locust Jar I Mana
//
// Conditions
// (Unit-type of (Attacking unit)) Equal to Locust (Zul'jin)
//===========================================================================
function Trig_Zuljin_I_Locust_Jar_I_Mana_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetAttacker()) == 'u0Z1' ) ) then
        return false
    endif
    if ( not ( IsUnitAliveBJ(udg_Zuljin_Caster) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Zuljin_I_Locust_Jar_I_Mana_Actions takes nothing returns nothing
    call SetUnitManaBJ( udg_Zuljin_Caster, ( GetUnitStateSwap(UNIT_STATE_MANA, udg_Zuljin_Caster) + GetRandomReal(1.00, 2.00) ) )
endfunction

//===========================================================================
function InitTrig_Zuljin_I_Locust_Jar_I_Mana takes nothing returns nothing
    set gg_trg_Zuljin_I_Locust_Jar_I_Mana = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Zuljin_I_Locust_Jar_I_Mana, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Zuljin_I_Locust_Jar_I_Mana, Condition( function Trig_Zuljin_I_Locust_Jar_I_Mana_Conditions ) )
    call TriggerAddAction( gg_trg_Zuljin_I_Locust_Jar_I_Mana, function Trig_Zuljin_I_Locust_Jar_I_Mana_Actions )
endfunction

//===========================================================================
// Trigger: Zuljin I TazDingo
//===========================================================================
function Trig_Zuljin_I_TazDingo_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A02I' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Zuljin_I_TazDingo_Actions takes nothing returns nothing
    call PlaySoundOnUnitBJ( gg_snd_Ability_Tazdingo, 100.00, GetSpellAbilityUnit() )
endfunction

//===========================================================================
function InitTrig_Zuljin_I_TazDingo takes nothing returns nothing
    set gg_trg_Zuljin_I_TazDingo = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Zuljin_I_TazDingo, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Zuljin_I_TazDingo, Condition( function Trig_Zuljin_I_TazDingo_Conditions ) )
    call TriggerAddAction( gg_trg_Zuljin_I_TazDingo, function Trig_Zuljin_I_TazDingo_Actions )
endfunction

//===========================================================================
// Trigger: Tharbek I Whiplash
//===========================================================================
function Trig_Tharbek_I_Whiplash_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'AT3O' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Tharbek_I_Whiplash_Actions takes nothing returns nothing
    // //
    // Dummy (Spells)
    // //
    // Ability: Whiplash Buff
    // //
    // //
    call IssueImmediateOrderById( udg_Tharbek_Dummy_E, 852285 )
    // //
    // //
    // Ability: Whiplash DeBuff
    // //
    // //
    call IssueImmediateOrderById( udg_Tharbek_Dummy_E, 852285 )
    // //
    //  
    call RemoveLocation (udg_Tharbek_TempPoint_E)
endfunction

//===========================================================================
function InitTrig_Tharbek_I_Whiplash takes nothing returns nothing
    set gg_trg_Tharbek_I_Whiplash = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Tharbek_I_Whiplash, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Tharbek_I_Whiplash, Condition( function Trig_Tharbek_I_Whiplash_Conditions ) )
    call TriggerAddAction( gg_trg_Tharbek_I_Whiplash, function Trig_Tharbek_I_Whiplash_Actions )
endfunction

//===========================================================================
// Trigger: Tharbek I Intimidating Shout
//===========================================================================
function Trig_Tharbek_I_Intimidating_Shout_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'AT2O' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Tharbek_I_Intimidating_Shout_Actions takes nothing returns nothing
    // Dummy (Spells)
    // Ability: Intimidating Shout (Dummy)
    //  
    call RemoveLocation (udg_Tharbek_TempPoint_R)
endfunction

//===========================================================================
function InitTrig_Tharbek_I_Intimidating_Shout takes nothing returns nothing
    set gg_trg_Tharbek_I_Intimidating_Shout = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Tharbek_I_Intimidating_Shout, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Tharbek_I_Intimidating_Shout, Condition( function Trig_Tharbek_I_Intimidating_Shout_Conditions ) )
    call TriggerAddAction( gg_trg_Tharbek_I_Intimidating_Shout, function Trig_Tharbek_I_Intimidating_Shout_Actions )
endfunction

//===========================================================================
// Trigger: Mid
//===========================================================================
function Trig_Mid_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call ConditionalTriggerExecute( gg_trg_SettlementsTimerDestroy )
endfunction

//===========================================================================
function InitTrig_Mid takes nothing returns nothing
    set gg_trg_Mid = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Mid, Player(0), "Mid", true )
    call TriggerAddAction( gg_trg_Mid, function Trig_Mid_Actions )
endfunction

//===========================================================================
// Trigger: Outro
//===========================================================================
function Trig_Outro_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call ConditionalTriggerExecute( gg_trg_SurviveTimerDestroy )
endfunction

//===========================================================================
function InitTrig_Outro takes nothing returns nothing
    set gg_trg_Outro = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Outro, Player(0), "Outro", true )
    call TriggerAddAction( gg_trg_Outro, function Trig_Outro_Actions )
endfunction

//===========================================================================
// Trigger: HiddenUnitAssault
//===========================================================================
function Trig_HiddenUnitAssault_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call ConditionalTriggerExecute( gg_trg_HiddenAssault )
endfunction

//===========================================================================
function InitTrig_HiddenUnitAssault takes nothing returns nothing
    set gg_trg_HiddenUnitAssault = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_HiddenUnitAssault, Player(0), "hidden", true )
    call TriggerAddAction( gg_trg_HiddenUnitAssault, function Trig_HiddenUnitAssault_Actions )
endfunction

//===========================================================================
// Trigger: KillUnit
//===========================================================================
function Trig_KillUnit_Func001A takes nothing returns nothing
    call KillUnit( GetEnumUnit() )
endfunction

function Trig_KillUnit_Actions takes nothing returns nothing
    call ForGroupBJ( GetUnitsSelectedAll(Player(0)), function Trig_KillUnit_Func001A )
endfunction

//===========================================================================
function InitTrig_KillUnit takes nothing returns nothing
    set gg_trg_KillUnit = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_KillUnit, Player(0), "KU", true )
    call TriggerAddAction( gg_trg_KillUnit, function Trig_KillUnit_Actions )
endfunction

//===========================================================================
// Trigger: Failed
//===========================================================================
function Trig_Failed_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call ConditionalTriggerExecute( gg_trg_Survive_Failed_Q )
endfunction

//===========================================================================
function InitTrig_Failed takes nothing returns nothing
    set gg_trg_Failed = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Failed, Player(0), "Failed", true )
    call TriggerAddAction( gg_trg_Failed, function Trig_Failed_Actions )
endfunction

//===========================================================================
// Trigger: PeonWeightOn
//
// Peon is lifting resource, he should be slowed down
//===========================================================================
function Trig_PeonWeightOn_Func001C takes nothing returns boolean
    if ( ( IsUnitType(GetOrderedUnit(), UNIT_TYPE_PEON) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_PeonWeightOn_Conditions takes nothing returns boolean
    if ( not Trig_PeonWeightOn_Func001C() ) then
        return false
    endif
    if ( not ( UnitHasBuffBJ(GetOrderedUnit(), 'B611') == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_PeonWeightOn_Actions takes nothing returns nothing
    if ( (GetIssuedOrderId() == 852017) ) then
    call UnitAddAbilityBJ( 'A62Y', GetOrderedUnit() )
    endif
endfunction

//===========================================================================
function InitTrig_PeonWeightOn takes nothing returns nothing
    set gg_trg_PeonWeightOn = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_PeonWeightOn, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_PeonWeightOn, EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_PeonWeightOn, EVENT_PLAYER_UNIT_ISSUED_ORDER )
    call TriggerAddCondition( gg_trg_PeonWeightOn, Condition( function Trig_PeonWeightOn_Conditions ) )
    call TriggerAddAction( gg_trg_PeonWeightOn, function Trig_PeonWeightOn_Actions )
endfunction

//===========================================================================
// Trigger: PeonWeightOff
//
// Peon is lifting resource, he should be slowed down
//===========================================================================
function Trig_PeonWeightOff_Func004C takes nothing returns boolean
    if ( ( IsUnitType(GetOrderedUnit(), UNIT_TYPE_PEON) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_PeonWeightOff_Conditions takes nothing returns boolean
    if ( not Trig_PeonWeightOff_Func004C() ) then
        return false
    endif
    if ( not ( UnitHasBuffBJ(GetOrderedUnit(), 'B611') == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_PeonWeightOff_Actions takes nothing returns nothing
    if ( (GetIssuedOrderId() == 852018) ) then
    call UnitRemoveAbilityBJ( 'A62Y', GetOrderedUnit() )
    call UnitRemoveBuffBJ( 'B611', GetOrderedUnit() )
    endif
endfunction

//===========================================================================
function InitTrig_PeonWeightOff takes nothing returns nothing
    set gg_trg_PeonWeightOff = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_PeonWeightOff, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_PeonWeightOff, EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_PeonWeightOff, EVENT_PLAYER_UNIT_ISSUED_ORDER )
    call TriggerAddCondition( gg_trg_PeonWeightOff, Condition( function Trig_PeonWeightOff_Conditions ) )
    call TriggerAddAction( gg_trg_PeonWeightOff, function Trig_PeonWeightOff_Actions )
endfunction

//===========================================================================
// Trigger: PeonSwap
//===========================================================================
function Trig_PeonSwap_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A610' ) ) then
        return false
    endif
    return true
endfunction

function Trig_PeonSwap_Func003Func001001 takes nothing returns boolean
    return ( GetUnitTypeId(GetSpellAbilityUnit()) == 'n60D' )
endfunction

function Trig_PeonSwap_Func003C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetSpellAbilityUnit()) == 'o60D' ) ) then
        return false
    endif
    return true
endfunction

function Trig_PeonSwap_Actions takes nothing returns nothing
    if ( Trig_PeonSwap_Func003C() ) then
        call ReplaceUnitBJ( GetSpellAbilityUnit(), 'n60D', bj_UNIT_STATE_METHOD_RELATIVE )
        call SelectUnitForPlayerSingle( GetLastReplacedUnitBJ(), Player(0) )
    else
        if ( Trig_PeonSwap_Func003Func001001() ) then
            call ReplaceUnitBJ( GetSpellAbilityUnit(), 'o60D', bj_UNIT_STATE_METHOD_RELATIVE )
        else
            call DoNothing(  )
        endif
        call SelectUnitForPlayerSingle( GetLastReplacedUnitBJ(), Player(0) )
    endif
endfunction

//===========================================================================
function InitTrig_PeonSwap takes nothing returns nothing
    set gg_trg_PeonSwap = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_PeonSwap, EVENT_PLAYER_UNIT_SPELL_CAST )
    call TriggerAddCondition( gg_trg_PeonSwap, Condition( function Trig_PeonSwap_Conditions ) )
    call TriggerAddAction( gg_trg_PeonSwap, function Trig_PeonSwap_Actions )
endfunction

//===========================================================================
// Trigger: Creep Multiplier
//===========================================================================
function Trig_Creep_Multiplier_Func003C takes nothing returns boolean
    if ( not ( GetGameDifficulty() == MAP_DIFFICULTY_EASY ) ) then
        return false
    endif
    return true
endfunction

function Trig_Creep_Multiplier_Func004C takes nothing returns boolean
    if ( not ( GetGameDifficulty() == MAP_DIFFICULTY_NORMAL ) ) then
        return false
    endif
    return true
endfunction

function Trig_Creep_Multiplier_Func005C takes nothing returns boolean
    if ( not ( GetGameDifficulty() == MAP_DIFFICULTY_HARD ) ) then
        return false
    endif
    return true
endfunction

function Trig_Creep_Multiplier_Func007A takes nothing returns nothing
    call BlzSetUnitMaxHP( GetEnumUnit(), ( BlzGetUnitMaxHP(GetEnumUnit()) + ( GetUnitLevel(GetEnumUnit()) * udg_CreepHP ) ) )
    call SetUnitLifePercentBJ( GetEnumUnit(), 100 )
    call BlzSetUnitWeaponIntegerFieldBJ( GetEnumUnit(), UNIT_WEAPON_IF_ATTACK_DAMAGE_BASE, 0, ( BlzGetUnitBaseDamage(GetEnumUnit(), 0) + ( GetUnitLevel(GetEnumUnit()) * udg_CreepDMG ) ) )
    call BlzSetUnitWeaponIntegerFieldBJ( GetEnumUnit(), UNIT_WEAPON_IF_ATTACK_DAMAGE_BASE, 1, ( BlzGetUnitBaseDamage(GetEnumUnit(), 1) + ( GetUnitLevel(GetEnumUnit()) * udg_CreepDMG ) ) )
endfunction

function Trig_Creep_Multiplier_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    if ( Trig_Creep_Multiplier_Func003C() ) then
        set udg_CreepHP = 50
        set udg_CreepDMG = 2
    else
    endif
    if ( Trig_Creep_Multiplier_Func004C() ) then
        set udg_CreepHP = 100
        set udg_CreepDMG = 4
    else
    endif
    if ( Trig_Creep_Multiplier_Func005C() ) then
        set udg_CreepHP = 150
        set udg_CreepDMG = 6
    else
    endif
    set bj_wantDestroyGroup = true
    call ForGroupBJ( GetUnitsOfPlayerAll(Player(PLAYER_NEUTRAL_AGGRESSIVE)), function Trig_Creep_Multiplier_Func007A )
endfunction

//===========================================================================
function InitTrig_Creep_Multiplier takes nothing returns nothing
    set gg_trg_Creep_Multiplier = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Creep_Multiplier, function Trig_Creep_Multiplier_Actions )
endfunction

//===========================================================================
// Trigger: Initialization
//===========================================================================
function Trig_Initialization_Func005002 takes nothing returns nothing
    call ShowUnitHide( GetEnumUnit() )
endfunction

function Trig_Initialization_Func006002 takes nothing returns nothing
    call RemoveUnit( GetEnumUnit() )
endfunction

function Trig_Initialization_Actions takes nothing returns nothing
    call SetTimeOfDay( 12.00 )
    call UseTimeOfDayBJ( false )
    call SetSkyModel( "Environment\\Sky\\LordaeronSummerSky\\LordaeronSummerSky.mdl" )
    call ForGroupBJ( GetUnitsOfPlayerAndTypeId(Player(PLAYER_NEUTRAL_PASSIVE), 'e602'), function Trig_Initialization_Func005002 )
    call ForGroupBJ( GetUnitsOfPlayerAll(Player(23)), function Trig_Initialization_Func006002 )
    call SetDoodadAnimationRectBJ( "decay", 'NOfp', gg_rct_CampfireControl )
    call ClearMapMusicBJ(  )
    call StopMusicBJ( false )
    call ConditionalTriggerExecute( gg_trg_SetupUnits )
    call ConditionalTriggerExecute( gg_trg_SetupQuests )
    call ConditionalTriggerExecute( gg_trg_SetupVO )
    call ConditionalTriggerExecute( gg_trg_SetupPlayers )
    call ConditionalTriggerExecute( gg_trg_SetupDestructibles )
    call ConditionalTriggerExecute( gg_trg_HiddenPing02 )
    call ConditionalTriggerExecute( gg_trg_FaceAnimLoader )
    call ConditionalTriggerExecute( gg_trg_IntroCinQ )
endfunction

//===========================================================================
function InitTrig_Initialization takes nothing returns nothing
    set gg_trg_Initialization = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Initialization, function Trig_Initialization_Actions )
endfunction

//===========================================================================
// Trigger: FaceAnimLoader
//===========================================================================
function Trig_FaceAnimLoader_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // ////////////////
    call LoadFacialAnimationDoomhammer01()
    call LoadFacialAnimationDoomhammer02()
    call LoadFacialAnimationDoomhammer03()
    call LoadFacialAnimationDoomhammer04()
    call LoadFacialAnimationDoomhammer05()
    call LoadFacialAnimationDoomhammer06()
    call LoadFacialAnimationDoomhammer07()
    call LoadFacialAnimationDoomhammer08()
    call LoadFacialAnimationDoomhammer09()
    call LoadFacialAnimationDoomhammer10()
    call LoadFacialAnimationDoomhammer11()
    // ////////////////
    // ////////////////
    call LoadFacialAnimationTroll01()
    call LoadFacialAnimationTroll02()
    call LoadFacialAnimationTroll03()
    // ////////////////
    // ////////////////
    call LoadFacialAnimationEitrig01()
    call LoadFacialAnimationEitrig02()
    call LoadFacialAnimationEitrig03()
    call LoadFacialAnimationEitrig04()
    call LoadFacialAnimationEitrig05()
    call LoadFacialAnimationEitrig06()
    call LoadFacialAnimationEitrig07()
    // ////////////////
    // ////////////////
    call LoadFacialAnimationElf01()
    // ////////////////
    // ////////////////
    call LoadFacialAnimationFalstad01()
    // ////////////////
    // ////////////////
    call LoadFacialAnimationGarona01()
    call LoadFacialAnimationGarona02()
    call LoadFacialAnimationGarona03()
    call LoadFacialAnimationGarona04()
    call LoadFacialAnimationGarona05()
    call LoadFacialAnimationGarona06()
    call LoadFacialAnimationGarona07()
    // ////////////////
    // ////////////////
    call LoadFacialAnimationGoblin01()
    call LoadFacialAnimationGoblin02()
    // ////////////////
    // ////////////////
    call LoadFacialAnimationKurdran01()
    call LoadFacialAnimationKurdran02()
    call LoadFacialAnimationKurdran03()
    call LoadFacialAnimationKurdran04()
    // ////////////////
    // ////////////////
    call LoadFacialAnimationLothar01()
    call LoadFacialAnimationLothar02()
    call LoadFacialAnimationLothar03()
    call LoadFacialAnimationLothar04()
    call LoadFacialAnimationLothar05()
    // ////////////////
    // ////////////////
    call LoadFacialAnimationRend01()
    call LoadFacialAnimationRend02()
    call LoadFacialAnimationRend03()
    call LoadFacialAnimationRend04()
    call LoadFacialAnimationRend05()
    // ////////////////
    // ////////////////
    call LoadFacialAnimationRend05()
    // ////////////////
    // ////////////////
    call LoadFacialAnimationTharbek01()
    call LoadFacialAnimationTharbek02()
    // ////////////////
    // ////////////////
    call LoadFacialAnimationDwarf01()
    call LoadFacialAnimationDwarf02()
    // ////////////////
    // ////////////////
    call LoadFacialAnimationZuljin01()
    call LoadFacialAnimationZuljin02()
    call LoadFacialAnimationZuljin03()
    call LoadFacialAnimationZuljin04()
    call LoadFacialAnimationZuljin05()
    call LoadFacialAnimationZuljin06()
    call LoadFacialAnimationZuljin07()
    call LoadFacialAnimationZuljin08()
    // ////////////////
    // ////////////////
    // ////////////////
    // ////////////////
    // ////////////////
    // ////////////////
    // ////////////////
endfunction

//===========================================================================
function InitTrig_FaceAnimLoader takes nothing returns nothing
    set gg_trg_FaceAnimLoader = CreateTrigger(  )
    call TriggerAddAction( gg_trg_FaceAnimLoader, function Trig_FaceAnimLoader_Actions )
endfunction

//===========================================================================
// Trigger: InitMusic
//===========================================================================
function Trig_InitMusic_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_Playlist = "Warcraft2\\Music\\OrcTheme1.mp3;Warcraft2\\Music\\OrcTheme2.mp3;Warcraft2\\Music\\OrcTheme3.mp3;Warcraft2\\Music\\OrcTheme4.mp3;Warcraft2\\Music\\OrcTheme5.mp3"
    call SetMapMusic(udg_Playlist, true, 1)
endfunction

//===========================================================================
function InitTrig_InitMusic takes nothing returns nothing
    set gg_trg_InitMusic = CreateTrigger(  )
    call TriggerAddAction( gg_trg_InitMusic, function Trig_InitMusic_Actions )
endfunction

//===========================================================================
// Trigger: SetupUnits
//===========================================================================
function Trig_SetupUnits_Func043A takes nothing returns nothing
    call SetUnitBlendTimeBJ( GetEnumUnit(), 0.25 )
    call AddUnitAnimationPropertiesBJ( true, "cinematic", GetEnumUnit() )
    call BlzSetUnitRealFieldBJ( GetEnumUnit(), UNIT_RF_ANIMATION_WALK_SPEED, 100.00 )
    call SetUnitMoveSpeed( GetEnumUnit(), 100.00 )
endfunction

function Trig_SetupUnits_Func085A takes nothing returns nothing
    call ShowUnitHide( GetEnumUnit() )
endfunction

function Trig_SetupUnits_Func086A takes nothing returns nothing
    call SetUnitAnimationWithRarity( GetEnumUnit(), "stand", RARITY_FREQUENT )
endfunction

function Trig_SetupUnits_Func091A takes nothing returns nothing
    call PauseUnitBJ( true, GetEnumUnit() )
    call ShowUnitHide( GetEnumUnit() )
endfunction

function Trig_SetupUnits_Func105001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nglm' )
endfunction

function Trig_SetupUnits_Func105A takes nothing returns nothing
    call SetUnitOwner( GetEnumUnit(), Player(2), true )
    call SetUnitInvulnerable( GetEnumUnit(), true )
    call UnitRemoveAbilityBJ( 'Amnx', GetEnumUnit() )
    call UnitRemoveAbilityBJ( 'Amin', GetEnumUnit() )
    call PauseUnitBJ( true, GetEnumUnit() )
    call ShowUnitHide( GetEnumUnit() )
endfunction

function Trig_SetupUnits_Func107A takes nothing returns nothing
    call UnitAddAbility(GetEnumUnit(), 'Aloc' )
endfunction

function Trig_SetupUnits_Actions takes nothing returns nothing
    // Variables
    call ConditionalTriggerExecute( gg_trg_LoadHeroes )
    set udg_Hero_DalRend = gg_unit_O617_0011
    set udg_Hero_Tharbek = gg_unit_o608_0008
    set udg_Hero_Utok = gg_unit_o605_0010
    set udg_Hero_Eitrigg = gg_unit_O61P_0009
    set udg_Hero_Garona = gg_unit_E602_0012
    set udg_Hero_Anduin = gg_unit_H61J_0057
    set udg_Hero_Kurdran = gg_unit_H62H_0260
    set udg_IntroGrunt01 = gg_unit_o619_0425
    set udg_IntroGrunt02 = gg_unit_o619_0424
    set udg_IntroPeon01 = gg_unit_o60D_0423
    set udg_IntroPeon02 = gg_unit_o60D_0117
    set udg_IntroPig = gg_unit_npig_0439
    set udg_Cage_Garona = gg_dest_B004_0095
    set udg_IntroTroll01 = gg_unit_o60O_0446
    set udg_IntroTroll02 = gg_unit_o60O_0435
    set udg_TrollPriest01 = gg_unit_nfsh_0453
    set udg_TrollPriest02 = gg_unit_nfsh_0454
    set udg_TrollPriest03 = gg_unit_nfsh_0455
    set udg_TrollPriest04 = gg_unit_nfsh_0456
    set udg_TrollPriest05 = gg_unit_nfsh_0457
    set udg_AllianceGuard01 = gg_unit_h60K_0310
    set udg_AllianceGuard02 = gg_unit_h60K_0311
    set udg_AllianceGuard03 = gg_unit_hcth_0237
    set udg_AllianceGuard04 = gg_unit_h60B_0268
    set udg_AllianceGuard05 = gg_unit_h60B_0270
    set udg_AllianceGuard06 = gg_unit_h60K_0262
    set udg_AllianceGuard07 = gg_unit_h60K_0269
    set udg_AllianceGuard08 = gg_unit_h60K_0267
    set udg_AllianceGuard09 = gg_unit_h60K_0029
    set udg_TrollCircle01 = gg_unit_ncop_0488
    set udg_TrollCircle02 = gg_unit_ncop_0487
    set udg_TrollCircle03 = gg_unit_ncop_0486
    set udg_TrollCircle04 = gg_unit_ncop_0272
    set udg_TrollCircle05 = gg_unit_ncop_0489
    call BlzSetUnitName( gg_unit_h61I_0107, "Wildhammer Chronicler" )
    call UnitAddAbilityBJ( 'Awan', gg_unit_nspr_0105 )
    // Groups
    set udg_Intro_Units = GetUnitsInRectAll(gg_rct_IntroUnits)
    set udg_Mid_Units = GetUnitsInRectAll(gg_rct_MidAlliance)
    // Animations
    call ForGroupBJ( udg_Intro_Units, function Trig_SetupUnits_Func043A )
    call SetUnitBlendTimeBJ( udg_Hero_DalRend, 0.35 )
    // Hero Levels
    call SetHeroLevelBJ( udg_Hero_Anduin, 10, false )
    call SetHeroLevelBJ( udg_Hero_Kurdran, 10, false )
    // Hero Skills
    call SelectHeroSkill( udg_Hero_Anduin, 'A62M' )
    call SelectHeroSkill( udg_Hero_Anduin, 'A62M' )
    call SelectHeroSkill( udg_Hero_Anduin, 'A62M' )
    call SelectHeroSkill( udg_Hero_Anduin, 'A621' )
    call SelectHeroSkill( udg_Hero_Anduin, 'A621' )
    call SelectHeroSkill( udg_Hero_Anduin, 'A621' )
    call SelectHeroSkill( udg_Hero_Anduin, 'A620' )
    call SelectHeroSkill( udg_Hero_Anduin, 'A620' )
    call SelectHeroSkill( udg_Hero_Anduin, 'A620' )
    call SelectHeroSkill( udg_Hero_Kurdran, 'AHtc' )
    call SelectHeroSkill( udg_Hero_Kurdran, 'AHtc' )
    call SelectHeroSkill( udg_Hero_Kurdran, 'AHtc' )
    call SelectHeroSkill( udg_Hero_Kurdran, 'AHtb' )
    call SelectHeroSkill( udg_Hero_Kurdran, 'AHtb' )
    call SelectHeroSkill( udg_Hero_Kurdran, 'AHtb' )
    call SelectHeroSkill( udg_Hero_Kurdran, 'AHbh' )
    call SelectHeroSkill( udg_Hero_Kurdran, 'AHbh' )
    call SelectHeroSkill( udg_Hero_Kurdran, 'AHbh' )
    call SuspendHeroXPBJ( false, udg_Hero_Anduin )
    call SuspendHeroXPBJ( false, udg_Hero_Kurdran )
    call SuspendHeroXPBJ( false, udg_Hero_Garona )
    call SuspendHeroXPBJ( false, udg_Hero_Eitrigg )
    // Placement
    call SetUnitPositionLocFacingBJ( udg_Hero_DalRend, GetRectCenter(gg_rct_IntroDR01), 311.39 )
    call SetUnitPositionLocFacingBJ( udg_Hero_Doomhammer, GetRectCenter(gg_rct_IntroDH01), 295.82 )
    call SetUnitPositionLocFacingBJ( udg_Hero_Eitrigg, GetRectCenter(gg_rct_IntroEitrigg01), 269.99 )
    call SetUnitPositionLocFacingBJ( udg_Hero_Tharbek, GetRectCenter(gg_rct_IntroTharbek00), 151.09 )
    call SetUnitPositionLocFacingBJ( udg_Hero_Utok, GetRectCenter(gg_rct_IntroUtok01), 314.16 )
    call SetUnitPositionLocFacingBJ( udg_Hero_Zuljin, GetRectCenter(gg_rct_IntroZuljin01), 313.75 )
    call SetUnitPositionLocFacingBJ( udg_IntroGrunt01, GetRectCenter(gg_rct_IntroDRGuardA01), 298.60 )
    call SetUnitPositionLocFacingBJ( udg_IntroGrunt02, GetRectCenter(gg_rct_IntroDRGuardB01), 297.34 )
    call SetUnitPositionLocFacingBJ( udg_IntroPeon01, GetRectCenter(gg_rct_IntroPeon01), 216.82 )
    call SetUnitPositionLocFacingBJ( udg_IntroPeon02, GetRectCenter(gg_rct_IntroPeon02), 130.68 )
    call SetUnitPositionLocFacingBJ( udg_IntroPig, GetRectCenter(gg_rct_IntroPig01), 296.45 )
    call SetUnitPositionLocFacingBJ( udg_IntroTroll01, GetRectCenter(gg_rct_IntroTrollA00), 76.55 )
    call SetUnitPositionLocFacingBJ( udg_IntroTroll02, GetRectCenter(gg_rct_IntroTrollB00), 107.34 )
    call ForGroupBJ( udg_Intro_Units, function Trig_SetupUnits_Func085A )
    call ForGroupBJ( GetUnitsOfPlayerAll(Player(0)), function Trig_SetupUnits_Func086A )
    call ShowUnitShow( udg_Hero_Tharbek )
    call ShowUnitShow( udg_Hero_Eitrigg )
    call ShowUnitShow( udg_IntroTroll01 )
    call ShowUnitShow( udg_IntroTroll02 )
    call ForGroupBJ( udg_Mid_Units, function Trig_SetupUnits_Func091A )
    // Orders
    call IssueTargetOrderBJ( gg_unit_o60D_0181, "harvest", gg_unit_ngol_0122 )
    call IssueTargetOrderBJ( gg_unit_o60D_0422, "harvest", gg_unit_ngol_0122 )
    call IssueTargetDestructableOrder( gg_unit_o60D_0180, "harvest", gg_dest_VTlt_0196 )
    // Special
    call UnitRemoveAbilityBJ( 'Awan', udg_IntroPig )
    call SetDestructableInvulnerableBJ( udg_Cage_Garona, true )
    call SetUnitInvulnerable( udg_Hero_Garona, true )
    call PauseUnitBJ( true, gg_unit_hbot_0115 )
    call PauseUnitBJ( true, gg_unit_hbot_0114 )
    // Hide Goblins
    call ShowUnitHide( gg_unit_ngsp_0234 )
    call ShowUnitHide( gg_unit_ngsp_0232 )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_BarrelsWIthExposives, Condition(function Trig_SetupUnits_Func105001002)), function Trig_SetupUnits_Func105A )
    // VisibilityControllers
    call ForGroupBJ( GetUnitsOfTypeIdAll('h006'), function Trig_SetupUnits_Func107A )
endfunction

//===========================================================================
function InitTrig_SetupUnits takes nothing returns nothing
    set gg_trg_SetupUnits = CreateTrigger(  )
    call DisableTrigger( gg_trg_SetupUnits )
    call TriggerAddAction( gg_trg_SetupUnits, function Trig_SetupUnits_Actions )
endfunction

//===========================================================================
// Trigger: LoadHeroes
//
// 
//===========================================================================
function Trig_LoadHeroes_Func005C takes nothing returns boolean
    if ( not ( GetStoredBooleanBJ("Completed", "WC2Orc07", udg_Cache) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_LoadHeroes_Func007C takes nothing returns boolean
    if ( not ( GetStoredBooleanBJ("Completed", "WC2Orc04", udg_Cache) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_LoadHeroes_Actions takes nothing returns nothing
    // Cache
    call InitGameCacheBJ( "WC2Horde.w3v" )
    set udg_Cache = GetLastCreatedGameCacheBJ()
    // Doomhammer
    if ( Trig_LoadHeroes_Func005C() ) then
        call RemoveUnit( gg_unit_O602_0014 )
        call RestoreUnitLocFacingAngleBJ( "Doomhammer", "WC2Orc07", udg_Cache, Player(0), GetRectCenter(gg_rct_LoadDoomhammer), 0 )
        set udg_Hero_Doomhammer = GetLastRestoredUnitBJ()
    else
        set udg_Hero_Doomhammer = gg_unit_O602_0014
    endif
    // Zuljin
    if ( Trig_LoadHeroes_Func007C() ) then
        call RemoveUnit( gg_unit_O60B_0013 )
        call RestoreUnitLocFacingAngleBJ( "ZulJeen", "WC2Orc04", udg_Cache, Player(0), GetRectCenter(gg_rct_LoadZuljin), 0 )
        set udg_Hero_Zuljin = GetLastRestoredUnitBJ()
    else
        set udg_Hero_Zuljin = gg_unit_O60B_0013
    endif
endfunction

//===========================================================================
function InitTrig_LoadHeroes takes nothing returns nothing
    set gg_trg_LoadHeroes = CreateTrigger(  )
    call TriggerAddAction( gg_trg_LoadHeroes, function Trig_LoadHeroes_Actions )
endfunction

//===========================================================================
// Trigger: SetupQuests
//===========================================================================
function Trig_SetupQuests_Actions takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_Quests_Create )
endfunction

//===========================================================================
function InitTrig_SetupQuests takes nothing returns nothing
    set gg_trg_SetupQuests = CreateTrigger(  )
    call DisableTrigger( gg_trg_SetupQuests )
    call TriggerAddAction( gg_trg_SetupQuests, function Trig_SetupQuests_Actions )
endfunction

//===========================================================================
// Trigger: SetupVO
//===========================================================================
function Trig_SetupVO_Actions takes nothing returns nothing
    call TriggerExecute( gg_trg_TrollResetSounds )
endfunction

//===========================================================================
function InitTrig_SetupVO takes nothing returns nothing
    set gg_trg_SetupVO = CreateTrigger(  )
    call DisableTrigger( gg_trg_SetupVO )
    call TriggerAddAction( gg_trg_SetupVO, function Trig_SetupVO_Actions )
endfunction

//===========================================================================
// Trigger: SetupPlayers
//===========================================================================
function Trig_SetupPlayers_Func075A takes nothing returns nothing
    call SetPlayerAllianceBJ( GetEnumPlayer(), ALLIANCE_PASSIVE, true, udg_PlayerMidHeroesAlliance )
endfunction

function Trig_SetupPlayers_Func076A takes nothing returns nothing
    call SetPlayerAllianceBJ( GetEnumPlayer(), ALLIANCE_PASSIVE, true, udg_PlayerMidHeroesOrc )
endfunction

function Trig_SetupPlayers_Func077A takes nothing returns nothing
    call SetPlayerAllianceBJ( GetEnumPlayer(), ALLIANCE_PASSIVE, true, udg_PlayerMidKurdran )
endfunction

function Trig_SetupPlayers_Actions takes nothing returns nothing
    // Player
    set udg_Player01 = Player(0)
    call SetPlayerName( Player(0), "TRIGSTR_2943" )
    // Elves
    set udg_PlayerElves = Player(14)
    // Wildhammer
    set udg_PlayerWildBlue = Player(1)
    set udg_PlayerWildYellow = Player(4)
    set udg_PlayerWildMaroon = Player(12)
    set udg_PlayerWildSnow = Player(21)
    set udg_PlayerWildEmerald = Player(22)
    // Trolls
    set udg_PlayerTribeBrown = Player(11)
    set udg_PlayerTribeWarriors = Player(16)
    set udg_PlayerTribePeach = Player(17)
    set udg_PlayerTribeMint = Player(18)
    set udg_PlayerTribeLavender = Player(19)
    set udg_PlayerTribeCoal = Player(20)
    // NoL
    set udg_PlayerNoL = Player(9)
    // Special
    set udg_PlayerMidHeroesOrc = Player(5)
    set udg_PlayerMidHeroesAlliance = Player(6)
    set udg_PlayerMidKurdran = Player(13)
    // Score Screen
    call SetPlayerOnScoreScreenBJ( false, udg_PlayerTribeLavender )
    call SetPlayerOnScoreScreenBJ( false, udg_PlayerTribeMint )
    call SetPlayerOnScoreScreenBJ( false, udg_PlayerTribePeach )
    call SetPlayerOnScoreScreenBJ( false, udg_PlayerWildEmerald )
    call SetPlayerOnScoreScreenBJ( false, udg_PlayerWildSnow )
    call SetPlayerOnScoreScreenBJ( false, udg_PlayerWildYellow )
    call SetPlayerOnScoreScreenBJ( false, udg_PlayerMidHeroesOrc )
    call SetPlayerOnScoreScreenBJ( false, udg_PlayerMidHeroesAlliance )
    call SetPlayerOnScoreScreenBJ( false, udg_PlayerMidKurdran )
    // PLAYER 1
    call SetPlayerUnitAvailableBJ( 'o60T', false, udg_Player01 )
    call playerAddOil(Player(0), 1500)
    // PLAYER 3
    call SetPlayerAllianceStateBJ( udg_Player01, Player(2), bj_ALLIANCE_ALLIED_VISION )
    call SetPlayerAllianceStateBJ( Player(2), udg_Player01, bj_ALLIANCE_ALLIED_VISION )
    call SetPlayerOnScoreScreenBJ( false, Player(2) )
    // PLAYER 5
    call SetPlayerColorBJ( udg_PlayerWildYellow, PLAYER_COLOR_BLUE, true )
    // PLAYER 6
    call SetPlayerColorBJ( udg_PlayerMidHeroesOrc, ConvertPlayerColor(24), true )
    // PLAYER 7
    call SetPlayerColorBJ( udg_PlayerMidHeroesAlliance, ConvertPlayerColor(24), true )
    // PLAYER 10
    call SetPlayerTechResearchedSwap( 'Rhac', 3, Player(9) )
    // PLAYER 14
    // PLAYER 15
    call SetPlayerStateBJ( udg_PlayerElves, PLAYER_STATE_RESOURCE_LUMBER, 99999 )
    call SetPlayerStateBJ( udg_PlayerElves, PLAYER_STATE_RESOURCE_GOLD, 3000 )
    call SetPlayerTechResearchedSwap( 'R00G', 1, udg_PlayerElves )
    call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, true, udg_PlayerTribeBrown )
    call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, true, udg_PlayerTribeCoal )
    call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, true, udg_PlayerTribeLavender )
    call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, true, udg_PlayerTribeMint )
    call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, true, udg_PlayerTribePeach )
    // PLAYER 17
    call SetPlayerColorBJ( udg_PlayerTribeWarriors, ConvertPlayerColor(24), true )
    call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, true, udg_PlayerTribeWarriors )
    call SetPlayerAllianceBJ( Player(PLAYER_NEUTRAL_AGGRESSIVE), ALLIANCE_PASSIVE, true, udg_PlayerTribeWarriors )
    call SetPlayerAllianceBJ( udg_Player01, ALLIANCE_SHARED_VISION, true, udg_PlayerTribeWarriors )
    call SetPlayerAllianceBJ( udg_PlayerTribeWarriors, ALLIANCE_SHARED_VISION, true, udg_Player01 )
    // PLAYER 18
    call SetPlayerColorBJ( udg_PlayerTribePeach, PLAYER_COLOR_BROWN, true )
    // PLAYER 19
    call SetPlayerColorBJ( udg_PlayerTribeMint, PLAYER_COLOR_BROWN, true )
    // PLAYER 20
    call SetPlayerColorBJ( udg_PlayerTribeLavender, PLAYER_COLOR_COAL, true )
    // PLAYER 22
    call SetPlayerColorBJ( udg_PlayerWildSnow, PLAYER_COLOR_EMERALD, true )
    // ALL
    call ForForce( GetPlayersAll(), function Trig_SetupPlayers_Func075A )
    call ForForce( GetPlayersAll(), function Trig_SetupPlayers_Func076A )
    call ForForce( GetPlayersAll(), function Trig_SetupPlayers_Func077A )
    // NEUTRAL
    call SetPlayerAllianceStateBJ( udg_PlayerElves, Player(PLAYER_NEUTRAL_AGGRESSIVE), bj_ALLIANCE_NEUTRAL )
    call SetPlayerAllianceStateBJ( Player(PLAYER_NEUTRAL_AGGRESSIVE), udg_PlayerElves, bj_ALLIANCE_NEUTRAL )
    // Cinematic player for Zuljin quotes
    call SetPlayerColorBJ( Player(7), PLAYER_COLOR_CYAN, true )
endfunction

//===========================================================================
function InitTrig_SetupPlayers takes nothing returns nothing
    set gg_trg_SetupPlayers = CreateTrigger(  )
    call DisableTrigger( gg_trg_SetupPlayers )
    call TriggerAddAction( gg_trg_SetupPlayers, function Trig_SetupPlayers_Actions )
endfunction

//===========================================================================
// Trigger: SetupDestructibles
//===========================================================================
function Trig_SetupDestructibles_Func001Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'B603' ) ) then
        return false
    endif
    return true
endfunction

function Trig_SetupDestructibles_Func001A takes nothing returns nothing
    if ( Trig_SetupDestructibles_Func001Func001C() ) then
        call SetDestructableInvulnerableBJ( GetEnumDestructable(), true )
    else
    endif
endfunction

function Trig_SetupDestructibles_Func002Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'B00A' ) ) then
        return false
    endif
    return true
endfunction

function Trig_SetupDestructibles_Func002A takes nothing returns nothing
    if ( Trig_SetupDestructibles_Func002Func001C() ) then
        call SetDestructableInvulnerableBJ( GetEnumDestructable(), true )
        call ShowDestructableBJ( false, GetEnumDestructable() )
    else
    endif
endfunction

function Trig_SetupDestructibles_Func004Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'B00B' ) ) then
        return false
    endif
    return true
endfunction

function Trig_SetupDestructibles_Func004A takes nothing returns nothing
    if ( Trig_SetupDestructibles_Func004Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "death" )
    else
    endif
endfunction

function Trig_SetupDestructibles_Func010Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'B00C' ) ) then
        return false
    endif
    return true
endfunction

function Trig_SetupDestructibles_Func010A takes nothing returns nothing
    if ( Trig_SetupDestructibles_Func010Func001C() ) then
        call SetDestructableInvulnerableBJ( GetEnumDestructable(), true )
    else
    endif
endfunction

function Trig_SetupDestructibles_Actions takes nothing returns nothing
    call EnumDestructablesInRectAll( GetPlayableMapRect(), function Trig_SetupDestructibles_Func001A )
    call EnumDestructablesInRectAll( gg_rct_OutroRocksHidden, function Trig_SetupDestructibles_Func002A )
    // HideSnow
    call EnumDestructablesInRectAll( GetPlayableMapRect(), function Trig_SetupDestructibles_Func004A )
    // FailurePath
    call KillDestructable( gg_dest_OTip_3845 )
    call KillDestructable( gg_dest_OTip_3853 )
    call KillDestructable( gg_dest_OTip_3854 )
    // Hide Barrels
    call EnumDestructablesInRectAll( gg_rct_BarrelsWIthExposives, function Trig_SetupDestructibles_Func010A )
    call ShowDestructableBJ( false, gg_dest_B00C_6024 )
    call ShowDestructableBJ( false, gg_dest_B00C_6025 )
    call ShowDestructableBJ( false, gg_dest_B00C_6047 )
    call ShowDestructableBJ( false, gg_dest_B00C_5922 )
    call ShowDestructableBJ( false, gg_dest_B00C_5899 )
    call ShowDestructableBJ( false, gg_dest_B00C_0304 )
    call ShowDestructableBJ( false, gg_dest_B00C_0342 )
    call ShowDestructableBJ( false, gg_dest_B00C_5900 )
    // ///
    call ShowDestructableBJ( false, gg_dest_B00C_6113 )
    call ShowDestructableBJ( false, gg_dest_B00C_6116 )
    call ShowDestructableBJ( false, gg_dest_B00C_6121 )
    call ShowDestructableBJ( false, gg_dest_B00C_6124 )
    call ShowDestructableBJ( false, gg_dest_B00C_6122 )
    call ShowDestructableBJ( false, gg_dest_B00C_6125 )
    // ///
    call SetDoodadAnimationRectBJ( "stand", 'XOmr', gg_rct_WildhammerBase04GreenOpen )
endfunction

//===========================================================================
function InitTrig_SetupDestructibles takes nothing returns nothing
    set gg_trg_SetupDestructibles = CreateTrigger(  )
    call DisableTrigger( gg_trg_SetupDestructibles )
    call TriggerAddAction( gg_trg_SetupDestructibles, function Trig_SetupDestructibles_Actions )
endfunction

//===========================================================================
// Trigger: Neutral Smart Attack
//===========================================================================
function Trig_Neutral_Smart_Attack_Conditions takes nothing returns boolean
    if ( not ( GetIssuedOrderIdBJ() == String2OrderIdBJ("smart") ) ) then
        return false
    endif
    if ( not ( BlzIsUnitInvulnerable(GetOrderTargetUnit()) != true ) ) then
        return false
    endif
    if ( not ( BlzIsSelectionEnabled() == true ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetOrderTargetUnit()) == Player(PLAYER_NEUTRAL_PASSIVE) ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetOrderTargetUnit(), UNIT_TYPE_STRUCTURE) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Neutral_Smart_Attack_Actions takes nothing returns nothing
    local unit u = GetOrderTargetUnit()
    set u = GetOrderTargetUnit()
    set udg_Neutral_Smart_Order = IssueTargetOrder(GetTriggerUnit(), "attack", u)
endfunction

//===========================================================================
function InitTrig_Neutral_Smart_Attack takes nothing returns nothing
    set gg_trg_Neutral_Smart_Attack = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Neutral_Smart_Attack, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER )
    call TriggerAddCondition( gg_trg_Neutral_Smart_Attack, Condition( function Trig_Neutral_Smart_Attack_Conditions ) )
    call TriggerAddAction( gg_trg_Neutral_Smart_Attack, function Trig_Neutral_Smart_Attack_Actions )
endfunction

//===========================================================================
// Trigger: LevelCap
//===========================================================================
function Trig_LevelCap_Func001C takes nothing returns boolean
    if ( not ( GetLevelingUnit() == udg_Hero_Doomhammer ) ) then
        return false
    endif
    if ( not ( GetUnitLevel(udg_Hero_Doomhammer) == 7 ) ) then
        return false
    endif
    return true
endfunction

function Trig_LevelCap_Func002C takes nothing returns boolean
    if ( not ( GetLevelingUnit() == udg_Hero_Zuljin ) ) then
        return false
    endif
    if ( not ( GetUnitLevel(udg_Hero_Doomhammer) == 7 ) ) then
        return false
    endif
    return true
endfunction

function Trig_LevelCap_Actions takes nothing returns nothing
    if ( Trig_LevelCap_Func001C() ) then
        call SuspendHeroXPBJ( false, udg_Hero_Doomhammer )
    else
    endif
    if ( Trig_LevelCap_Func002C() ) then
        call SuspendHeroXPBJ( false, udg_Hero_Zuljin )
    else
    endif
endfunction

//===========================================================================
function InitTrig_LevelCap takes nothing returns nothing
    set gg_trg_LevelCap = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_LevelCap, Player(0), EVENT_PLAYER_HERO_LEVEL )
    call TriggerAddAction( gg_trg_LevelCap, function Trig_LevelCap_Actions )
endfunction

//===========================================================================
// Trigger: Easy
//===========================================================================
function Trig_Easy_Conditions takes nothing returns boolean
    if ( not ( GetGameDifficulty() == MAP_DIFFICULTY_EASY ) ) then
        return false
    endif
    return true
endfunction

function Trig_Easy_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_SettlementTimerDifficultyLevel = 1800.00
    set udg_GryphonWaveSize = 2
    // Resources
    call SetPlayerStateBJ( Player(0), PLAYER_STATE_RESOURCE_GOLD, 3000 )
    call SetPlayerStateBJ( Player(0), PLAYER_STATE_RESOURCE_LUMBER, 1500 )
    // Upgrades
    // NoL
    call SetPlayerTechResearchedSwap( 'Rhme', 1, Player(9) )
    call SetPlayerTechResearchedSwap( 'Rhar', 1, Player(9) )
    call SetPlayerTechResearchedSwap( 'R00A', 1, Player(9) )
    call SetPlayerTechResearchedSwap( 'R00J', 1, Player(9) )
    // WHRed
    call SetPlayerTechResearchedSwap( 'Rhme', 1, Player(12) )
    call SetPlayerTechResearchedSwap( 'Rhar', 1, Player(12) )
    call SetPlayerTechResearchedSwap( 'R00A', 1, Player(12) )
    call SetPlayerTechResearchedSwap( 'Rhla', 1, Player(12) )
    // WHYellow
    call SetPlayerTechResearchedSwap( 'Rhme', 1, Player(4) )
    call SetPlayerTechResearchedSwap( 'Rhar', 1, Player(4) )
    call SetPlayerTechResearchedSwap( 'R00A', 1, Player(4) )
    call SetPlayerTechResearchedSwap( 'Rhla', 1, Player(4) )
    // WHBlue
    call SetPlayerTechResearchedSwap( 'Rhme', 1, Player(1) )
    call SetPlayerTechResearchedSwap( 'Rhar', 1, Player(1) )
    call SetPlayerTechResearchedSwap( 'R00A', 1, Player(1) )
    call SetPlayerTechResearchedSwap( 'Rhla', 1, Player(1) )
endfunction

//===========================================================================
function InitTrig_Easy takes nothing returns nothing
    set gg_trg_Easy = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Easy, Condition( function Trig_Easy_Conditions ) )
    call TriggerAddAction( gg_trg_Easy, function Trig_Easy_Actions )
endfunction

//===========================================================================
// Trigger: Medium
//===========================================================================
function Trig_Medium_Conditions takes nothing returns boolean
    if ( not ( GetGameDifficulty() == MAP_DIFFICULTY_NORMAL ) ) then
        return false
    endif
    return true
endfunction

function Trig_Medium_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_SettlementTimerDifficultyLevel = 1620.00
    set udg_GryphonWaveSize = 4
    // Resources
    call SetPlayerStateBJ( Player(0), PLAYER_STATE_RESOURCE_GOLD, 1500 )
    call SetPlayerStateBJ( Player(0), PLAYER_STATE_RESOURCE_LUMBER, 750 )
    // Upgrades
    // NoL
    call SetPlayerTechResearchedSwap( 'Rhme', 2, Player(9) )
    call SetPlayerTechResearchedSwap( 'Rhar', 2, Player(9) )
    call SetPlayerTechResearchedSwap( 'R00A', 2, Player(9) )
    call SetPlayerTechResearchedSwap( 'R00J', 2, Player(9) )
    // WHRed
    call SetPlayerTechResearchedSwap( 'Rhme', 2, Player(12) )
    call SetPlayerTechResearchedSwap( 'Rhar', 2, Player(12) )
    call SetPlayerTechResearchedSwap( 'R00A', 2, Player(12) )
    call SetPlayerTechResearchedSwap( 'Rhla', 2, Player(12) )
    // WHYellow
    call SetPlayerTechResearchedSwap( 'Rhme', 2, Player(4) )
    call SetPlayerTechResearchedSwap( 'Rhar', 2, Player(4) )
    call SetPlayerTechResearchedSwap( 'R00A', 2, Player(4) )
    call SetPlayerTechResearchedSwap( 'Rhla', 2, Player(4) )
    // WHBlue
    call SetPlayerTechResearchedSwap( 'Rhme', 2, Player(1) )
    call SetPlayerTechResearchedSwap( 'Rhar', 2, Player(1) )
    call SetPlayerTechResearchedSwap( 'R00A', 2, Player(1) )
    call SetPlayerTechResearchedSwap( 'Rhla', 2, Player(1) )
endfunction

//===========================================================================
function InitTrig_Medium takes nothing returns nothing
    set gg_trg_Medium = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Medium, Condition( function Trig_Medium_Conditions ) )
    call TriggerAddAction( gg_trg_Medium, function Trig_Medium_Actions )
endfunction

//===========================================================================
// Trigger: Hard
//===========================================================================
function Trig_Hard_Conditions takes nothing returns boolean
    if ( not ( GetGameDifficulty() == MAP_DIFFICULTY_HARD ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hard_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_SettlementTimerDifficultyLevel = 1500.00
    set udg_GryphonWaveSize = 6
    // Resources
    call SetResourceAmount( gg_unit_ngol_0122, 39000 )
    call SetPlayerStateBJ( Player(0), PLAYER_STATE_RESOURCE_GOLD, 1500 )
    call SetPlayerStateBJ( Player(0), PLAYER_STATE_RESOURCE_LUMBER, 750 )
    // Upgrades
    // NoL
    call SetPlayerTechResearchedSwap( 'Rhme', 1, Player(9) )
    call SetPlayerTechResearchedSwap( 'Rhar', 3, Player(9) )
    call SetPlayerTechResearchedSwap( 'R00A', 3, Player(9) )
    call SetPlayerTechResearchedSwap( 'R00J', 3, Player(9) )
    call SetPlayerTechResearchedSwap( 'R00E', 1, Player(9) )
    // WHRed
    call SetPlayerTechResearchedSwap( 'Rhme', 3, Player(12) )
    call SetPlayerTechResearchedSwap( 'Rhar', 3, Player(12) )
    call SetPlayerTechResearchedSwap( 'R00A', 3, Player(12) )
    call SetPlayerTechResearchedSwap( 'Rhla', 3, Player(12) )
    // WHYellow
    call SetPlayerTechResearchedSwap( 'Rhme', 3, Player(4) )
    call SetPlayerTechResearchedSwap( 'Rhar', 3, Player(4) )
    call SetPlayerTechResearchedSwap( 'R00A', 3, Player(4) )
    call SetPlayerTechResearchedSwap( 'Rhla', 3, Player(4) )
    // WHBlue
    call SetPlayerTechResearchedSwap( 'Rhme', 3, Player(1) )
    call SetPlayerTechResearchedSwap( 'Rhar', 3, Player(1) )
    call SetPlayerTechResearchedSwap( 'R00A', 3, Player(1) )
    call SetPlayerTechResearchedSwap( 'Rhla', 3, Player(1) )
endfunction

//===========================================================================
function InitTrig_Hard takes nothing returns nothing
    set gg_trg_Hard = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Hard, Condition( function Trig_Hard_Conditions ) )
    call TriggerAddAction( gg_trg_Hard, function Trig_Hard_Actions )
endfunction

//===========================================================================
// Trigger: SnowOn
//===========================================================================
function Trig_SnowOn_Func036Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'B00B' ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(GetEnumDestructable()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_SnowOn_Func036A takes nothing returns nothing
    if ( Trig_SnowOn_Func036Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "birth" )
    else
    endif
endfunction

function Trig_SnowOn_Func038Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'VTlt' ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(GetEnumDestructable()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_SnowOn_Func038A takes nothing returns nothing
    if ( Trig_SnowOn_Func038Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "morph" )
        call QueueDestructableAnimationBJ( GetEnumDestructable(), "stand alternate" )
    else
    endif
endfunction

function Trig_SnowOn_Func039Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'VTlt' ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(GetEnumDestructable()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_SnowOn_Func039A takes nothing returns nothing
    if ( Trig_SnowOn_Func039Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "morph" )
        call QueueDestructableAnimationBJ( GetEnumDestructable(), "stand alternate" )
    else
    endif
endfunction

function Trig_SnowOn_Func040Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'VTlt' ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(GetEnumDestructable()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_SnowOn_Func040A takes nothing returns nothing
    if ( Trig_SnowOn_Func040Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "morph" )
        call QueueDestructableAnimationBJ( GetEnumDestructable(), "stand alternate" )
    else
    endif
endfunction

function Trig_SnowOn_Func041Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'VTlt' ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(GetEnumDestructable()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_SnowOn_Func041A takes nothing returns nothing
    if ( Trig_SnowOn_Func041Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "morph" )
        call QueueDestructableAnimationBJ( GetEnumDestructable(), "stand alternate" )
    else
    endif
endfunction

function Trig_SnowOn_Func042Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'VTlt' ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(GetEnumDestructable()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_SnowOn_Func042A takes nothing returns nothing
    if ( Trig_SnowOn_Func042Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "morph" )
        call QueueDestructableAnimationBJ( GetEnumDestructable(), "stand alternate" )
    else
    endif
endfunction

function Trig_SnowOn_Func043Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'VTlt' ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(GetEnumDestructable()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_SnowOn_Func043A takes nothing returns nothing
    if ( Trig_SnowOn_Func043Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "morph" )
        call QueueDestructableAnimationBJ( GetEnumDestructable(), "stand alternate" )
    else
    endif
endfunction

function Trig_SnowOn_Func044Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'VTlt' ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(GetEnumDestructable()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_SnowOn_Func044A takes nothing returns nothing
    if ( Trig_SnowOn_Func044Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "morph" )
        call QueueDestructableAnimationBJ( GetEnumDestructable(), "stand alternate" )
    else
    endif
endfunction

function Trig_SnowOn_Func045Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'VTlt' ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(GetEnumDestructable()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_SnowOn_Func045A takes nothing returns nothing
    if ( Trig_SnowOn_Func045Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "morph" )
        call QueueDestructableAnimationBJ( GetEnumDestructable(), "stand alternate" )
    else
    endif
endfunction

function Trig_SnowOn_Func048Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'B00B' ) ) then
        return false
    endif
    return true
endfunction

function Trig_SnowOn_Func048A takes nothing returns nothing
    if ( Trig_SnowOn_Func048Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "stand" )
    else
    endif
endfunction

function Trig_SnowOn_Actions takes nothing returns nothing
    // ///
    call AddWeatherEffectSaveLast( gg_rct_SnowedTrees01, 'SNhs' )
    set udg_WeatherSnow[1] = GetLastCreatedWeatherEffect()
    call EnableWeatherEffect( udg_WeatherSnow[1], true )
    // ///
    call AddWeatherEffectSaveLast( gg_rct_SnowedTrees02, 'SNhs' )
    set udg_WeatherSnow[2] = GetLastCreatedWeatherEffect()
    call EnableWeatherEffect( udg_WeatherSnow[2], true )
    // ///
    call AddWeatherEffectSaveLast( gg_rct_SnowedTrees03, 'SNhs' )
    set udg_WeatherSnow[3] = GetLastCreatedWeatherEffect()
    call EnableWeatherEffect( udg_WeatherSnow[3], true )
    // ///
    call AddWeatherEffectSaveLast( gg_rct_SnowedTrees04, 'SNhs' )
    set udg_WeatherSnow[4] = GetLastCreatedWeatherEffect()
    call EnableWeatherEffect( udg_WeatherSnow[4], true )
    // ///
    call AddWeatherEffectSaveLast( gg_rct_SnowedTrees05, 'SNhs' )
    set udg_WeatherSnow[5] = GetLastCreatedWeatherEffect()
    call EnableWeatherEffect( udg_WeatherSnow[5], true )
    // ///
    call AddWeatherEffectSaveLast( gg_rct_SnowedTrees06, 'SNhs' )
    set udg_WeatherSnow[6] = GetLastCreatedWeatherEffect()
    call EnableWeatherEffect( udg_WeatherSnow[6], true )
    // ///
    call AddWeatherEffectSaveLast( gg_rct_SnowedTrees07, 'SNhs' )
    set udg_WeatherSnow[7] = GetLastCreatedWeatherEffect()
    call EnableWeatherEffect( udg_WeatherSnow[7], true )
    // ///
    call AddWeatherEffectSaveLast( gg_rct_SnowedTrees08, 'SNhs' )
    set udg_WeatherSnow[8] = GetLastCreatedWeatherEffect()
    call EnableWeatherEffect( udg_WeatherSnow[8], true )
    // ///
    set udg_Snowing = true
    // Snowpiles
    call EnumDestructablesInRectAll( GetPlayableMapRect(), function Trig_SnowOn_Func036A )
    // Trees
    call EnumDestructablesInRectAll( gg_rct_SnowedTrees01, function Trig_SnowOn_Func038A )
    call EnumDestructablesInRectAll( gg_rct_SnowedTrees02, function Trig_SnowOn_Func039A )
    call EnumDestructablesInRectAll( gg_rct_SnowedTrees03, function Trig_SnowOn_Func040A )
    call EnumDestructablesInRectAll( gg_rct_SnowedTrees04, function Trig_SnowOn_Func041A )
    call EnumDestructablesInRectAll( gg_rct_SnowedTrees05, function Trig_SnowOn_Func042A )
    call EnumDestructablesInRectAll( gg_rct_SnowedTrees06, function Trig_SnowOn_Func043A )
    call EnumDestructablesInRectAll( gg_rct_SnowedTrees07, function Trig_SnowOn_Func044A )
    call EnumDestructablesInRectAll( gg_rct_SnowedTrees08, function Trig_SnowOn_Func045A )
    call TriggerSleepAction( 60.00 )
    // Snowpiles
    call EnumDestructablesInRectAll( GetPlayableMapRect(), function Trig_SnowOn_Func048A )
endfunction

//===========================================================================
function InitTrig_SnowOn takes nothing returns nothing
    set gg_trg_SnowOn = CreateTrigger(  )
    call TriggerRegisterGameStateEventTimeOfDay( gg_trg_SnowOn, EQUAL, 18.00 )
    call TriggerAddAction( gg_trg_SnowOn, function Trig_SnowOn_Actions )
endfunction

//===========================================================================
// Trigger: SnowOff
//===========================================================================
function Trig_SnowOff_Func003Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'B00B' ) ) then
        return false
    endif
    return true
endfunction

function Trig_SnowOff_Func003A takes nothing returns nothing
    if ( Trig_SnowOff_Func003Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "death" )
    else
    endif
endfunction

function Trig_SnowOff_Func005Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'VTlt' ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(GetEnumDestructable()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_SnowOff_Func005A takes nothing returns nothing
    if ( Trig_SnowOff_Func005Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "morph alternate" )
        call QueueDestructableAnimationBJ( GetEnumDestructable(), "stand" )
    else
    endif
endfunction

function Trig_SnowOff_Func006Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'VTlt' ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(GetEnumDestructable()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_SnowOff_Func006A takes nothing returns nothing
    if ( Trig_SnowOff_Func006Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "morph alternate" )
        call QueueDestructableAnimationBJ( GetEnumDestructable(), "stand" )
    else
    endif
endfunction

function Trig_SnowOff_Func007Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'VTlt' ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(GetEnumDestructable()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_SnowOff_Func007A takes nothing returns nothing
    if ( Trig_SnowOff_Func007Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "morph alternate" )
        call QueueDestructableAnimationBJ( GetEnumDestructable(), "stand" )
    else
    endif
endfunction

function Trig_SnowOff_Func008Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'VTlt' ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(GetEnumDestructable()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_SnowOff_Func008A takes nothing returns nothing
    if ( Trig_SnowOff_Func008Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "morph alternate" )
        call QueueDestructableAnimationBJ( GetEnumDestructable(), "stand" )
    else
    endif
endfunction

function Trig_SnowOff_Func009Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'VTlt' ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(GetEnumDestructable()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_SnowOff_Func009A takes nothing returns nothing
    if ( Trig_SnowOff_Func009Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "morph alternate" )
        call QueueDestructableAnimationBJ( GetEnumDestructable(), "stand" )
    else
    endif
endfunction

function Trig_SnowOff_Func010Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'VTlt' ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(GetEnumDestructable()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_SnowOff_Func010A takes nothing returns nothing
    if ( Trig_SnowOff_Func010Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "morph alternate" )
        call QueueDestructableAnimationBJ( GetEnumDestructable(), "stand" )
    else
    endif
endfunction

function Trig_SnowOff_Func011Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'VTlt' ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(GetEnumDestructable()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_SnowOff_Func011A takes nothing returns nothing
    if ( Trig_SnowOff_Func011Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "morph alternate" )
        call QueueDestructableAnimationBJ( GetEnumDestructable(), "stand" )
    else
    endif
endfunction

function Trig_SnowOff_Func012Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'VTlt' ) ) then
        return false
    endif
    if ( not ( IsDestructableAliveBJ(GetEnumDestructable()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_SnowOff_Func012A takes nothing returns nothing
    if ( Trig_SnowOff_Func012Func001C() ) then
        call SetDestructableAnimationBJ( GetEnumDestructable(), "morph alternate" )
        call QueueDestructableAnimationBJ( GetEnumDestructable(), "stand" )
    else
    endif
endfunction

function Trig_SnowOff_Actions takes nothing returns nothing
    set bj_forLoopAIndex = 1
    set bj_forLoopAIndexEnd = 8
    loop
        exitwhen bj_forLoopAIndex > bj_forLoopAIndexEnd
        call EnableWeatherEffect( udg_WeatherSnow[GetForLoopIndexA()], false )
        call RemoveWeatherEffectBJ( udg_WeatherSnow[GetForLoopIndexA()] )
        set bj_forLoopAIndex = bj_forLoopAIndex + 1
    endloop
    set udg_Snowing = false
    call EnumDestructablesInRectAll( GetPlayableMapRect(), function Trig_SnowOff_Func003A )
    // Trees
    call EnumDestructablesInRectAll( gg_rct_SnowedTrees01, function Trig_SnowOff_Func005A )
    call EnumDestructablesInRectAll( gg_rct_SnowedTrees02, function Trig_SnowOff_Func006A )
    call EnumDestructablesInRectAll( gg_rct_SnowedTrees03, function Trig_SnowOff_Func007A )
    call EnumDestructablesInRectAll( gg_rct_SnowedTrees04, function Trig_SnowOff_Func008A )
    call EnumDestructablesInRectAll( gg_rct_SnowedTrees05, function Trig_SnowOff_Func009A )
    call EnumDestructablesInRectAll( gg_rct_SnowedTrees06, function Trig_SnowOff_Func010A )
    call EnumDestructablesInRectAll( gg_rct_SnowedTrees07, function Trig_SnowOff_Func011A )
    call EnumDestructablesInRectAll( gg_rct_SnowedTrees08, function Trig_SnowOff_Func012A )
endfunction

//===========================================================================
function InitTrig_SnowOff takes nothing returns nothing
    set gg_trg_SnowOff = CreateTrigger(  )
    call TriggerRegisterGameStateEventTimeOfDay( gg_trg_SnowOff, EQUAL, 6.00 )
    call TriggerAddAction( gg_trg_SnowOff, function Trig_SnowOff_Actions )
endfunction

//===========================================================================
// Trigger: SettlementsTimerCreate
//===========================================================================
function Trig_SettlementsTimerCreate_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_SettlementsTimerCreate_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call StartTimerBJ( udg_AllianceArrivalTimer, false, udg_SettlementTimerDifficultyLevel )
    call CreateTimerDialogBJ( udg_AllianceArrivalTimer, "TRIGSTR_2446" )
    set udg_AllianceArrivalWindow = GetLastCreatedTimerDialogBJ()
    call TimerDialogDisplayForPlayerBJ( true, udg_AllianceArrivalWindow, Player(0) )
endfunction

//===========================================================================
function InitTrig_SettlementsTimerCreate takes nothing returns nothing
    set gg_trg_SettlementsTimerCreate = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_SettlementsTimerCreate, Condition( function Trig_SettlementsTimerCreate_Conditions ) )
    call TriggerAddAction( gg_trg_SettlementsTimerCreate, function Trig_SettlementsTimerCreate_Actions )
endfunction

//===========================================================================
// Trigger: SettlementsTimerDestroy
//===========================================================================
function Trig_SettlementsTimerDestroy_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_SettlementsTimerDestroy_Func005C takes nothing returns boolean
    if ( not ( IsQuestCompleted(udg_MainQuestSettlements) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_SettlementsTimerDestroy_Func006Func001C takes nothing returns boolean
    if ( not ( IsQuestCompleted(udg_OptionalQuestTrolls) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_SettlementsTimerDestroy_Func006C takes nothing returns boolean
    if ( not ( IsQuestCompleted(udg_MainQuestTrolls) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_SettlementsTimerDestroy_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call DestroyTimerDialogBJ( udg_AllianceArrivalWindow )
    if ( Trig_SettlementsTimerDestroy_Func005C() ) then
        call QueuedTriggerAddBJ( gg_trg_Settlements_Failed_Q, true )
    else
    endif
    if ( Trig_SettlementsTimerDestroy_Func006C() ) then
        call QueuedTriggerAddBJ( gg_trg_Trolls_Failed_Q, true )
        call QueuedTriggerAddBJ( gg_trg_Trolls_Optional_Failed_Q, true )
    else
        if ( Trig_SettlementsTimerDestroy_Func006Func001C() ) then
            call QueuedTriggerAddBJ( gg_trg_Trolls_Optional_Failed_Q, true )
        else
        endif
    endif
    call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, true, udg_PlayerTribeCoal )
    call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, true, udg_PlayerTribeBrown )
    call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, true, udg_PlayerTribeMint )
    call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, true, udg_PlayerTribeLavender )
    call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, true, udg_PlayerTribePeach )
    call SetPlayerAllianceBJ( udg_PlayerTribeCoal, ALLIANCE_PASSIVE, true, udg_PlayerElves )
    call SetPlayerAllianceBJ( udg_PlayerTribeBrown, ALLIANCE_PASSIVE, true, udg_PlayerElves )
    call SetPlayerAllianceBJ( udg_PlayerTribeMint, ALLIANCE_PASSIVE, true, udg_PlayerElves )
    call SetPlayerAllianceBJ( udg_PlayerTribeLavender, ALLIANCE_PASSIVE, true, udg_PlayerElves )
    call SetPlayerAllianceBJ( udg_PlayerTribePeach, ALLIANCE_PASSIVE, true, udg_PlayerElves )
    call QueuedTriggerAddBJ( gg_trg_MidCinQ, true )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_SettlementsTimerDestroy takes nothing returns nothing
    set gg_trg_SettlementsTimerDestroy = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_SettlementsTimerDestroy, udg_AllianceArrivalTimer )
    call TriggerAddCondition( gg_trg_SettlementsTimerDestroy, Condition( function Trig_SettlementsTimerDestroy_Conditions ) )
    call TriggerAddAction( gg_trg_SettlementsTimerDestroy, function Trig_SettlementsTimerDestroy_Actions )
endfunction

//===========================================================================
// Trigger: LodgeAttackTimerCreate
//===========================================================================
function Trig_LodgeAttackTimerCreate_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_LodgeAttackTimerCreate_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call StartTimerBJ( udg_ElvesTimer, false, 180.00 )
endfunction

//===========================================================================
function InitTrig_LodgeAttackTimerCreate takes nothing returns nothing
    set gg_trg_LodgeAttackTimerCreate = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_LodgeAttackTimerCreate, Condition( function Trig_LodgeAttackTimerCreate_Conditions ) )
    call TriggerAddAction( gg_trg_LodgeAttackTimerCreate, function Trig_LodgeAttackTimerCreate_Actions )
endfunction

//===========================================================================
// Trigger: SurviveTimerCreate
//===========================================================================
function Trig_SurviveTimerCreate_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_SurviveTimerCreate_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call StartTimerBJ( udg_HoardExitTimer, false, 600.00 )
    call CreateTimerDialogBJ( udg_HoardExitTimer, "TRIGSTR_2589" )
    set udg_HoardExitWindow = GetLastCreatedTimerDialogBJ()
    call TimerDialogDisplayForPlayerBJ( true, udg_HoardExitWindow, Player(0) )
    call StartTimerBJ( udg_HiddenUnitTimer, false, 480.00 )
    call SetUnitAnimation( gg_unit_ngsp_0232, "stand work" )
    call SetUnitAnimation( gg_unit_ngsp_0234, "stand work" )
    call AddSpecialEffectLocBJ( GetRectCenter(gg_rct_OutroSappers02), "sharedfx\\scarabburrow\\scarabburrow.mdl" )
    set udg_GoblinWorkDust[1] = GetLastCreatedEffectBJ()
    call SetStackedSoundBJ( true, gg_snd_ConstructionLoop101, gg_rct_OutroSappers01 )
    call AddSpecialEffectLocBJ( GetRectCenter(gg_rct_OutroSappers01), "sharedfx\\scarabburrow\\scarabburrow.mdl" )
    set udg_GoblinWorkDust[2] = GetLastCreatedEffectBJ()
    call SetStackedSoundBJ( true, gg_snd_ConstructionLoop102, gg_rct_OutroSappers02 )
    // change color for player for landmines
    call SetPlayerColorBJ( Player(2), PLAYER_COLOR_RED, true )
    call ConditionalTriggerExecute( gg_trg_SurviveMusicTheme )
    call TriggerSleepAction( 120.00 )
    call QueuedTriggerAddBJ( gg_trg_Goblins01VO, true )
    call TriggerSleepAction( 180.00 )
    call QueuedTriggerAddBJ( gg_trg_Garona01VO, true )
    call TriggerSleepAction( 120.00 )
    call QueuedTriggerAddBJ( gg_trg_Garona02VO, true )
endfunction

//===========================================================================
function InitTrig_SurviveTimerCreate takes nothing returns nothing
    set gg_trg_SurviveTimerCreate = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_SurviveTimerCreate, Condition( function Trig_SurviveTimerCreate_Conditions ) )
    call TriggerAddAction( gg_trg_SurviveTimerCreate, function Trig_SurviveTimerCreate_Actions )
endfunction

//===========================================================================
// Trigger: SurviveTimerDestroy
//===========================================================================
function Trig_SurviveTimerDestroy_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_SurviveTimerDestroy_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call DestroyTimerDialogBJ( udg_HoardExitWindow )
    call ResetUnitAnimation( gg_unit_ngsp_0232 )
    call DestroyEffectBJ( udg_GoblinWorkDust[1] )
    call SetStackedSoundBJ( false, gg_snd_ConstructionLoop101, gg_rct_OutroSappers01 )
    call ResetUnitAnimation( gg_unit_ngsp_0234 )
    call DestroyEffectBJ( udg_GoblinWorkDust[2] )
    call SetStackedSoundBJ( false, gg_snd_ConstructionLoop102, gg_rct_OutroSappers02 )
    call QueuedTriggerAddBJ( gg_trg_Goblins02VO, true )
    call QueuedTriggerAddBJ( gg_trg_Survive_Completed_Q, true )
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
    call QueuedTriggerAddBJ( gg_trg_OutroCinQ, true )
endfunction

//===========================================================================
function InitTrig_SurviveTimerDestroy takes nothing returns nothing
    set gg_trg_SurviveTimerDestroy = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_SurviveTimerDestroy, udg_HoardExitTimer )
    call TriggerAddCondition( gg_trg_SurviveTimerDestroy, Condition( function Trig_SurviveTimerDestroy_Conditions ) )
    call TriggerAddAction( gg_trg_SurviveTimerDestroy, function Trig_SurviveTimerDestroy_Actions )
endfunction

//===========================================================================
// Trigger: SurviveMusicTheme
//===========================================================================
function Trig_SurviveMusicTheme_Actions takes nothing returns nothing
    call PlayThematicMusicBJ( "Warcraft2\\Music\\OrcCinematicThemeTension.mp3" )
endfunction

//===========================================================================
function InitTrig_SurviveMusicTheme takes nothing returns nothing
    set gg_trg_SurviveMusicTheme = CreateTrigger(  )
    call TriggerAddAction( gg_trg_SurviveMusicTheme, function Trig_SurviveMusicTheme_Actions )
endfunction

//===========================================================================
// Trigger: IntroCinQ
//===========================================================================
function Trig_IntroCinQ_Func031001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func033001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func036001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func039Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'YTpc' ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroCinQ_Func039A takes nothing returns nothing
    if ( Trig_IntroCinQ_Func039Func001C() ) then
        call KillDestructable( GetEnumDestructable() )
    else
    endif
endfunction

function Trig_IntroCinQ_Func041001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func047001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func051001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func054001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func058001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func061001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func066001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func075A takes nothing returns nothing
    call ShowUnitShow( GetEnumUnit() )
endfunction

function Trig_IntroCinQ_Func083001 takes nothing returns boolean
    return ( RectContainsLoc(gg_rct_IntroDH02Capture, GetUnitLoc(udg_Hero_Doomhammer)) == true )
endfunction

function Trig_IntroCinQ_Func084001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func086001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func091001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func096001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func106001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func112001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func115001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func120001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func130001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func133001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func138001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func146001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func149001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func157001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func162001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func167001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func170001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func186001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func211001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func213001 takes nothing returns boolean
    return ( RectContainsLoc(gg_rct_IntroDH03B, GetUnitLoc(udg_Hero_Doomhammer)) == true )
endfunction

function Trig_IntroCinQ_Func214001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func217001 takes nothing returns boolean
    return ( RectContainsLoc(gg_rct_IntroEitriggCamera, GetUnitLoc(udg_Hero_Eitrigg)) == true )
endfunction

function Trig_IntroCinQ_Func218001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func225001 takes nothing returns boolean
    return ( RectContainsLoc(gg_rct_IntroEitrigg02Catch, GetUnitLoc(udg_Hero_Eitrigg)) == true )
endfunction

function Trig_IntroCinQ_Func226001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func229001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func233001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func239001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Func245001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroCinQ_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call ConditionalTriggerExecute( gg_trg_OilUIHide )
    // Settings
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 0.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    call CinematicModeBJ( true, GetPlayersAll() )
    call SetCineModeVolumeGroupsBJ(  )
    call CameraSetupApplyForPlayer( true, gg_cam_Intro01Pan01, Player(0), 0 )
    call CameraSetupApplyForPlayerSmooth( true, gg_cam_Intro02Pan02, Player(0), 22.00, 1.00, 5.00, 100.00 )
    // add a Peon For Cage
    call CreateNUnitsAtLoc( 1, 'o60D', Player(0), GetRectCenter(gg_rct_PeonBuildingCage), 163.96 )
    set udg_IntroPeonWorking = GetLastCreatedUnit()
    call SetUnitAnimation( udg_IntroPeonWorking, "stand work" )
    // Change owners of herous to have propper colors
    call SetUnitOwner( udg_Hero_DalRend, Player(20), true )
    call SetUnitOwner( udg_Hero_Zuljin, Player(2), true )
    // HideGaronaAndEitrig
    call ShowUnitHide( udg_Hero_Garona )
    call ShowUnitHide( udg_Hero_Eitrigg )
    // //
    call TriggerSleepAction( 2.00 )
    // //
    call ConditionalTriggerExecute( gg_trg_IntroPig )
    call TriggerSleepAction( 0.50 )
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 2.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    call SetUnitAnimationWithRarity( udg_IntroPeon01, "stand", RARITY_FREQUENT )
    call SetUnitAnimationWithRarity( udg_IntroPeon02, "stand", RARITY_FREQUENT )
    call SetUnitAnimation( udg_Hero_Tharbek, "cinematic standard one" )
    set udg_IntroCinematic = true
    call PlayThematicMusicBJ( "DarkAgents" )
    call TriggerSleepAction( 2 )
    if ( Trig_IntroCinQ_Func031001() ) then
        return
    else
        call DoNothing(  )
    endif
    call TriggerSleepAction( 16.50 )
    if ( Trig_IntroCinQ_Func033001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 2.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    call TriggerSleepAction( 2 )
    if ( Trig_IntroCinQ_Func036001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_IntroPeonWorking, "stand" )
    call SetUnitPositionLocFacingBJ( udg_Hero_Tharbek, GetRectCenter(gg_rct_IntroTharbek01), 303.76 )
    call EnumDestructablesInRectAll( gg_rct_IntroBlockers, function Trig_IntroCinQ_Func039A )
    call TriggerSleepAction( 0.20 )
    if ( Trig_IntroCinQ_Func041001() ) then
        return
    else
        call DoNothing(  )
    endif
    // Cinematic Start
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 1.80, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    call CameraSetupApplyForPlayer( true, gg_cam_Intro03TaskMaster, Player(0), 0 )
    call SetUnitAnimation( udg_Hero_Tharbek, "cinematic listening one" )
    call TriggerSleepAction( 1.80 )
    if ( Trig_IntroCinQ_Func047001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Tharbek, "cinematic standard one" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Tharbek, "TRIGSTR_2398", gg_snd_WC2Orc08STharbek1, "TRIGSTR_2399", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08STharbek1, 0 )
    if ( Trig_IntroCinQ_Func051001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Tharbek, "cinematic listening one" )
    call TriggerSleepAction( 0.50 )
    if ( Trig_IntroCinQ_Func054001() ) then
        return
    else
        call DoNothing(  )
    endif
    call PlaySoundOnUnitBJ( gg_snd_CS_HU_2_Intro_Foley2, 100, udg_IntroPeon01 )
    call IssueTargetOrderBJ( udg_IntroPeon01, "harvest", gg_unit_ngol_0122 )
    call TriggerSleepAction( 0.20 )
    if ( Trig_IntroCinQ_Func058001() ) then
        return
    else
        call DoNothing(  )
    endif
    call IssueTargetDestructableOrder( udg_IntroPeon02, "harvest", gg_dest_VTlt_0194 )
    call TriggerSleepAction( 1.25 )
    if ( Trig_IntroCinQ_Func061001() ) then
        return
    else
        call DoNothing(  )
    endif
    call PlaySoundOnUnitBJ( gg_snd_CS_Prologue2_Foley201, 100, udg_Hero_Tharbek )
    call IssuePointOrderLocBJ( udg_Hero_Tharbek, "move", GetRectCenter(gg_rct_IntroTharbek02) )
    call CameraSetupApplyForPlayerSmooth( true, gg_cam_Intro04ArrivalExit, Player(0), 10.00, 1.00, 2.00, 100.00 )
    call TriggerSleepAction( 2.00 )
    if ( Trig_IntroCinQ_Func066001() ) then
        return
    else
        call DoNothing(  )
    endif
    // Doomhammer and co
    // PlaceDoomhammerOnWolf
    call BlzSetUnitSkin( udg_Hero_Doomhammer, 'O60F' )
    call SetUnitMoveSpeed( udg_Hero_Doomhammer, 108.00 )
    call BlzSetUnitRealFieldBJ( udg_Hero_Doomhammer, UNIT_RF_ANIMATION_WALK_SPEED, 108.00 )
    call AddUnitAnimationPropertiesBJ( true, "cinematic", udg_Hero_Doomhammer )
    call SetUnitBlendTimeBJ( udg_Hero_Doomhammer, 0.50 )
    // //
    call ForGroupBJ( udg_Intro_Units, function Trig_IntroCinQ_Func075A )
    call PlaySoundOnUnitBJ( gg_snd_CS_H01b_group_walk_v2, 100, udg_Hero_Doomhammer )
    call IssuePointOrderLocBJ( udg_Hero_DalRend, "move", GetRectCenter(gg_rct_IntroDR02) )
    call IssuePointOrderLocBJ( udg_Hero_Doomhammer, "move", GetRectCenter(gg_rct_IntroDH02) )
    call IssuePointOrderLocBJ( udg_Hero_Utok, "move", GetRectCenter(gg_rct_IntroUtok02) )
    call IssuePointOrderLocBJ( udg_Hero_Zuljin, "move", GetRectCenter(gg_rct_IntroZuljin02) )
    call IssuePointOrderLocBJ( udg_IntroGrunt01, "move", GetRectCenter(gg_rct_IntroDRGuardA02) )
    call IssuePointOrderLocBJ( udg_IntroGrunt02, "move", GetRectCenter(gg_rct_IntroDRGuardB02) )
    loop
        exitwhen ( Trig_IntroCinQ_Func083001() )
        call TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 0.25))
    endloop
    if ( Trig_IntroCinQ_Func084001() ) then
        return
    else
        call DoNothing(  )
    endif
    call TriggerSleepAction( 0.25 )
    if ( Trig_IntroCinQ_Func086001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitLookAt( udg_Hero_Tharbek, "bone_head", udg_Hero_Doomhammer, 0, 0, 90 )
    call SetUnitAnimation( udg_Hero_Tharbek, "cinematic standard one" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Tharbek, "TRIGSTR_2400", gg_snd_WC2Orc08STharbek2, "TRIGSTR_2401", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08STharbek2, 0 )
    if ( Trig_IntroCinQ_Func091001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Tharbek, "cinematic listening one" )
    call SetUnitAnimation( udg_Hero_Doomhammer, "cinematic standard one" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Doomhammer, "TRIGSTR_2402", gg_snd_WC2Orc08SDoomhammer1, "TRIGSTR_2403", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SDoomhammer1, 0 )
    if ( Trig_IntroCinQ_Func096001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetupApplyForPlayer( true, gg_cam_Intro06Rend, Player(0), 0 )
    call SetUnitFacingToFaceUnitTimed( udg_Hero_DalRend, udg_Hero_Doomhammer, 1.00 )
    call SetUnitFacingToFaceUnitTimed( udg_Hero_Doomhammer, udg_Hero_Zuljin, 1.00 )
    call SetUnitLookAt( udg_Hero_Doomhammer, "bone_head", udg_Hero_DalRend, 0, 0, 90 )
    call SetUnitLookAt( udg_Hero_DalRend, "bone_head", udg_Hero_Tharbek, 0, 0, 90 )
    call SetUnitAnimation( udg_Hero_Doomhammer, "cinematic listening one" )
    call SetUnitAnimation( udg_Hero_DalRend, "cinematic standard one" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_DalRend, "TRIGSTR_2404", gg_snd_WC2Orc08SRend1, "TRIGSTR_2405", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SRend1, 0 )
    if ( Trig_IntroCinQ_Func106001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetupApplyForPlayer( true, gg_cam_IntroDialogue, Player(0), 0 )
    call SetUnitAnimation( udg_Hero_DalRend, "cinematic listening one" )
    call SetUnitAnimation( udg_Hero_Doomhammer, "cinematic standard one" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Doomhammer, "TRIGSTR_2406", gg_snd_WC2Orc08SDoomhammer2, "TRIGSTR_2407", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SDoomhammer2, 0 )
    if ( Trig_IntroCinQ_Func112001() ) then
        return
    else
        call DoNothing(  )
    endif
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Doomhammer, "TRIGSTR_2408", gg_snd_WC2Orc08SDoomhammer3, "TRIGSTR_2409", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SDoomhammer3, 0 )
    if ( Trig_IntroCinQ_Func115001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Doomhammer, "cinematic listening one" )
    call SetUnitAnimation( udg_Hero_DalRend, "cinematic standard one" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_DalRend, "TRIGSTR_2410", gg_snd_WC2Orc08SRend2, "TRIGSTR_2411", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SRend2, 0 )
    if ( Trig_IntroCinQ_Func120001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetupApplyForPlayer( true, gg_cam_Intro07ZJ, Player(0), 0 )
    call SetUnitLookAt( udg_Hero_DalRend, "bone_head", udg_Hero_Zuljin, 0, 0, 90 )
    call SetUnitLookAt( udg_Hero_Zuljin, "bone_head", udg_Hero_Doomhammer, 0, 0, 90 )
    call SetUnitAnimation( udg_Hero_DalRend, "cinematic listening one" )
    call SetUnitAnimation( udg_Hero_Zuljin, "cinematic standard one" )
    call ShowUnitHide( udg_Hero_Eitrigg )
    call PlayThematicMusicBJ( "DarkAgents" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Zuljin, "TRIGSTR_2412", gg_snd_WC2Orc08SZuljin1, "TRIGSTR_2413", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SZuljin1, 0 )
    if ( Trig_IntroCinQ_Func130001() ) then
        return
    else
        call DoNothing(  )
    endif
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Zuljin, "TRIGSTR_2414", gg_snd_WC2Orc08SZuljin2, "TRIGSTR_2415", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SZuljin2, 0 )
    if ( Trig_IntroCinQ_Func133001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Zuljin, "cinematic listening one" )
    call SetUnitAnimation( udg_Hero_DalRend, "cinematic standard one" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_DalRend, "TRIGSTR_2416", gg_snd_WC2Orc08SRend3, "TRIGSTR_2417", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SRend3, 0 )
    if ( Trig_IntroCinQ_Func138001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetupApplyForPlayer( true, gg_cam_Intro05Doomhammer, Player(0), 0 )
    call CameraSetupApplyForPlayerSmooth( true, gg_cam_Intro04ArrivalExit, Player(0), ( GetSoundDurationBJ(gg_snd_WC2Orc08SDoomhammer4) + GetSoundDurationBJ(gg_snd_WC2Orc08SDoomhammer5) ), 0, 1.00, 100.00 )
    call SetUnitLookAt( udg_Hero_DalRend, "bone_head", udg_Hero_Doomhammer, 0, 0, 90 )
    call SetUnitAnimation( udg_Hero_DalRend, "cinematic listening one" )
    call SetUnitAnimation( udg_Hero_Doomhammer, "cinematic standard two" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Doomhammer, "TRIGSTR_2418", gg_snd_WC2Orc08SDoomhammer4, "TRIGSTR_2419", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SDoomhammer4, 0 )
    if ( Trig_IntroCinQ_Func146001() ) then
        return
    else
        call DoNothing(  )
    endif
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Doomhammer, "TRIGSTR_2424", gg_snd_WC2Orc08SDoomhammer5, "TRIGSTR_2425", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SDoomhammer5, 0 )
    if ( Trig_IntroCinQ_Func149001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Doomhammer, "cinematic listening one" )
    call SetUnitAnimation( udg_Hero_DalRend, "cinematic standard one" )
    call PlaySoundOnUnitBJ( gg_snd_CS_Prologue2_Foley201, 100, udg_IntroTroll01 )
    call IssuePointOrderLocBJ( udg_IntroTroll01, "move", GetRectCenter(gg_rct_IntroTrollA01) )
    call IssuePointOrderLocBJ( udg_IntroTroll02, "move", GetRectCenter(gg_rct_IntroTrollB01) )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_DalRend, "TRIGSTR_2420", gg_snd_WC2Orc08SRend4, "TRIGSTR_2421", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SRend4, 0 )
    if ( Trig_IntroCinQ_Func157001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_DalRend, "cinematic listening one" )
    call SetUnitAnimation( udg_Hero_Doomhammer, "cinematic standard three" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Doomhammer, "TRIGSTR_2422", gg_snd_WC2Orc08SDoomhammer6, "TRIGSTR_2423", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SDoomhammer6, 0 )
    if ( Trig_IntroCinQ_Func162001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Doomhammer, "cinematic listening one" )
    call SetUnitAnimation( udg_Hero_DalRend, "cinematic standard one" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_DalRend, "TRIGSTR_2426", gg_snd_WC2Orc08SRend5, "TRIGSTR_2427", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SRend5, 0 )
    if ( Trig_IntroCinQ_Func167001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_DalRend, "cinematic listening one" )
    call TriggerSleepAction( 0.40 )
    if ( Trig_IntroCinQ_Func170001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ResetUnitLookAt( udg_Hero_DalRend )
    call ResetUnitLookAt( udg_Hero_Doomhammer )
    call ResetUnitLookAt( udg_Hero_Tharbek )
    call ResetUnitLookAt( udg_Hero_Zuljin )
    call SetUnitPathing( udg_Hero_Tharbek, false )
    call SetUnitPathing( udg_Hero_DalRend, false )
    call ConditionalTriggerExecute( gg_trg_IntroGroupExit )
    // Remove Peon That builds a cage
    call RemoveUnit( udg_IntroPeonWorking )
    call ShowUnitShow( udg_Hero_Garona )
    call SetUnitAnimation( udg_Hero_Garona, "cinematic stand alternate" )
    call SetUnitScalePercent( udg_Hero_Garona, 100, 100, 100 )
    call ShowUnitShow( udg_Hero_Eitrigg )
    // Remove Peon That builds a cage
    call TriggerSleepAction( 4.80 )
    if ( Trig_IntroCinQ_Func186001() ) then
        return
    else
        call DoNothing(  )
    endif
    // Doomhammer Dismounts
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 1.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 0, 0, 0, 0 )
    call TriggerSleepAction( 1.00 )
    call BlzSetUnitSkin( udg_Hero_Doomhammer, 'O602' )
    call SetUnitMoveSpeed( udg_Hero_Doomhammer, 100.00 )
    call BlzSetUnitRealFieldBJ( udg_Hero_Doomhammer, UNIT_RF_ANIMATION_WALK_SPEED, 100.00 )
    call AddUnitAnimationPropertiesBJ( true, "cinematic", udg_Hero_Doomhammer )
    call SetUnitBlendTimeBJ( udg_Hero_Doomhammer, 0.25 )
    call SetUnitScalePercent( udg_Hero_Doomhammer, 130.00, 130.00, 130.00 )
    call CreateNUnitsAtLoc( 1, 'n007', Player(PLAYER_NEUTRAL_PASSIVE), GetRectCenter(gg_rct_DoomhammersWolf), 315.96 )
    set udg_DoomhammersWolf = GetLastCreatedUnit()
    call SetUnitColor( udg_DoomhammersWolf, PLAYER_COLOR_RED )
    call CameraSetupApplyForPlayer( true, gg_cam_Intro09CageApproach, Player(0), 0 )
    // Blurr the distant view
    call CameraSetFocalDistance( 500.00 )
    call CameraSetDepthOfFieldScale( 300.00 )
    // //
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 1.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 0, 0, 0, 0 )
    call TriggerSleepAction( 1.00 )
    call PlayThematicMusicBJ( "DarkAgents" )
    // //
    call PlaySoundOnUnitBJ( gg_snd_CS_Prologue2_Foley1, 100, udg_Hero_Doomhammer )
    call IssuePointOrderLocBJ( udg_Hero_Doomhammer, "move", GetRectCenter(gg_rct_IntroDH03B) )
    call TriggerSleepAction( 0.20 )
    if ( Trig_IntroCinQ_Func211001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( gg_trg_IntroETMove )
    loop
        exitwhen ( Trig_IntroCinQ_Func213001() )
        call TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 0.25))
    endloop
    if ( Trig_IntroCinQ_Func214001() ) then
        return
    else
        call DoNothing(  )
    endif
    call IssueImmediateOrderBJ( udg_Hero_Doomhammer, "stop" )
    call SetUnitAnimation( udg_Hero_Doomhammer, "cinematic listening one" )
    loop
        exitwhen ( Trig_IntroCinQ_Func217001() )
        call TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 0.25))
    endloop
    if ( Trig_IntroCinQ_Func218001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetupApplyForPlayer( true, gg_cam_Intro10Cage01, Player(0), 0 )
    call PlaySoundOnUnitBJ( gg_snd_CS_Prologue2_Foley201, 100, udg_Hero_Eitrigg )
    // Reset Lens
    call CameraSetFocalDistance( 0.00 )
    call CameraSetDepthOfFieldScale( 0.00 )
    // //
    loop
        exitwhen ( Trig_IntroCinQ_Func225001() )
        call TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 0.25))
    endloop
    if ( Trig_IntroCinQ_Func226001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Eitrigg, "cinematic listening one" )
    call TriggerSleepAction( 0.15 )
    if ( Trig_IntroCinQ_Func229001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Eitrigg, "cinematic standard one" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Eitrigg, "TRIGSTR_2428", gg_snd_WC2Orc08SEitrigg1, "TRIGSTR_2429", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SEitrigg1, 0 )
    if ( Trig_IntroCinQ_Func233001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetupApplyForPlayer( true, gg_cam_Intro10Cage02, Player(0), 0 )
    call SetUnitAnimation( udg_Hero_Eitrigg, "cinematic listening one" )
    call SetUnitAnimation( udg_Hero_Doomhammer, "cinematic standard one" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Doomhammer, "TRIGSTR_2430", gg_snd_WC2Orc08SDoomhammer7, "TRIGSTR_2431", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SDoomhammer7, 0 )
    if ( Trig_IntroCinQ_Func239001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetupApplyForPlayer( true, gg_cam_Intro10Cage01, Player(0), 0 )
    call SetUnitAnimation( udg_Hero_Doomhammer, "cinematic listening one" )
    call SetUnitAnimation( udg_Hero_Eitrigg, "cinematic standard one" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Eitrigg, "TRIGSTR_2432", gg_snd_WC2Orc08SEitrigg2, "TRIGSTR_2433", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SEitrigg2, 0 )
    if ( Trig_IntroCinQ_Func245001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Eitrigg, "cinematic listening one" )
    // No Longer Skippable
    call DisableTrigger( gg_trg_IntroSkipped )
    call IssuePointOrderLocBJ( udg_Hero_Zuljin, "move", GetRectCenter(gg_rct_IntroZuljin04) )
    call IssuePointOrderLocBJ( udg_Hero_Tharbek, "move", GetRectCenter(gg_rct_IntroTharbek03) )
    call IssuePointOrderLocBJ( udg_Hero_Eitrigg, "attack", GetRectCenter(gg_rct_BasePatrol01) )
    call EnableTrigger( gg_trg_Eitrigg_Patrol_A )
    call EnableTrigger( gg_trg_Eitrigg_Patrol_B )
    call EnableTrigger( gg_trg_Eitrigg_Patrol_C )
    call EnableTrigger( gg_trg_Eitrigg_Patrol_D )
    call CameraSetupApplyForPlayerSmooth( true, gg_cam_Intro11, Player(0), 3.00, 1.00, 1.00, 100.00 )
    call TriggerSleepAction( 3.00 )
    // End
    call ConditionalTriggerExecute( gg_trg_IntroCleanUp )
endfunction

//===========================================================================
function InitTrig_IntroCinQ takes nothing returns nothing
    set gg_trg_IntroCinQ = CreateTrigger(  )
    call TriggerAddAction( gg_trg_IntroCinQ, function Trig_IntroCinQ_Actions )
endfunction

//===========================================================================
// Trigger: IntroSkipped
//===========================================================================
function Trig_IntroSkipped_Conditions takes nothing returns boolean
    if ( not ( udg_IntroCinematic == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroSkipped_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_IntroSkipped = true
    call StopSoundBJ( gg_snd_WC2Orc08SRend1, false )
    call StopSoundBJ( gg_snd_WC2Orc08SRend2, false )
    call StopSoundBJ( gg_snd_WC2Orc08SRend3, false )
    call StopSoundBJ( gg_snd_WC2Orc08SRend4, false )
    call StopSoundBJ( gg_snd_WC2Orc08SRend5, false )
    call StopSoundBJ( gg_snd_WC2Orc08STharbek1, false )
    call StopSoundBJ( gg_snd_WC2Orc08STharbek2, false )
    call StopSoundBJ( gg_snd_WC2Orc08SDoomhammer1, false )
    call StopSoundBJ( gg_snd_WC2Orc08SDoomhammer2, false )
    call StopSoundBJ( gg_snd_WC2Orc08SDoomhammer3, false )
    call StopSoundBJ( gg_snd_WC2Orc08SDoomhammer4, false )
    call StopSoundBJ( gg_snd_WC2Orc08SDoomhammer5, false )
    call StopSoundBJ( gg_snd_WC2Orc08SDoomhammer6, false )
    call StopSoundBJ( gg_snd_WC2Orc08SDoomhammer7, false )
    call StopSoundBJ( gg_snd_WC2Orc08SEitrigg1, false )
    call StopSoundBJ( gg_snd_WC2Orc08SEitrigg2, false )
    call StopSoundBJ( gg_snd_WC2Orc08SZuljin1, false )
    call StopSoundBJ( gg_snd_WC2Orc08SZuljin2, false )
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 2.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    call TriggerSleepAction( 2 )
    call ConditionalTriggerExecute( gg_trg_IntroCleanUp )
endfunction

//===========================================================================
function InitTrig_IntroSkipped takes nothing returns nothing
    set gg_trg_IntroSkipped = CreateTrigger(  )
    call TriggerRegisterPlayerEventEndCinematic( gg_trg_IntroSkipped, Player(0) )
    call TriggerAddCondition( gg_trg_IntroSkipped, Condition( function Trig_IntroSkipped_Conditions ) )
    call TriggerAddAction( gg_trg_IntroSkipped, function Trig_IntroSkipped_Actions )
endfunction

//===========================================================================
// Trigger: IntroCleanUp
//===========================================================================
function Trig_IntroCleanUp_Func046C takes nothing returns boolean
    if ( not ( udg_IntroSkipped == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroCleanUp_Func053Func014C takes nothing returns boolean
    if ( not ( RectContainsUnit(gg_rct_IntroDH03B, udg_Hero_Doomhammer) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroCleanUp_Func053Func015C takes nothing returns boolean
    if ( not ( RectContainsUnit(gg_rct_IntroZuljin04, udg_Hero_Zuljin) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroCleanUp_Func053Func016C takes nothing returns boolean
    if ( not ( RectContainsUnit(gg_rct_IntroTharbek03, udg_Hero_Tharbek) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroCleanUp_Func053Func017C takes nothing returns boolean
    if ( not ( RectContainsUnit(gg_rct_IntroEitrigg03, udg_Hero_Eitrigg) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroCleanUp_Func053Func019Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'YTpc' ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroCleanUp_Func053Func019A takes nothing returns nothing
    if ( Trig_IntroCleanUp_Func053Func019Func001C() ) then
        call KillDestructable( GetEnumDestructable() )
    else
    endif
endfunction

function Trig_IntroCleanUp_Func053C takes nothing returns boolean
    if ( not ( udg_IntroSkipped == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroCleanUp_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Game Settings
    set udg_IntroCinematic = false
    call SetSkyModel( null )
    call StopMusicBJ( false )
    call StopSoundBJ( GetLastPlayedSound(), false )
    call ClearMapMusicBJ(  )
    call TriggerSleepAction( 0.25 )
    call ConditionalTriggerExecute( gg_trg_InitMusic )
    call CinematicModeBJ( false, GetPlayersAll() )
    call ConditionalTriggerExecute( gg_trg_OilUIShow )
    call EnableTrigger( gg_trg_Eitrigg_Patrol_A )
    call EnableTrigger( gg_trg_Eitrigg_Patrol_B )
    call EnableTrigger( gg_trg_Eitrigg_Patrol_C )
    call EnableTrigger( gg_trg_Eitrigg_Patrol_D )
    call VolumeGroupResetBJ(  )
    call SetPlayerColorBJ( Player(2), PLAYER_COLOR_RED, false )
    call UseTimeOfDayBJ( true )
    // RemoveExits
    call RemoveUnit( udg_IntroPig )
    call RemoveUnit( udg_Hero_DalRend )
    call RemoveUnit( udg_Hero_Utok )
    call RemoveUnit( udg_IntroGrunt01 )
    call RemoveUnit( udg_IntroGrunt02 )
    call RemoveUnit( udg_IntroTroll01 )
    call RemoveUnit( udg_IntroTroll02 )
    // Unit Settings
    call ShowUnitShow( udg_Hero_Tharbek )
    call SetUnitPathing( udg_Hero_Tharbek, true )
    call ShowUnitShow( udg_Hero_Eitrigg )
    call UnitShareVisionBJ( true, udg_Hero_Garona, udg_Player01 )
    call UnitShareVisionBJ( true, udg_Hero_Eitrigg, udg_Player01 )
    call SetUnitOwner( udg_Hero_Eitrigg, Player(2), false )
    call SetUnitOwner( udg_Hero_Garona, Player(3), false )
    call PauseUnitBJ( true, udg_Hero_Garona )
    call SetUnitAnimation( udg_Hero_Garona, "cinematic trapped" )
    call SetUnitScalePercent( udg_Hero_Garona, 120.00, 120.00, 120.00 )
    call SetUnitOwner( udg_Hero_Zuljin, Player(0), false )
    call IssuePointOrderLocBJ( udg_Hero_Zuljin, "move", GetRectCenter(gg_rct_IntroZuljin04) )
    // ResetDoomhammer
    call BlzSetUnitSkin( udg_Hero_Doomhammer, 'O602' )
    call SetUnitMoveSpeed( udg_Hero_Doomhammer, GetUnitDefaultMoveSpeed(udg_Hero_Doomhammer) )
    call BlzSetUnitRealFieldBJ( udg_Hero_Doomhammer, UNIT_RF_ANIMATION_WALK_SPEED, 230.00 )
    call AddUnitAnimationPropertiesBJ( false, "cinematic", udg_Hero_Doomhammer )
    call RemoveUnit( udg_DoomhammersWolf )
    if ( Trig_IntroCleanUp_Func046C() ) then
        call ConditionalTriggerExecute( gg_trg_IntroAnimReset )
    else
    endif
    // Hide Cinematic Mountains
    call SetDoodadAnimationRectBJ( "death", 'D614', GetPlayableMapRect() )
    call SetDoodadAnimationRectBJ( "death", 'D618', GetPlayableMapRect() )
    call SetDoodadAnimationRectBJ( "death", 'D619', GetPlayableMapRect() )
    call SetDoodadAnimationRectBJ( "death", 'D61A', GetPlayableMapRect() )
    // Skipped
    if ( Trig_IntroCleanUp_Func053C() ) then
        call CameraSetFocalDistance( 0.00 )
        call CameraSetDepthOfFieldScale( 0.00 )
        call ResetUnitLookAt( udg_Hero_DalRend )
        call ResetUnitLookAt( udg_Hero_Doomhammer )
        call ResetUnitLookAt( udg_Hero_Tharbek )
        call ResetUnitLookAt( udg_Hero_Zuljin )
        call IssueTargetOrderBJ( udg_IntroPeon01, "harvest", gg_unit_ngol_0122 )
        call IssueTargetDestructableOrder( udg_IntroPeon02, "harvest", gg_dest_VTlt_0194 )
        call RemoveUnit( udg_IntroPeonWorking )
        call ShowUnitShow( udg_Hero_Garona )
        call SetUnitAnimation( udg_Hero_Garona, "cinematic stand alternate" )
        call ShowUnitShow( udg_Hero_Eitrigg )
        call ConditionalTriggerExecute( gg_trg_IntroAnimReset )
        if ( Trig_IntroCleanUp_Func053Func014C() ) then
            call SetUnitPositionLocFacingBJ( udg_Hero_Doomhammer, GetRectCenter(gg_rct_IntroDH03B), 241.39 )
        else
        endif
        if ( Trig_IntroCleanUp_Func053Func015C() ) then
            call SetUnitPositionLocFacingBJ( udg_Hero_Zuljin, GetRectCenter(gg_rct_IntroZuljin04), 328.92 )
        else
        endif
        if ( Trig_IntroCleanUp_Func053Func016C() ) then
            call SetUnitPositionLocFacingBJ( udg_Hero_Tharbek, GetRectCenter(gg_rct_IntroTharbek03), 236.20 )
        else
        endif
        if ( Trig_IntroCleanUp_Func053Func017C() ) then
            call SetUnitPositionLocFacingBJ( udg_Hero_Eitrigg, GetRectCenter(gg_rct_IntroEitrigg03), 212.08 )
        else
        endif
        // RemoveBlockers
        call EnumDestructablesInRectAll( gg_rct_IntroBlockers, function Trig_IntroCleanUp_Func053Func019A )
        call CameraSetupApplyForPlayer( true, gg_cam_Intro11, Player(0), 0 )
        call IssuePointOrderLocBJ( udg_Hero_Eitrigg, "attack", GetRectCenter(gg_rct_BasePatrol01) )
        call TriggerSleepAction( 0.25 )
        call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 2.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    else
    endif
    // Player Selection
    call SelectUnitAddForPlayer( udg_Hero_Doomhammer, Player(0) )
    call SelectUnitAddForPlayer( udg_Hero_Tharbek, Player(0) )
    call SelectUnitAddForPlayer( udg_Hero_Zuljin, Player(0) )
    call TriggerSleepAction( 1.50 )
    // Quests
    call QueuedTriggerAddBJ( gg_trg_Settlements_Discover_Q, true )
    call ConditionalTriggerExecute( gg_trg_LodgeAttackTimerCreate )
    call QueuedTriggerAddBJ( gg_trg_Trolls_Discover_Q, true )
endfunction

//===========================================================================
function InitTrig_IntroCleanUp takes nothing returns nothing
    set gg_trg_IntroCleanUp = CreateTrigger(  )
    call TriggerAddAction( gg_trg_IntroCleanUp, function Trig_IntroCleanUp_Actions )
endfunction

//===========================================================================
// Trigger: IntroDRPivot
//===========================================================================
function Trig_IntroDRPivot_Conditions takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_Hero_DalRend ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroDRPivot_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call TriggerSleepAction( 0.20 )
    call IssueImmediateOrderBJ( udg_Hero_DalRend, "stop" )
    call SetUnitFacingTimed( udg_Hero_DalRend, 4.32, 0.35 )
    call TriggerSleepAction( 0.35 )
    call SetUnitAnimation( udg_Hero_DalRend, "cinematic listening one" )
endfunction

//===========================================================================
function InitTrig_IntroDRPivot takes nothing returns nothing
    set gg_trg_IntroDRPivot = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_IntroDRPivot, gg_rct_IntroDR02 )
    call TriggerAddCondition( gg_trg_IntroDRPivot, Condition( function Trig_IntroDRPivot_Conditions ) )
    call TriggerAddAction( gg_trg_IntroDRPivot, function Trig_IntroDRPivot_Actions )
endfunction

//===========================================================================
// Trigger: IntroDHPivot
//===========================================================================
function Trig_IntroDHPivot_Conditions takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_Hero_Doomhammer ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroDHPivot_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call TriggerSleepAction( 0.25 )
    call IssueImmediateOrderBJ( udg_Hero_Doomhammer, "stop" )
    call SetUnitFacingToFaceLocTimed( udg_Hero_Doomhammer, GetRectCenter(gg_rct_IntroTharbek02), 1.00 )
    call TriggerSleepAction( 0.25 )
    call SetUnitAnimation( udg_Hero_Doomhammer, "cinematic listening one" )
endfunction

//===========================================================================
function InitTrig_IntroDHPivot takes nothing returns nothing
    set gg_trg_IntroDHPivot = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_IntroDHPivot, gg_rct_IntroDH02 )
    call TriggerAddCondition( gg_trg_IntroDHPivot, Condition( function Trig_IntroDHPivot_Conditions ) )
    call TriggerAddAction( gg_trg_IntroDHPivot, function Trig_IntroDHPivot_Actions )
endfunction

//===========================================================================
// Trigger: IntroUTPivot
//===========================================================================
function Trig_IntroUTPivot_Conditions takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_Hero_Utok ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroUTPivot_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call TriggerSleepAction( 0.20 )
    call IssueImmediateOrderBJ( udg_Hero_Utok, "stop" )
    call SetUnitFacingTimed( udg_Hero_Utok, 202.28, 0.25 )
    call TriggerSleepAction( 0.25 )
    call SetUnitAnimation( udg_Hero_Utok, "cinematic listening one" )
endfunction

//===========================================================================
function InitTrig_IntroUTPivot takes nothing returns nothing
    set gg_trg_IntroUTPivot = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_IntroUTPivot, gg_rct_IntroUtok02 )
    call TriggerAddCondition( gg_trg_IntroUTPivot, Condition( function Trig_IntroUTPivot_Conditions ) )
    call TriggerAddAction( gg_trg_IntroUTPivot, function Trig_IntroUTPivot_Actions )
endfunction

//===========================================================================
// Trigger: IntroZJPivot
//===========================================================================
function Trig_IntroZJPivot_Conditions takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_Hero_Zuljin ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroZJPivot_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call TriggerSleepAction( 0.20 )
    call IssueImmediateOrderBJ( udg_Hero_Zuljin, "stop" )
    call SetUnitFacingTimed( udg_Hero_Zuljin, 56.79, 0.25 )
    call TriggerSleepAction( 0.25 )
    call SetUnitAnimation( udg_Hero_Zuljin, "cinematic listening one" )
endfunction

//===========================================================================
function InitTrig_IntroZJPivot takes nothing returns nothing
    set gg_trg_IntroZJPivot = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_IntroZJPivot, gg_rct_IntroZuljin02 )
    call TriggerAddCondition( gg_trg_IntroZJPivot, Condition( function Trig_IntroZJPivot_Conditions ) )
    call TriggerAddAction( gg_trg_IntroZJPivot, function Trig_IntroZJPivot_Actions )
endfunction

//===========================================================================
// Trigger: IntroTHPivot
//===========================================================================
function Trig_IntroTHPivot_Conditions takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_Hero_Doomhammer ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroTHPivot_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetUnitFacingTimed( udg_Hero_Tharbek, 162.05, 0.50 )
    call TriggerSleepAction( 0.50 )
    call SetUnitAnimation( udg_Hero_Tharbek, "cinematic listening one" )
endfunction

//===========================================================================
function InitTrig_IntroTHPivot takes nothing returns nothing
    set gg_trg_IntroTHPivot = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_IntroTHPivot, gg_rct_IntroTharTurn )
    call TriggerAddCondition( gg_trg_IntroTHPivot, Condition( function Trig_IntroTHPivot_Conditions ) )
    call TriggerAddAction( gg_trg_IntroTHPivot, function Trig_IntroTHPivot_Actions )
endfunction

//===========================================================================
// Trigger: IntroGrunt01Pivot
//===========================================================================
function Trig_IntroGrunt01Pivot_Conditions takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_IntroGrunt01 ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroGrunt01Pivot_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call TriggerSleepAction( 0.20 )
    call IssueImmediateOrderBJ( udg_IntroGrunt01, "stop" )
    call SetUnitFacingTimed( udg_IntroGrunt01, 2.01, 0.25 )
    call TriggerSleepAction( 0.25 )
    call SetUnitAnimation( udg_IntroGrunt01, "cinematic listening one" )
endfunction

//===========================================================================
function InitTrig_IntroGrunt01Pivot takes nothing returns nothing
    set gg_trg_IntroGrunt01Pivot = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_IntroGrunt01Pivot, gg_rct_IntroDRGuardA02 )
    call TriggerAddCondition( gg_trg_IntroGrunt01Pivot, Condition( function Trig_IntroGrunt01Pivot_Conditions ) )
    call TriggerAddAction( gg_trg_IntroGrunt01Pivot, function Trig_IntroGrunt01Pivot_Actions )
endfunction

//===========================================================================
// Trigger: IntroGrunt02Pivot
//===========================================================================
function Trig_IntroGrunt02Pivot_Conditions takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_IntroGrunt02 ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroGrunt02Pivot_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call TriggerSleepAction( 0.20 )
    call IssueImmediateOrderBJ( udg_IntroGrunt02, "stop" )
    call SetUnitFacingTimed( udg_IntroGrunt02, 311.34, 0.25 )
    call TriggerSleepAction( 0.25 )
    call SetUnitAnimation( udg_IntroGrunt02, "cinematic listening one" )
endfunction

//===========================================================================
function InitTrig_IntroGrunt02Pivot takes nothing returns nothing
    set gg_trg_IntroGrunt02Pivot = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_IntroGrunt02Pivot, gg_rct_IntroDRGuardB02 )
    call TriggerAddCondition( gg_trg_IntroGrunt02Pivot, Condition( function Trig_IntroGrunt02Pivot_Conditions ) )
    call TriggerAddAction( gg_trg_IntroGrunt02Pivot, function Trig_IntroGrunt02Pivot_Actions )
endfunction

//===========================================================================
// Trigger: IntroTHAnim
//===========================================================================
function Trig_IntroTHAnim_Conditions takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_Hero_Tharbek ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroTHAnim_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call TriggerSleepAction( 0.25 )
    call SetUnitAnimation( udg_Hero_Tharbek, "cinematic listening one" )
endfunction

//===========================================================================
function InitTrig_IntroTHAnim takes nothing returns nothing
    set gg_trg_IntroTHAnim = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_IntroTHAnim, gg_rct_IntroTharbek02 )
    call TriggerAddCondition( gg_trg_IntroTHAnim, Condition( function Trig_IntroTHAnim_Conditions ) )
    call TriggerAddAction( gg_trg_IntroTHAnim, function Trig_IntroTHAnim_Actions )
endfunction

//===========================================================================
// Trigger: IntroT1Anim
//===========================================================================
function Trig_IntroT1Anim_Conditions takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_IntroTroll01 ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroT1Anim_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call TriggerSleepAction( 0.25 )
    call SetUnitAnimationWithRarity( udg_IntroTroll01, "stand", RARITY_FREQUENT )
endfunction

//===========================================================================
function InitTrig_IntroT1Anim takes nothing returns nothing
    set gg_trg_IntroT1Anim = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_IntroT1Anim, gg_rct_IntroTrollA01 )
    call TriggerAddCondition( gg_trg_IntroT1Anim, Condition( function Trig_IntroT1Anim_Conditions ) )
    call TriggerAddAction( gg_trg_IntroT1Anim, function Trig_IntroT1Anim_Actions )
endfunction

//===========================================================================
// Trigger: IntroT2Anim
//===========================================================================
function Trig_IntroT2Anim_Conditions takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_IntroTroll02 ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroT2Anim_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call TriggerSleepAction( 0.25 )
    call SetUnitAnimationWithRarity( udg_IntroTroll02, "stand", RARITY_FREQUENT )
endfunction

//===========================================================================
function InitTrig_IntroT2Anim takes nothing returns nothing
    set gg_trg_IntroT2Anim = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_IntroT2Anim, gg_rct_IntroTrollB01 )
    call TriggerAddCondition( gg_trg_IntroT2Anim, Condition( function Trig_IntroT2Anim_Conditions ) )
    call TriggerAddAction( gg_trg_IntroT2Anim, function Trig_IntroT2Anim_Actions )
endfunction

//===========================================================================
// Trigger: IntroPig
//===========================================================================
function Trig_IntroPig_Func003001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroPig_Func008001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroPig_Func011001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroPig_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call TriggerSleepAction( 11.00 )
    if ( Trig_IntroPig_Func003001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimationByIndex ( udg_IntroPeon02 , 13 )
    call PlaySoundOnUnitBJ( gg_snd_CS_BG_Camp, 100.00, udg_Hero_Tharbek )
    call IssuePointOrderLocBJ( udg_Hero_Tharbek, "move", GetRectCenter(gg_rct_IntroTharbek01) )
    call TriggerSleepAction( 4.80 )
    if ( Trig_IntroPig_Func008001() ) then
        return
    else
        call DoNothing(  )
    endif
    call IssuePointOrderLocBJ( udg_IntroPig, "move", GetRectCenter(gg_rct_IntroPig02) )
    call TriggerSleepAction( 0.92 )
    if ( Trig_IntroPig_Func011001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimationWithRarity( udg_IntroPeon02, "stand", RARITY_FREQUENT )
endfunction

//===========================================================================
function InitTrig_IntroPig takes nothing returns nothing
    set gg_trg_IntroPig = CreateTrigger(  )
    call TriggerAddAction( gg_trg_IntroPig, function Trig_IntroPig_Actions )
endfunction

//===========================================================================
// Trigger: IntroGroupExit
//===========================================================================
function Trig_IntroGroupExit_Func008001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroGroupExit_Func011001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroGroupExit_Func014001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroGroupExit_Func017001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroGroupExit_Func020001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroGroupExit_Func024001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroGroupExit_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetUnitAnimation( udg_Hero_Utok, "cinematic salute one" )
    call QueueUnitAnimationBJ( udg_Hero_Utok, "cinematic listening one" )
    call PlaySoundOnUnitBJ( gg_snd_CS_H01b_Orc_gesture_v2, 100, udg_Hero_Utok )
    call PlaySoundOnUnitBJ( gg_snd_CS_BG_Camp, 100, udg_Hero_DalRend )
    call IssuePointOrderLocBJ( udg_Hero_DalRend, "move", GetRectCenter(gg_rct_IntroDR03) )
    call TriggerSleepAction( 0.40 )
    if ( Trig_IntroGroupExit_Func008001() ) then
        return
    else
        call DoNothing(  )
    endif
    call IssuePointOrderLocBJ( udg_IntroTroll01, "move", GetRectCenter(gg_rct_IntroTrollA02) )
    call TriggerSleepAction( 0.15 )
    if ( Trig_IntroGroupExit_Func011001() ) then
        return
    else
        call DoNothing(  )
    endif
    call IssuePointOrderLocBJ( udg_IntroTroll02, "move", GetRectCenter(gg_rct_IntroTrollB02) )
    call TriggerSleepAction( 0.40 )
    if ( Trig_IntroGroupExit_Func014001() ) then
        return
    else
        call DoNothing(  )
    endif
    call IssuePointOrderLocBJ( udg_IntroGrunt02, "move", GetRectCenter(gg_rct_IntroDRGuardB03) )
    call TriggerSleepAction( 0.10 )
    if ( Trig_IntroGroupExit_Func017001() ) then
        return
    else
        call DoNothing(  )
    endif
    call IssuePointOrderLocBJ( udg_IntroGrunt01, "move", GetRectCenter(gg_rct_IntroDRGuardA03) )
    call TriggerSleepAction( 0.10 )
    if ( Trig_IntroGroupExit_Func020001() ) then
        return
    else
        call DoNothing(  )
    endif
    call IssuePointOrderLocBJ( udg_Hero_Zuljin, "move", GetRectCenter(gg_rct_IntroZuljin03) )
    call TriggerSleepAction( 0.25 )
    call TriggerSleepAction( 0.45 )
    if ( Trig_IntroGroupExit_Func024001() ) then
        return
    else
        call DoNothing(  )
    endif
    call IssuePointOrderLocBJ( udg_Hero_Utok, "move", GetRectCenter(gg_rct_IntroUtok03) )
endfunction

//===========================================================================
function InitTrig_IntroGroupExit takes nothing returns nothing
    set gg_trg_IntroGroupExit = CreateTrigger(  )
    call TriggerAddAction( gg_trg_IntroGroupExit, function Trig_IntroGroupExit_Actions )
endfunction

//===========================================================================
// Trigger: IntroETMove
//===========================================================================
function Trig_IntroETMove_Func003001 takes nothing returns boolean
    return ( udg_IntroSkipped == true )
endfunction

function Trig_IntroETMove_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call TriggerSleepAction( 2.00 )
    if ( Trig_IntroETMove_Func003001() ) then
        return
    else
        call DoNothing(  )
    endif
    call IssuePointOrderLocBJ( udg_Hero_Eitrigg, "move", GetRectCenter(gg_rct_IntroEitrigg02) )
endfunction

//===========================================================================
function InitTrig_IntroETMove takes nothing returns nothing
    set gg_trg_IntroETMove = CreateTrigger(  )
    call TriggerAddAction( gg_trg_IntroETMove, function Trig_IntroETMove_Actions )
endfunction

//===========================================================================
// Trigger: IntroAnimReset
//===========================================================================
function Trig_IntroAnimReset_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroAnimReset_Func003Func005Func001Func001C takes nothing returns boolean
    if ( ( GetEnumUnit() == udg_Hero_Eitrigg ) ) then
        return true
    endif
    if ( ( GetEnumUnit() == udg_Hero_Zuljin ) ) then
        return true
    endif
    return false
endfunction

function Trig_IntroAnimReset_Func003Func005Func001Func002C takes nothing returns boolean
    if ( not ( GetEnumUnit() == udg_Hero_Doomhammer ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroAnimReset_Func003Func005Func001C takes nothing returns boolean
    if ( not Trig_IntroAnimReset_Func003Func005Func001Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_IntroAnimReset_Func003Func005C takes nothing returns boolean
    if ( not ( GetEnumUnit() == udg_Hero_DalRend ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroAnimReset_Func003A takes nothing returns nothing
    call SetUnitBlendTimeBJ( GetEnumUnit(), 0.15 )
    call AddUnitAnimationPropertiesBJ( false, "cinematic", GetEnumUnit() )
    call SetUnitMoveSpeed( GetEnumUnit(), GetUnitDefaultMoveSpeed(GetEnumUnit()) )
    call ShowUnitShow( GetEnumUnit() )
    if ( Trig_IntroAnimReset_Func003Func005C() ) then
        call BlzSetUnitRealFieldBJ( GetEnumUnit(), UNIT_RF_ANIMATION_WALK_SPEED, 350.00 )
    else
        if ( Trig_IntroAnimReset_Func003Func005Func001C() ) then
            call BlzSetUnitRealFieldBJ( GetEnumUnit(), UNIT_RF_ANIMATION_WALK_SPEED, 320.00 )
        else
            if ( Trig_IntroAnimReset_Func003Func005Func001Func002C() ) then
                call BlzSetUnitRealFieldBJ( GetEnumUnit(), UNIT_RF_ANIMATION_WALK_SPEED, 300.00 )
            else
                call BlzSetUnitRealFieldBJ( GetEnumUnit(), UNIT_RF_ANIMATION_WALK_SPEED, 270.00 )
            endif
        endif
    endif
endfunction

function Trig_IntroAnimReset_Func004A takes nothing returns nothing
    call ResetUnitAnimation( GetEnumUnit() )
endfunction

function Trig_IntroAnimReset_Func007C takes nothing returns boolean
    if ( not ( udg_IntroSkipped == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_IntroAnimReset_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call ForGroupBJ( udg_Intro_Units, function Trig_IntroAnimReset_Func003A )
    call ForGroupBJ( GetUnitsOfPlayerAll(Player(0)), function Trig_IntroAnimReset_Func004A )
    call IssuePointOrderLocBJ( udg_Hero_Zuljin, "move", GetRectCenter(gg_rct_IntroZuljin04) )
    call IssuePointOrderLocBJ( udg_Hero_Eitrigg, "attack", GetRectCenter(gg_rct_BasePatrol01) )
    if ( Trig_IntroAnimReset_Func007C() ) then
        call SetUnitScalePercent( udg_Hero_Doomhammer, 140.00, 140.00, 140.00 )
        call SetUnitScalePercent( udg_Hero_Garona, 120.00, 120.00, 120.00 )
    else
        call SetUnitScalePercent( udg_Hero_Doomhammer, 130.00, 130.00, 130.00 )
        call SetUnitScalePercent( udg_Hero_Garona, 105.00, 105.00, 105.00 )
        call TriggerSleepAction( 0.25 )
        call SetUnitScalePercent( udg_Hero_Doomhammer, 132.00, 132.00, 132.00 )
        call SetUnitScalePercent( udg_Hero_Garona, 110.00, 110.00, 110.00 )
        call TriggerSleepAction( 0.25 )
        call SetUnitScalePercent( udg_Hero_Doomhammer, 138.00, 138.00, 138.00 )
        call SetUnitScalePercent( udg_Hero_Garona, 115.00, 115.00, 115.00 )
        call TriggerSleepAction( 0.25 )
        call SetUnitScalePercent( udg_Hero_Doomhammer, 140.00, 140.00, 140.00 )
        call SetUnitScalePercent( udg_Hero_Garona, 120.00, 120.00, 120.00 )
    endif
endfunction

//===========================================================================
function InitTrig_IntroAnimReset takes nothing returns nothing
    set gg_trg_IntroAnimReset = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_IntroAnimReset, Condition( function Trig_IntroAnimReset_Conditions ) )
    call TriggerAddAction( gg_trg_IntroAnimReset, function Trig_IntroAnimReset_Actions )
endfunction

//===========================================================================
// Trigger: MidCinQ
//===========================================================================
function Trig_MidCinQ_Func009C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(gg_unit_h62A_0198) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidCinQ_Func021001 takes nothing returns boolean
    return ( udg_MidSkipped == true )
endfunction

function Trig_MidCinQ_Func026001 takes nothing returns boolean
    return ( udg_MidSkipped == true )
endfunction

function Trig_MidCinQ_Func032001 takes nothing returns boolean
    return ( udg_MidSkipped == true )
endfunction

function Trig_MidCinQ_Func035001 takes nothing returns boolean
    return ( udg_MidSkipped == true )
endfunction

function Trig_MidCinQ_Func038001 takes nothing returns boolean
    return ( udg_MidSkipped == true )
endfunction

function Trig_MidCinQ_Func043C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_Hero_Doomhammer) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidCinQ_Func044C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_Hero_Zuljin) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidCinQ_Func047A takes nothing returns nothing
    call PauseUnitBJ( false, GetEnumUnit() )
    call SetUnitBlendTimeBJ( GetEnumUnit(), 0.25 )
    call AddUnitAnimationPropertiesBJ( true, "cinematic", GetEnumUnit() )
    call BlzSetUnitRealFieldBJ( GetEnumUnit(), UNIT_RF_ANIMATION_WALK_SPEED, 100.00 )
    call SetUnitMoveSpeed( GetEnumUnit(), 100.00 )
endfunction

function Trig_MidCinQ_Func051001 takes nothing returns boolean
    return ( udg_MidSkipped == true )
endfunction

function Trig_MidCinQ_Func059001 takes nothing returns boolean
    return ( RectContainsUnit(gg_rct_MidAnduin03, udg_Hero_Anduin) == true )
endfunction

function Trig_MidCinQ_Func060001 takes nothing returns boolean
    return ( udg_MidSkipped == true )
endfunction

function Trig_MidCinQ_Func062001 takes nothing returns boolean
    return ( RectContainsUnit(gg_rct_MidDH02, udg_Hero_Doomhammer) == true )
endfunction

function Trig_MidCinQ_Func063001 takes nothing returns boolean
    return ( udg_MidSkipped == true )
endfunction

function Trig_MidCinQ_Func066001 takes nothing returns boolean
    return ( udg_MidSkipped == true )
endfunction

function Trig_MidCinQ_Func070001 takes nothing returns boolean
    return ( udg_MidSkipped == true )
endfunction

function Trig_MidCinQ_Func075001 takes nothing returns boolean
    return ( udg_MidSkipped == true )
endfunction

function Trig_MidCinQ_Func078001 takes nothing returns boolean
    return ( udg_MidSkipped == true )
endfunction

function Trig_MidCinQ_Func083001 takes nothing returns boolean
    return ( udg_MidSkipped == true )
endfunction

function Trig_MidCinQ_Func088001 takes nothing returns boolean
    return ( udg_MidSkipped == true )
endfunction

function Trig_MidCinQ_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Settings
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 2.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    call TriggerSleepAction( 2.00 )
    // Setup
    call ConditionalTriggerExecute( gg_trg_OilUIHide )
    call CinematicModeBJ( true, GetPlayersAll() )
    call SetCineModeVolumeGroupsBJ(  )
    if ( Trig_MidCinQ_Func009C() ) then
        call CameraSetupApplyForPlayer( true, gg_cam_Mid01Oversee, Player(0), 0 )
    else
        call CameraSetupApplyForPlayer( true, gg_cam_Mid01OverseeB, Player(0), 0 )
    endif
    call ConditionalTriggerExecute( gg_trg_MidSetup )
    call TriggerSleepAction( 0.25 )
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 2.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    set udg_MidCinematic = true
    call TriggerSleepAction( 2.00 )
    call PlayThematicMusicBJ( "Warcraft2\\Music\\OrcCinematicThemeA.mp3" )
    // Skippable
    call EnableTrigger( gg_trg_MidSkipped )
    call SetUnitAnimation( udg_Hero_Kurdran, "cinematic standard one alternate" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Kurdran, "TRIGSTR_2563", gg_snd_WC2Orc08SKurdran1, "TRIGSTR_2564", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SKurdran1, 0 )
    if ( Trig_MidCinQ_Func021001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Kurdran, "cinematic stand alternate 1" )
    call SetUnitAnimation( udg_Hero_Anduin, "cinematic standard one alternate" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Anduin, "TRIGSTR_2565", gg_snd_WC2Orc08SLothar1, "TRIGSTR_2566", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SLothar1, 0 )
    if ( Trig_MidCinQ_Func026001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetupApplyForPlayer( true, gg_cam_Mid02, Player(0), 0 )
    call SetUnitAnimation( udg_Hero_Kurdran, "cinematic standard one alternate" )
    call SetUnitAnimation( udg_Hero_Anduin, "cinematic listening one" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Kurdran, "TRIGSTR_2569", gg_snd_WC2Orc08SKurdran2, "TRIGSTR_2570", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SKurdran2, 0 )
    if ( Trig_MidCinQ_Func032001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetupApplyForPlayerSmooth( true, gg_cam_Mid03, Player(0), 5.00, 1.00, 1.00, 100.00 )
    call TriggerSleepAction( 4.00 )
    if ( Trig_MidCinQ_Func035001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 1.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    call TriggerSleepAction( 1.00 )
    if ( Trig_MidCinQ_Func038001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetupApplyForPlayer( true, gg_cam_Mid04A, Player(0), 0 )
    call SetStackedSoundBJ( false, gg_snd_ConstructionLoop1, gg_rct_MidAlliance )
    call SetUnitPositionLocFacingBJ( udg_Hero_Anduin, GetRectCenter(gg_rct_MidAnduin02), 0.00 )
    call SetUnitPositionLocFacingBJ( udg_Hero_Kurdran, GetRectCenter(gg_rct_MidKurdran02), 21.96 )
    if ( Trig_MidCinQ_Func043C() ) then
        call SetUnitPositionLocFacingBJ( udg_Hero_Doomhammer, GetRectCenter(gg_rct_MidDH01), 180.00 )
    else
        call ReviveHeroLoc( udg_Hero_Doomhammer, GetRectCenter(gg_rct_MidDH01), false )
        call SetUnitFacingTimed( udg_Hero_Doomhammer, 180.00, 0 )
    endif
    if ( Trig_MidCinQ_Func044C() ) then
        call SetUnitPositionLocFacingBJ( udg_Hero_Zuljin, GetRectCenter(gg_rct_MidZuljin01), 180.00 )
    else
        call ReviveHeroLoc( udg_Hero_Zuljin, GetRectCenter(gg_rct_MidZuljin01), false )
        call SetUnitFacingTimed( udg_Hero_Zuljin, 180.00, 0 )
    endif
    call PauseUnitBJ( false, udg_Hero_Doomhammer )
    call PauseUnitBJ( false, udg_Hero_Zuljin )
    call ForGroupBJ( udg_Mid_Units, function Trig_MidCinQ_Func047A )
    call SetUnitAnimation( udg_Hero_Kurdran, "cinematic stand alternate 1" )
    call SetUnitAnimation( udg_Hero_Zuljin, "cinematic listening one" )
    call TriggerSleepAction( 0.50 )
    if ( Trig_MidCinQ_Func051001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetupApplyForPlayerSmooth( true, gg_cam_Mid04B, Player(0), 5.00, 0, 1.00, 100.00 )
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 1.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    call IssuePointOrderLocBJ( udg_Hero_Anduin, "move", GetRectCenter(gg_rct_MidAnduin03) )
    call PlaySoundOnUnitBJ( gg_snd_CS_Prologue2_Foley2, 80.00, udg_Hero_Doomhammer )
    call IssuePointOrderLocBJ( udg_Hero_Doomhammer, "move", GetRectCenter(gg_rct_MidDH02) )
    call PlaySoundOnUnitBJ( gg_snd_CS_Prologue2_Foley201, 80.00, udg_Hero_Zuljin )
    call IssuePointOrderLocBJ( udg_Hero_Zuljin, "move", GetRectCenter(gg_rct_MidZuljin02) )
    loop
        exitwhen ( Trig_MidCinQ_Func059001() )
        call TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 0.25))
    endloop
    if ( Trig_MidCinQ_Func060001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Anduin, "cinematic listening one" )
    loop
        exitwhen ( Trig_MidCinQ_Func062001() )
        call TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 0.25))
    endloop
    if ( Trig_MidCinQ_Func063001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Doomhammer, "cinematic listening one" )
    call TriggerSleepAction( 0.25 )
    if ( Trig_MidCinQ_Func066001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Doomhammer, "cinematic standard one" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Doomhammer, "TRIGSTR_2571", gg_snd_WC2Orc08SDoomhammer10, "TRIGSTR_2572", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SDoomhammer10, 0 )
    if ( Trig_MidCinQ_Func070001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Anduin, "cinematic standard one" )
    call SetUnitAnimation( udg_Hero_Doomhammer, "cinematic listening one" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Anduin, "TRIGSTR_2573", gg_snd_WC2Orc08SLothar2, "TRIGSTR_2574", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SLothar2, 0 )
    if ( Trig_MidCinQ_Func075001() ) then
        return
    else
        call DoNothing(  )
    endif
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Anduin, "TRIGSTR_2575", gg_snd_WC2Orc08SLothar3, "TRIGSTR_2576", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SLothar3, 0 )
    if ( Trig_MidCinQ_Func078001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Doomhammer, "cinematic standard one" )
    call SetUnitAnimation( udg_Hero_Anduin, "cinematic listening one" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Doomhammer, "TRIGSTR_2577", gg_snd_WC2Orc08SDoomhammer11, "TRIGSTR_2578", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SDoomhammer11, 0 )
    if ( Trig_MidCinQ_Func083001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Anduin, "cinematic standard one" )
    call SetUnitAnimation( udg_Hero_Doomhammer, "cinematic listening one" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Anduin, "TRIGSTR_2579", gg_snd_WC2Orc08SLothar4, "TRIGSTR_2580", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SLothar4, 2.00 )
    if ( Trig_MidCinQ_Func088001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetupApplyForPlayerSmooth( true, gg_cam_Mid05, Player(0), 3.00, 0, 0.50, 100.00 )
    call SetUnitAnimation( udg_Hero_Anduin, "spell" )
    // Not Skippable
    call DisableTrigger( gg_trg_MidSkipped )
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 3.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    call TriggerSleepAction( 3.00 )
    // End
    call ConditionalTriggerExecute( gg_trg_MidCleanUp )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_MidCinQ takes nothing returns nothing
    set gg_trg_MidCinQ = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MidCinQ, function Trig_MidCinQ_Actions )
endfunction

//===========================================================================
// Trigger: MidSetup
//===========================================================================
function Trig_MidSetup_Func006Func001C takes nothing returns boolean
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_PEON) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidSetup_Func006A takes nothing returns nothing
    if ( Trig_MidSetup_Func006Func001C() ) then
        call SetUnitPositionLoc( GetEnumUnit(), GetRandomLocInRect(gg_rct_PlayerRelocate) )
    else
    endif
endfunction

function Trig_MidSetup_Func007Func001C takes nothing returns boolean
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidSetup_Func007A takes nothing returns nothing
    if ( Trig_MidSetup_Func007Func001C() ) then
        call RemoveUnit( GetEnumUnit() )
    else
    endif
endfunction

function Trig_MidSetup_Func008Func001C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(GetEnumUnit()) == true ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_PEON) == false ) ) then
        return false
    endif
    if ( not ( RectContainsUnit(gg_rct_PlayerBase, GetEnumUnit()) == false ) ) then
        return false
    endif
    if ( not ( RectContainsUnit(gg_rct_PlayerRelocateNoA, GetEnumUnit()) == false ) ) then
        return false
    endif
    if ( not ( RectContainsUnit(gg_rct_PlayerRelocateNoB, GetEnumUnit()) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidSetup_Func008A takes nothing returns nothing
    if ( Trig_MidSetup_Func008Func001C() ) then
        call SetUnitPositionLoc( GetEnumUnit(), GetRandomLocInRect(gg_rct_PlayerRelocate) )
    else
    endif
endfunction

function Trig_MidSetup_Func009A takes nothing returns nothing
    call RemoveUnit( GetEnumUnit() )
endfunction

function Trig_MidSetup_Func010A takes nothing returns nothing
    call ShowUnitShow( GetEnumUnit() )
    call PauseUnitBJ( false, GetEnumUnit() )
endfunction

function Trig_MidSetup_Func013Func005Func001Func002C takes nothing returns boolean
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'h60J' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'h60K' ) ) then
        return true
    endif
    return false
endfunction

function Trig_MidSetup_Func013Func005Func001C takes nothing returns boolean
    if ( not Trig_MidSetup_Func013Func005Func001Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_MidSetup_Func013Func005Func003C takes nothing returns boolean
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'h60B' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'hrdh' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'h60L' ) ) then
        return true
    endif
    return false
endfunction

function Trig_MidSetup_Func013Func005C takes nothing returns boolean
    if ( not Trig_MidSetup_Func013Func005Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_MidSetup_Func013A takes nothing returns nothing
    call SetUnitBlendTimeBJ( GetEnumUnit(), 0.25 )
    call AddUnitAnimationPropertiesBJ( true, "cinematic", GetEnumUnit() )
    call BlzSetUnitRealFieldBJ( GetEnumUnit(), UNIT_RF_ANIMATION_WALK_SPEED, 100.00 )
    call SetUnitMoveSpeed( GetEnumUnit(), 100.00 )
    if ( Trig_MidSetup_Func013Func005C() ) then
        call SetUnitAnimationWithRarity( GetEnumUnit(), "stand", RARITY_FREQUENT )
    else
        if ( Trig_MidSetup_Func013Func005Func001C() ) then
            call SetUnitAnimation( GetEnumUnit(), "cinematic listening one" )
        else
        endif
    endif
endfunction

function Trig_MidSetup_Actions takes nothing returns nothing
    call SetSkyModel( "Environment\\Sky\\LordaeronSummerSky\\LordaeronSummerSky.mdl" )
    call SetStackedSoundBJ( true, gg_snd_ConstructionLoop1, gg_rct_MidAlliance )
    call PauseAllUnitsBJ( true )
    set udg_Selection_Player = GetUnitsSelectedAll(udg_Player01)
    call ClearSelectionForPlayer( udg_Player01 )
    call ForGroupBJ( GetUnitsInRectOfPlayer(gg_rct_MidPlayerClear, udg_Player01), function Trig_MidSetup_Func006A )
    call ForGroupBJ( GetUnitsInRectOfPlayer(gg_rct_MidPlayerClear, udg_Player01), function Trig_MidSetup_Func007A )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_Player01), function Trig_MidSetup_Func008A )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_PlayerTribeWarriors), function Trig_MidSetup_Func009A )
    call ForGroupBJ( udg_Mid_Units, function Trig_MidSetup_Func010A )
    call SetUnitPositionLocFacingBJ( udg_Hero_Anduin, GetRectCenter(gg_rct_MidAnduin01), 290.30 )
    call SetUnitPositionLocFacingBJ( udg_Hero_Kurdran, GetRectCenter(gg_rct_MidKurdran01), 210.19 )
    call ForGroupBJ( udg_Mid_Units, function Trig_MidSetup_Func013A )
    call SetUnitAnimation( udg_Hero_Anduin, "cinematic listening one" )
    call SetUnitAnimation( udg_Hero_Kurdran, "cinematic listening one" )
    call SetDoodadAnimationRectBJ( "stand", 'NOfp', gg_rct_CampfireControl )
    call SetUnitAnimation( gg_unit_h005_0027, "birth" )
    call SetUnitAnimation( gg_unit_h005_0108, "birth" )
    call SetUnitAnimation( gg_unit_h005_0034, "birth" )
    call SetUnitAnimation( gg_unit_h004_0111, "birth upgrade first" )
    call SetUnitAnimation( gg_unit_h60Z_0240, "birth upgrade first" )
    call SetUnitAnimation( gg_unit_h60Z_0241, "birth upgrade first" )
    call SetUnitInvulnerable( udg_Hero_Anduin, true )
    call SetUnitInvulnerable( udg_Hero_Doomhammer, true )
    call SetUnitInvulnerable( udg_Hero_Kurdran, true )
    call SetUnitInvulnerable( udg_Hero_Zuljin, true )
    call SetUnitInvulnerable( gg_unit_h626_0248, true )
endfunction

//===========================================================================
function InitTrig_MidSetup takes nothing returns nothing
    set gg_trg_MidSetup = CreateTrigger(  )
    call DisableTrigger( gg_trg_MidSetup )
    call TriggerAddAction( gg_trg_MidSetup, function Trig_MidSetup_Actions )
endfunction

//===========================================================================
// Trigger: MidSkipped
//===========================================================================
function Trig_MidSkipped_Conditions takes nothing returns boolean
    if ( not ( udg_MidCinematic == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidSkipped_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_MidSkipped = true
    call StopSoundBJ( gg_snd_WC2Orc08SKurdran1, false )
    call StopSoundBJ( gg_snd_WC2Orc08SKurdran2, false )
    call StopSoundBJ( gg_snd_WC2Orc08SLothar1, false )
    call StopSoundBJ( gg_snd_WC2Orc08SLothar2, false )
    call StopSoundBJ( gg_snd_WC2Orc08SLothar3, false )
    call StopSoundBJ( gg_snd_WC2Orc08SLothar4, false )
    call StopSoundBJ( gg_snd_WC2Orc08SDoomhammer11, false )
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 2.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    call TriggerSleepAction( 2 )
    call ConditionalTriggerExecute( gg_trg_MidCleanUp )
endfunction

//===========================================================================
function InitTrig_MidSkipped takes nothing returns nothing
    set gg_trg_MidSkipped = CreateTrigger(  )
    call DisableTrigger( gg_trg_MidSkipped )
    call TriggerRegisterPlayerEventEndCinematic( gg_trg_MidSkipped, Player(0) )
    call TriggerAddCondition( gg_trg_MidSkipped, Condition( function Trig_MidSkipped_Conditions ) )
    call TriggerAddAction( gg_trg_MidSkipped, function Trig_MidSkipped_Actions )
endfunction

//===========================================================================
// Trigger: MidZuljinAnim
//===========================================================================
function Trig_MidZuljinAnim_Conditions takes nothing returns boolean
    if ( not ( udg_MidCinematic == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidZuljinAnim_Func003001 takes nothing returns boolean
    return ( RectContainsUnit(gg_rct_MidZuljin02, udg_Hero_Zuljin) == true )
endfunction

function Trig_MidZuljinAnim_Func004001 takes nothing returns boolean
    return ( udg_MidSkipped == true )
endfunction

function Trig_MidZuljinAnim_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    loop
        exitwhen ( Trig_MidZuljinAnim_Func003001() )
        call TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 0.25))
    endloop
    if ( Trig_MidZuljinAnim_Func004001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Zuljin, "cinematic listening one" )
endfunction

//===========================================================================
function InitTrig_MidZuljinAnim takes nothing returns nothing
    set gg_trg_MidZuljinAnim = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_MidZuljinAnim, Condition( function Trig_MidZuljinAnim_Conditions ) )
    call TriggerAddAction( gg_trg_MidZuljinAnim, function Trig_MidZuljinAnim_Actions )
endfunction

//===========================================================================
// Trigger: MidCleanUp
//===========================================================================
function Trig_MidCleanUp_Func062001002 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == true )
endfunction

function Trig_MidCleanUp_Func062A takes nothing returns nothing
    call ResetUnitAnimation( GetEnumUnit() )
endfunction

function Trig_MidCleanUp_Func063Func001C takes nothing returns boolean
    if ( not ( GetEnumUnit() != udg_Hero_Doomhammer ) ) then
        return false
    endif
    if ( not ( GetEnumUnit() != udg_Hero_Zuljin ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidCleanUp_Func063A takes nothing returns nothing
    if ( Trig_MidCleanUp_Func063Func001C() ) then
        call SelectUnitAddForPlayer( GetEnumUnit(), udg_Player01 )
    else
    endif
endfunction

function Trig_MidCleanUp_Func064Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'OTip' ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidCleanUp_Func064A takes nothing returns nothing
    if ( Trig_MidCleanUp_Func064Func001C() ) then
        call KillDestructable( GetEnumDestructable() )
    else
    endif
endfunction

function Trig_MidCleanUp_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call QueuedTriggerRemoveBJ( gg_trg_MidCinQ )
    // Game Settings
    set udg_MidCinematic = false
    call SetSkyModel( null )
    call EndThematicMusicBJ(  )
    call StopSoundBJ( GetLastPlayedSound(), true )
    call CinematicModeBJ( false, GetPlayersAll() )
    call ConditionalTriggerExecute( gg_trg_OilUIShow )
    call VolumeGroupResetBJ(  )
    call ResetToGameCameraForPlayer( Player(0), 0 )
    call CameraSetupApplyForPlayer( true, gg_cam_MidOutro, Player(0), 0 )
    // Unit Settings
    call PauseAllUnitsBJ( false )
    call PauseUnitBJ( true, gg_unit_hbot_0115 )
    call PauseUnitBJ( true, gg_unit_hbot_0114 )
    call PauseUnitBJ( true, udg_Hero_Garona )
    call EnableTrigger( gg_trg_MidHeroLife )
    call SetUnitInvulnerable( udg_Hero_Anduin, false )
    call SetUnitInvulnerable( udg_Hero_Doomhammer, false )
    call SetUnitInvulnerable( udg_Hero_Kurdran, false )
    call SetUnitInvulnerable( udg_Hero_Zuljin, false )
    call SetUnitInvulnerable( udg_Hero_Eitrigg, false )
    call SetUnitInvulnerable( gg_unit_h626_0248, false )
    call ConditionalTriggerExecute( gg_trg_MidAnimReset )
    call SetUnitPositionLocFacingBJ( udg_Hero_Anduin, GetRectCenter(gg_rct_MidAnduin04), 92.04 )
    call SetUnitPositionLocFacingBJ( udg_Hero_Doomhammer, GetRectCenter(gg_rct_MidDH03), 266.34 )
    call SetUnitPositionLocFacingBJ( udg_Hero_Kurdran, GetRectCenter(gg_rct_KurdranMidOut), 76.51 )
    call SetUnitPositionLocFacingBJ( udg_Hero_Zuljin, GetRectCenter(gg_rct_MidZuljin03), 275.51 )
    call UnitRemoveAbilityBJ( 'A63Y', udg_Hero_Zuljin )
    call SetUnitOwner( udg_Hero_Anduin, udg_PlayerMidHeroesAlliance, false )
    call SetUnitOwner( udg_Hero_Doomhammer, udg_PlayerMidHeroesOrc, false )
    call SetUnitOwner( udg_Hero_Kurdran, udg_PlayerMidKurdran, false )
    call SetUnitOwner( udg_Hero_Zuljin, udg_PlayerMidHeroesOrc, false )
    call SetUnitOwner( udg_Hero_Eitrigg, udg_Player01, false )
    call SetPlayerUnitAvailableBJ( 'O61P', false, udg_Player01 )
    call IssueTargetOrderBJ( udg_Hero_Anduin, "attack", udg_Hero_Doomhammer )
    call IssueTargetOrderBJ( udg_Hero_Kurdran, "attack", udg_Hero_Zuljin )
    call IssueTargetOrderBJ( udg_Hero_Doomhammer, "attack", udg_Hero_Anduin )
    call IssueTargetOrderBJ( udg_Hero_Zuljin, "attack", udg_Hero_Kurdran )
    call EnableTrigger( gg_trg_MidHeroesAttack )
    call DisableTrigger( gg_trg_Eitrigg_Patrol_A )
    call DisableTrigger( gg_trg_Eitrigg_Patrol_B )
    call DisableTrigger( gg_trg_Eitrigg_Patrol_C )
    call DisableTrigger( gg_trg_Eitrigg_Patrol_D )
    call CreateNUnitsAtLoc( 1, 'h60B', udg_PlayerNoL, GetRectCenter(gg_rct_MidAnduinGuard02), 115.83 )
    call CreateNUnitsAtLoc( 1, 'h60B', udg_PlayerNoL, GetRectCenter(gg_rct_MidAnduinGuard03), 115.83 )
    call CreateNUnitsAtLoc( 1, 'h60K', udg_PlayerNoL, GetRectCenter(gg_rct_MidAnduinGuard04), 115.15 )
    call UnitShareVisionBJ( true, udg_Hero_Doomhammer, udg_Player01 )
    call UnitShareVisionBJ( true, udg_Hero_Zuljin, udg_Player01 )
    call SetUnitPositionLocFacingBJ( udg_AllianceGuard03, GetRectCenter(gg_rct_AllianceGuard03), 256.62 )
    call SetUnitPositionLocFacingBJ( udg_AllianceGuard04, GetRectCenter(gg_rct_AllianceGuard04), 37.00 )
    call SetUnitPositionLocFacingBJ( udg_AllianceGuard05, GetRectCenter(gg_rct_AllianceGuard05), 320.00 )
    call SetUnitPositionLocFacingBJ( udg_AllianceGuard06, GetRectCenter(gg_rct_AllianceGuard06), 0.00 )
    call SetUnitPositionLocFacingBJ( udg_AllianceGuard07, GetRectCenter(gg_rct_AllianceGuard07), 0.00 )
    call SetUnitPositionLocFacingBJ( udg_AllianceGuard08, GetRectCenter(gg_rct_AllianceGuard08), 230.60 )
    call SetUnitPositionLocFacingBJ( udg_AllianceGuard09, GetRectCenter(gg_rct_AllianceGuard09), 265.09 )
    call EnableTrigger( gg_trg_MidHeroesExit01Jass )
    call SuspendHeroXPBJ( false, udg_Hero_Doomhammer )
    call SuspendHeroXPBJ( false, udg_Hero_Zuljin )
    call SuspendHeroXPBJ( true, udg_Hero_Eitrigg )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_MidAlliance, Condition(function Trig_MidCleanUp_Func062001002)), function Trig_MidCleanUp_Func062A )
    call ForGroupBJ( udg_Selection_Player, function Trig_MidCleanUp_Func063A )
    call EnumDestructablesInRectAll( gg_rct_MidPlatforms, function Trig_MidCleanUp_Func064A )
    call TriggerSleepAction( 0.25 )
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 2.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    call DisableTrigger( gg_trg_EitriggLife )
    call ConditionalTriggerExecute( gg_trg_MidChase )
    call ConditionalTriggerExecute( gg_trg_MidSpawnControl )
    call EnableTrigger( gg_trg_MidSpawnOrder )
    call TriggerSleepAction( 2.00 )
    call QueuedTriggerAddBJ( gg_trg_Survive_Discover_Q, true )
    call QueuedTriggerAddBJ( gg_trg_EitriggAquire, true )
endfunction

//===========================================================================
function InitTrig_MidCleanUp takes nothing returns nothing
    set gg_trg_MidCleanUp = CreateTrigger(  )
    call TriggerAddAction( gg_trg_MidCleanUp, function Trig_MidCleanUp_Actions )
endfunction

//===========================================================================
// Trigger: MidAnimReset
//===========================================================================
function Trig_MidAnimReset_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidAnimReset_Func005Func006Func001Func001Func001Func001Func001Func002C takes nothing returns boolean
    if ( ( GetEnumUnit() == udg_Hero_Doomhammer ) ) then
        return true
    endif
    return false
endfunction

function Trig_MidAnimReset_Func005Func006Func001Func001Func001Func001Func001C takes nothing returns boolean
    if ( not Trig_MidAnimReset_Func005Func006Func001Func001Func001Func001Func001Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_MidAnimReset_Func005Func006Func001Func001Func001Func001Func003C takes nothing returns boolean
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'h60J' ) ) then
        return true
    endif
    return false
endfunction

function Trig_MidAnimReset_Func005Func006Func001Func001Func001Func001C takes nothing returns boolean
    if ( not Trig_MidAnimReset_Func005Func006Func001Func001Func001Func001Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_MidAnimReset_Func005Func006Func001Func001Func001Func003C takes nothing returns boolean
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'e601' ) ) then
        return true
    endif
    return false
endfunction

function Trig_MidAnimReset_Func005Func006Func001Func001Func001C takes nothing returns boolean
    if ( not Trig_MidAnimReset_Func005Func006Func001Func001Func001Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_MidAnimReset_Func005Func006Func001Func001Func003C takes nothing returns boolean
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'h60B' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'h60K' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'hcth' ) ) then
        return true
    endif
    return false
endfunction

function Trig_MidAnimReset_Func005Func006Func001Func001C takes nothing returns boolean
    if ( not Trig_MidAnimReset_Func005Func006Func001Func001Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_MidAnimReset_Func005Func006Func001Func003C takes nothing returns boolean
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'hrdh' ) ) then
        return true
    endif
    if ( ( GetEnumUnit() == udg_Hero_Zuljin ) ) then
        return true
    endif
    return false
endfunction

function Trig_MidAnimReset_Func005Func006Func001C takes nothing returns boolean
    if ( not Trig_MidAnimReset_Func005Func006Func001Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_MidAnimReset_Func005Func006Func003C takes nothing returns boolean
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'h60L' ) ) then
        return true
    endif
    return false
endfunction

function Trig_MidAnimReset_Func005Func006C takes nothing returns boolean
    if ( not Trig_MidAnimReset_Func005Func006Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_MidAnimReset_Func005A takes nothing returns nothing
    call SetUnitBlendTimeBJ( GetEnumUnit(), 0.15 )
    call AddUnitAnimationPropertiesBJ( false, "cinematic", GetEnumUnit() )
    call ResetUnitAnimation( GetEnumUnit() )
    call ResetUnitLookAt( GetEnumUnit() )
    call SetUnitMoveSpeed( GetEnumUnit(), GetUnitDefaultMoveSpeed(GetEnumUnit()) )
    if ( Trig_MidAnimReset_Func005Func006C() ) then
        call BlzSetUnitRealFieldBJ( GetEnumUnit(), UNIT_RF_ANIMATION_WALK_SPEED, 350.00 )
    else
        if ( Trig_MidAnimReset_Func005Func006Func001C() ) then
            call BlzSetUnitRealFieldBJ( GetEnumUnit(), UNIT_RF_ANIMATION_WALK_SPEED, 320.00 )
        else
            if ( Trig_MidAnimReset_Func005Func006Func001Func001C() ) then
                call BlzSetUnitRealFieldBJ( GetEnumUnit(), UNIT_RF_ANIMATION_WALK_SPEED, 270.00 )
            else
                if ( Trig_MidAnimReset_Func005Func006Func001Func001Func001C() ) then
                    call BlzSetUnitRealFieldBJ( GetEnumUnit(), UNIT_RF_ANIMATION_WALK_SPEED, 220.00 )
                else
                    if ( Trig_MidAnimReset_Func005Func006Func001Func001Func001Func001C() ) then
                        call BlzSetUnitRealFieldBJ( GetEnumUnit(), UNIT_RF_ANIMATION_WALK_SPEED, 190.00 )
                    else
                        if ( Trig_MidAnimReset_Func005Func006Func001Func001Func001Func001Func001C() ) then
                            call BlzSetUnitRealFieldBJ( GetEnumUnit(), UNIT_RF_ANIMATION_WALK_SPEED, 300.00 )
                        else
                        endif
                    endif
                endif
            endif
        endif
    endif
endfunction

function Trig_MidAnimReset_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call GroupAddUnitSimple( udg_Hero_Doomhammer, udg_Mid_Units )
    call GroupAddUnitSimple( udg_Hero_Zuljin, udg_Mid_Units )
    call ForGroupBJ( udg_Mid_Units, function Trig_MidAnimReset_Func005A )
endfunction

//===========================================================================
function InitTrig_MidAnimReset takes nothing returns nothing
    set gg_trg_MidAnimReset = CreateTrigger(  )
    call DisableTrigger( gg_trg_MidAnimReset )
    call TriggerAddCondition( gg_trg_MidAnimReset, Condition( function Trig_MidAnimReset_Conditions ) )
    call TriggerAddAction( gg_trg_MidAnimReset, function Trig_MidAnimReset_Actions )
endfunction

//===========================================================================
// Trigger: MidChase
//===========================================================================
function Trig_MidChase_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidChase_Func010001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_MidChase_Func011A takes nothing returns nothing
    call SetUnitMoveSpeed( GetEnumUnit(), 200.00 )
    call BlzSetUnitRealFieldBJ( GetEnumUnit(), UNIT_RF_ANIMATION_WALK_SPEED, 200.00 )
endfunction

function Trig_MidChase_Func014001 takes nothing returns boolean
    return ( RectContainsUnit(gg_rct_MidCombat01, udg_Hero_Doomhammer) == true )
endfunction

function Trig_MidChase_Func015001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_MidChase_Func016001 takes nothing returns boolean
    return ( RectContainsUnit(gg_rct_MidCombat01, udg_Hero_Zuljin) == true )
endfunction

function Trig_MidChase_Func017001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_MidChase_Func021001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_MidChase_Func024001 takes nothing returns boolean
    return ( RectContainsUnit(gg_rct_MidCombat02, udg_Hero_Doomhammer) == true )
endfunction

function Trig_MidChase_Func025001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_MidChase_Func026001 takes nothing returns boolean
    return ( RectContainsUnit(gg_rct_MidCombat02, udg_Hero_Zuljin) == true )
endfunction

function Trig_MidChase_Func027001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_MidChase_Func031001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_MidChase_Func043001 takes nothing returns boolean
    return ( RectContainsUnit(gg_rct_MidDHFinalLines, udg_Hero_Doomhammer) == true )
endfunction

function Trig_MidChase_Func044001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_MidChase_Func050Func003001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_MidChase_Func050C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_Hero_Eitrigg) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidChase_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call GroupAddUnitSimple( udg_Hero_Anduin, udg_Mid_Chase )
    call GroupAddUnitSimple( udg_Hero_Doomhammer, udg_Mid_Chase )
    call GroupAddUnitSimple( udg_Hero_Kurdran, udg_Mid_Chase )
    call GroupAddUnitSimple( udg_Hero_Zuljin, udg_Mid_Chase )
    // This prevents the player cheesing
    call StartTimerBJ( udg_MidHeroesInsurance, false, 210.00 )
    call EnableTrigger( gg_trg_MidHeroesAttack )
    call TriggerSleepAction( 20.00 )
    if ( Trig_MidChase_Func010001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ForGroupBJ( udg_Mid_Chase, function Trig_MidChase_Func011A )
    call DisableTrigger( gg_trg_MidHeroesAttack )
    call EnableTrigger( gg_trg_MidHeroesMove01 )
    loop
        exitwhen ( Trig_MidChase_Func014001() )
        call TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 1))
    endloop
    if ( Trig_MidChase_Func015001() ) then
        return
    else
        call DoNothing(  )
    endif
    loop
        exitwhen ( Trig_MidChase_Func016001() )
        call TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 1))
    endloop
    if ( Trig_MidChase_Func017001() ) then
        return
    else
        call DoNothing(  )
    endif
    call DisableTrigger( gg_trg_MidHeroesMove01 )
    call EnableTrigger( gg_trg_MidHeroesAttack )
    call TriggerSleepAction( 30.00 )
    if ( Trig_MidChase_Func021001() ) then
        return
    else
        call DoNothing(  )
    endif
    call DisableTrigger( gg_trg_MidHeroesAttack )
    call EnableTrigger( gg_trg_MidHeroesMove02 )
    loop
        exitwhen ( Trig_MidChase_Func024001() )
        call TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 1))
    endloop
    if ( Trig_MidChase_Func025001() ) then
        return
    else
        call DoNothing(  )
    endif
    loop
        exitwhen ( Trig_MidChase_Func026001() )
        call TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 1))
    endloop
    if ( Trig_MidChase_Func027001() ) then
        return
    else
        call DoNothing(  )
    endif
    call DisableTrigger( gg_trg_MidHeroesMove02 )
    call EnableTrigger( gg_trg_MidHeroesAttack )
    call TriggerSleepAction( 30.00 )
    if ( Trig_MidChase_Func031001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitMoveSpeed( udg_Hero_Doomhammer, GetUnitDefaultMoveSpeed(udg_Hero_Doomhammer) )
    call SetUnitMoveSpeed( udg_Hero_Zuljin, GetUnitDefaultMoveSpeed(udg_Hero_Zuljin) )
    call SetUnitMoveSpeed( udg_Hero_Anduin, GetUnitDefaultMoveSpeed(udg_Hero_Anduin) )
    call SetUnitMoveSpeed( udg_Hero_Kurdran, GetUnitDefaultMoveSpeed(udg_Hero_Kurdran) )
    call BlzSetUnitRealFieldBJ( udg_Hero_Doomhammer, UNIT_RF_ANIMATION_WALK_SPEED, 300.00 )
    call BlzSetUnitRealFieldBJ( udg_Hero_Zuljin, UNIT_RF_ANIMATION_WALK_SPEED, 320.00 )
    call BlzSetUnitRealFieldBJ( udg_Hero_Anduin, UNIT_RF_ANIMATION_WALK_SPEED, 270.00 )
    call BlzSetUnitRealFieldBJ( udg_Hero_Kurdran, UNIT_RF_ANIMATION_WALK_SPEED, 290.00 )
    call DisableTrigger( gg_trg_MidHeroesAttack )
    call EnableTrigger( gg_trg_MidHeroesMove03Alliance )
    call EnableTrigger( gg_trg_MidHeroesMove03Hoard )
    loop
        exitwhen ( Trig_MidChase_Func043001() )
        call TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 1))
    endloop
    if ( Trig_MidChase_Func044001() ) then
        return
    else
        call DoNothing(  )
    endif
    call DisableTrigger( gg_trg_MidInsurance )
    call DestroyMinimapIcon( udg_SurviveMarkerB )
    call SetSpeechVolumeGroupsBJ(  )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Doomhammer, "TRIGSTR_2581", gg_snd_WC2Orc08SDoomhammer12, "TRIGSTR_2582", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SDoomhammer12, 0 )
    if ( Trig_MidChase_Func050C() ) then
        call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Eitrigg, "TRIGSTR_2592", gg_snd_WC2Orc08SEitrigg4, "TRIGSTR_2593", bj_TIMETYPE_ADD, 0.00, false )
        call WaitForSoundBJ( gg_snd_WC2Orc08SEitrigg4, 0 )
        if ( Trig_MidChase_Func050Func003001() ) then
            return
        else
            call DoNothing(  )
        endif
    else
    endif
    call VolumeGroupResetBJ(  )
    set udg_WaveStart = true
    call DisableTrigger( gg_trg_MidHeroesMove03Hoard )
    call EnableTrigger( gg_trg_MidHeroesMove04 )
    call ConditionalTriggerExecute( gg_trg_OrcsLeavingWithDoomhammer )
    call QueuedTriggerAddBJ( gg_trg_Survive_Update_Q, true )
endfunction

//===========================================================================
function InitTrig_MidChase takes nothing returns nothing
    set gg_trg_MidChase = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_MidChase, Condition( function Trig_MidChase_Conditions ) )
    call TriggerAddAction( gg_trg_MidChase, function Trig_MidChase_Actions )
endfunction

//===========================================================================
// Trigger: MidInsurance
//===========================================================================
function Trig_MidInsurance_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetUnitPathing( udg_Hero_Doomhammer, false )
    call SetUnitPathing( udg_Hero_Zuljin, false )
endfunction

//===========================================================================
function InitTrig_MidInsurance takes nothing returns nothing
    set gg_trg_MidInsurance = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_MidInsurance, udg_MidHeroesInsurance )
    call TriggerAddAction( gg_trg_MidInsurance, function Trig_MidInsurance_Actions )
endfunction

//===========================================================================
// Trigger: MidHeroesAttack
//===========================================================================
function Trig_MidHeroesAttack_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesAttack_Actions takes nothing returns nothing
    call IssueTargetOrderBJ( udg_Hero_Anduin, "attack", udg_Hero_Doomhammer )
    call IssueTargetOrderBJ( udg_Hero_Kurdran, "attack", udg_Hero_Zuljin )
    call IssueTargetOrderBJ( udg_Hero_Doomhammer, "attack", udg_Hero_Anduin )
    call IssueTargetOrderBJ( udg_Hero_Zuljin, "attack", udg_Hero_Kurdran )
endfunction

//===========================================================================
function InitTrig_MidHeroesAttack takes nothing returns nothing
    set gg_trg_MidHeroesAttack = CreateTrigger(  )
    call DisableTrigger( gg_trg_MidHeroesAttack )
    call TriggerRegisterTimerEventPeriodic( gg_trg_MidHeroesAttack, 3.00 )
    call TriggerAddCondition( gg_trg_MidHeroesAttack, Condition( function Trig_MidHeroesAttack_Conditions ) )
    call TriggerAddAction( gg_trg_MidHeroesAttack, function Trig_MidHeroesAttack_Actions )
endfunction

//===========================================================================
// Trigger: MidHeroesMove01
//===========================================================================
function Trig_MidHeroesMove01_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesMove01_Func002C takes nothing returns boolean
    if ( not ( RectContainsUnit(udg_MidMovingZone, udg_Hero_Anduin) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesMove01_Func003C takes nothing returns boolean
    if ( not ( RectContainsUnit(udg_MidMovingZone, udg_Hero_Doomhammer) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesMove01_Func004C takes nothing returns boolean
    if ( not ( RectContainsUnit(udg_MidMovingZone, udg_Hero_Kurdran) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesMove01_Func005C takes nothing returns boolean
    if ( not ( RectContainsUnit(udg_MidMovingZone, udg_Hero_Zuljin) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesMove01_Actions takes nothing returns nothing
    set udg_MidMovingZone = gg_rct_MidCombat01
    if ( Trig_MidHeroesMove01_Func002C() ) then
        call IssuePointOrderLocBJ( udg_Hero_Anduin, "move", GetRectCenter(gg_rct_MidAnduin05) )
    else
    endif
    if ( Trig_MidHeroesMove01_Func003C() ) then
        call IssuePointOrderLocBJ( udg_Hero_Doomhammer, "move", GetRectCenter(gg_rct_MidDH04) )
    else
    endif
    if ( Trig_MidHeroesMove01_Func004C() ) then
        call IssuePointOrderLocBJ( udg_Hero_Kurdran, "move", GetRectCenter(gg_rct_MidKurdran04) )
    else
    endif
    if ( Trig_MidHeroesMove01_Func005C() ) then
        call IssuePointOrderLocBJ( udg_Hero_Zuljin, "move", GetRectCenter(gg_rct_MidZuljin04) )
    else
    endif
endfunction

//===========================================================================
function InitTrig_MidHeroesMove01 takes nothing returns nothing
    set gg_trg_MidHeroesMove01 = CreateTrigger(  )
    call DisableTrigger( gg_trg_MidHeroesMove01 )
    call TriggerRegisterTimerEventPeriodic( gg_trg_MidHeroesMove01, 3.00 )
    call TriggerAddCondition( gg_trg_MidHeroesMove01, Condition( function Trig_MidHeroesMove01_Conditions ) )
    call TriggerAddAction( gg_trg_MidHeroesMove01, function Trig_MidHeroesMove01_Actions )
endfunction

//===========================================================================
// Trigger: MidHeroesMove02
//===========================================================================
function Trig_MidHeroesMove02_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesMove02_Func002C takes nothing returns boolean
    if ( not ( RectContainsUnit(udg_MidMovingZone, udg_Hero_Anduin) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesMove02_Func003C takes nothing returns boolean
    if ( not ( RectContainsUnit(udg_MidMovingZone, udg_Hero_Doomhammer) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesMove02_Func004C takes nothing returns boolean
    if ( not ( RectContainsUnit(udg_MidMovingZone, udg_Hero_Kurdran) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesMove02_Func005C takes nothing returns boolean
    if ( not ( RectContainsUnit(udg_MidMovingZone, udg_Hero_Zuljin) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesMove02_Actions takes nothing returns nothing
    set udg_MidMovingZone = gg_rct_MidCombat02
    if ( Trig_MidHeroesMove02_Func002C() ) then
        call IssuePointOrderLocBJ( udg_Hero_Anduin, "move", GetRectCenter(gg_rct_MidAnduin06) )
    else
    endif
    if ( Trig_MidHeroesMove02_Func003C() ) then
        call IssuePointOrderLocBJ( udg_Hero_Doomhammer, "move", GetRectCenter(gg_rct_MidDH05) )
    else
    endif
    if ( Trig_MidHeroesMove02_Func004C() ) then
        call IssuePointOrderLocBJ( udg_Hero_Kurdran, "move", GetRectCenter(gg_rct_MidKurdran05) )
    else
    endif
    if ( Trig_MidHeroesMove02_Func005C() ) then
        call IssuePointOrderLocBJ( udg_Hero_Zuljin, "move", GetRectCenter(gg_rct_MidZuljin05) )
    else
    endif
endfunction

//===========================================================================
function InitTrig_MidHeroesMove02 takes nothing returns nothing
    set gg_trg_MidHeroesMove02 = CreateTrigger(  )
    call DisableTrigger( gg_trg_MidHeroesMove02 )
    call TriggerRegisterTimerEventPeriodic( gg_trg_MidHeroesMove02, 3.00 )
    call TriggerAddCondition( gg_trg_MidHeroesMove02, Condition( function Trig_MidHeroesMove02_Conditions ) )
    call TriggerAddAction( gg_trg_MidHeroesMove02, function Trig_MidHeroesMove02_Actions )
endfunction

//===========================================================================
// Trigger: MidHeroesMove03Alliance
//===========================================================================
function Trig_MidHeroesMove03Alliance_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesMove03Alliance_Func001C takes nothing returns boolean
    if ( not ( RectContainsUnit(gg_rct_MidAnduin07, udg_Hero_Anduin) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesMove03Alliance_Func002C takes nothing returns boolean
    if ( not ( RectContainsUnit(gg_rct_MidKurdran06, udg_Hero_Kurdran) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesMove03Alliance_Actions takes nothing returns nothing
    if ( Trig_MidHeroesMove03Alliance_Func001C() ) then
        call IssuePointOrderLocBJ( udg_Hero_Anduin, "move", GetRectCenter(gg_rct_MidAnduin07) )
    else
    endif
    if ( Trig_MidHeroesMove03Alliance_Func002C() ) then
        call IssuePointOrderLocBJ( udg_Hero_Kurdran, "move", GetRectCenter(gg_rct_MidKurdran06) )
    else
    endif
endfunction

//===========================================================================
function InitTrig_MidHeroesMove03Alliance takes nothing returns nothing
    set gg_trg_MidHeroesMove03Alliance = CreateTrigger(  )
    call DisableTrigger( gg_trg_MidHeroesMove03Alliance )
    call TriggerRegisterTimerEventPeriodic( gg_trg_MidHeroesMove03Alliance, 3.00 )
    call TriggerAddCondition( gg_trg_MidHeroesMove03Alliance, Condition( function Trig_MidHeroesMove03Alliance_Conditions ) )
    call TriggerAddAction( gg_trg_MidHeroesMove03Alliance, function Trig_MidHeroesMove03Alliance_Actions )
endfunction

//===========================================================================
// Trigger: MidHeroesMove03Hoard
//===========================================================================
function Trig_MidHeroesMove03Hoard_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesMove03Hoard_Func001C takes nothing returns boolean
    if ( not ( RectContainsUnit(gg_rct_MidDH06, udg_Hero_Doomhammer) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesMove03Hoard_Func002C takes nothing returns boolean
    if ( not ( RectContainsUnit(gg_rct_MidZuljin06, udg_Hero_Zuljin) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesMove03Hoard_Actions takes nothing returns nothing
    if ( Trig_MidHeroesMove03Hoard_Func001C() ) then
        call IssuePointOrderLocBJ( udg_Hero_Doomhammer, "move", GetRectCenter(gg_rct_MidDH06) )
    else
    endif
    if ( Trig_MidHeroesMove03Hoard_Func002C() ) then
        call IssuePointOrderLocBJ( udg_Hero_Zuljin, "move", GetRectCenter(gg_rct_MidZuljin06) )
    else
    endif
endfunction

//===========================================================================
function InitTrig_MidHeroesMove03Hoard takes nothing returns nothing
    set gg_trg_MidHeroesMove03Hoard = CreateTrigger(  )
    call DisableTrigger( gg_trg_MidHeroesMove03Hoard )
    call TriggerRegisterTimerEventPeriodic( gg_trg_MidHeroesMove03Hoard, 3.00 )
    call TriggerAddCondition( gg_trg_MidHeroesMove03Hoard, Condition( function Trig_MidHeroesMove03Hoard_Conditions ) )
    call TriggerAddAction( gg_trg_MidHeroesMove03Hoard, function Trig_MidHeroesMove03Hoard_Actions )
endfunction

//===========================================================================
// Trigger: MidHeroesMove04
//===========================================================================
function Trig_MidHeroesMove04_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesMove04_Func001C takes nothing returns boolean
    if ( not ( RectContainsUnit(gg_rct_MidDH07, udg_Hero_Doomhammer) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesMove04_Func002C takes nothing returns boolean
    if ( not ( RectContainsUnit(gg_rct_MidZuljin07, udg_Hero_Zuljin) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesMove04_Actions takes nothing returns nothing
    if ( Trig_MidHeroesMove04_Func001C() ) then
        call IssuePointOrderLocBJ( udg_Hero_Doomhammer, "move", GetRectCenter(gg_rct_MidDH07) )
    else
    endif
    if ( Trig_MidHeroesMove04_Func002C() ) then
        call IssuePointOrderLocBJ( udg_Hero_Zuljin, "move", GetRectCenter(gg_rct_MidZuljin07) )
    else
    endif
endfunction

//===========================================================================
function InitTrig_MidHeroesMove04 takes nothing returns nothing
    set gg_trg_MidHeroesMove04 = CreateTrigger(  )
    call DisableTrigger( gg_trg_MidHeroesMove04 )
    call TriggerRegisterTimerEventPeriodic( gg_trg_MidHeroesMove04, 3.00 )
    call TriggerAddCondition( gg_trg_MidHeroesMove04, Condition( function Trig_MidHeroesMove04_Conditions ) )
    call TriggerAddAction( gg_trg_MidHeroesMove04, function Trig_MidHeroesMove04_Actions )
endfunction

//===========================================================================
// Trigger: OrcsLeavingWithDoomhammer
//===========================================================================
function Trig_OrcsLeavingWithDoomhammer_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_OrcsLeavingWithDoomhammer_Func004C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_Hero_Tharbek) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_OrcsLeavingWithDoomhammer_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    if ( Trig_OrcsLeavingWithDoomhammer_Func004C() ) then
        call UnitRemoveBuffsBJ( bj_REMOVEBUFFS_ALL, udg_Hero_Tharbek )
        call SetUnitPositionLocFacingLocBJ( udg_Hero_Tharbek, GetRectCenter(gg_rct_OrcsLeaving), GetRectCenter(gg_rct_IntroTharbek02) )
        call SetUnitOwner( udg_Hero_Tharbek, Player(2), false )
        call GroupAddUnitSimple( udg_Hero_Tharbek, udg_DoomhammersEscort )
        call IssuePointOrderLocBJ( udg_Hero_Tharbek, "move", GetRectCenter(gg_rct_MidDH07) )
    else
        call CreateNUnitsAtLocFacingLocBJ( 1, 'o608', Player(2), GetRectCenter(gg_rct_OrcsLeaving), GetRectCenter(gg_rct_IntroTharbek02) )
        set udg_Hero_Tharbek = GetLastCreatedUnit()
        call SetUnitOwner( udg_Hero_Tharbek, Player(2), false )
        call GroupAddUnitSimple( udg_Hero_Tharbek, udg_DoomhammersEscort )
        call IssuePointOrderLocBJ( udg_Hero_Tharbek, "move", GetRectCenter(gg_rct_MidDH07) )
    endif
    call TriggerSleepAction( 1.00 )
    call CreateNUnitsAtLocFacingLocBJ( 1, 'o60G', Player(0), GetRectCenter(gg_rct_OrcsLeaving), GetRectCenter(gg_rct_IntroTharbek02) )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_DoomhammersEscort )
    call SetUnitOwner( GetLastCreatedUnit(), Player(2), false )
    call IssuePointOrderLocBJ( GetLastCreatedUnit(), "move", GetRectCenter(gg_rct_MidDH07) )
    call TriggerSleepAction( 1.00 )
    call CreateNUnitsAtLocFacingLocBJ( 1, 'o60G', Player(0), GetRectCenter(gg_rct_OrcsLeaving), GetRectCenter(gg_rct_IntroTharbek02) )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_DoomhammersEscort )
    call SetUnitOwner( GetLastCreatedUnit(), Player(2), false )
    call IssuePointOrderLocBJ( GetLastCreatedUnit(), "move", GetRectCenter(gg_rct_MidDH07) )
    call TriggerSleepAction( 1.00 )
    call CreateNUnitsAtLocFacingLocBJ( 1, 'o60G', Player(0), GetRectCenter(gg_rct_OrcsLeaving), GetRectCenter(gg_rct_IntroTharbek02) )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_DoomhammersEscort )
    call SetUnitOwner( GetLastCreatedUnit(), Player(2), false )
    call IssuePointOrderLocBJ( GetLastCreatedUnit(), "move", GetRectCenter(gg_rct_MidDH07) )
    call TriggerSleepAction( 1.00 )
    call CreateNUnitsAtLocFacingLocBJ( 1, 'o60G', Player(0), GetRectCenter(gg_rct_OrcsLeaving), GetRectCenter(gg_rct_IntroTharbek02) )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_DoomhammersEscort )
    call SetUnitOwner( GetLastCreatedUnit(), Player(2), false )
    call IssuePointOrderLocBJ( GetLastCreatedUnit(), "move", GetRectCenter(gg_rct_MidDH07) )
endfunction

//===========================================================================
function InitTrig_OrcsLeavingWithDoomhammer takes nothing returns nothing
    set gg_trg_OrcsLeavingWithDoomhammer = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_OrcsLeavingWithDoomhammer, Condition( function Trig_OrcsLeavingWithDoomhammer_Conditions ) )
    call TriggerAddAction( gg_trg_OrcsLeavingWithDoomhammer, function Trig_OrcsLeavingWithDoomhammer_Actions )
endfunction

//===========================================================================
// Trigger: MidHeroesExit01Jass
//
// Rework it to be used multiple times
//===========================================================================
function Trig_MidHeroesExit01Jass_Func001C takes nothing returns boolean
    if ( ( GetTriggerUnit() == udg_Hero_Doomhammer ) ) then
        return true
    endif
    if ( ( GetTriggerUnit() == udg_Hero_Zuljin ) ) then
        return true
    endif
    if ( ( IsUnitInGroup(GetEnteringUnit(), udg_DoomhammersEscort) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_MidHeroesExit01Jass_Conditions takes nothing returns boolean
    if ( not Trig_MidHeroesExit01Jass_Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroesExit01Jass_Actions takes nothing returns nothing
    local unit FadeUnit
    set FadeUnit = GetEnteringUnit()
    call UnitAddAbility(FadeUnit, 'Aloc' )
    call SetUnitVertexColorBJ( FadeUnit, 100.00, 100.00, 100.00, 10.00 )
    call TriggerSleepAction( 0.25 )
    call SetUnitVertexColorBJ( FadeUnit, 100.00, 100.00, 100.00, 20.00 )
    call TriggerSleepAction( 0.25 )
    call SetUnitVertexColorBJ( FadeUnit, 100.00, 100.00, 100.00, 30.00 )
    call TriggerSleepAction( 0.25 )
    call SetUnitVertexColorBJ( FadeUnit, 100.00, 100.00, 100.00, 40.00 )
    call TriggerSleepAction( 0.25 )
    call SetUnitVertexColorBJ( FadeUnit, 100.00, 100.00, 100.00, 50.00 )
    call TriggerSleepAction( 0.25 )
    call SetUnitVertexColorBJ( FadeUnit, 100.00, 100.00, 100.00, 60.00 )
    call TriggerSleepAction( 0.25 )
    call SetUnitVertexColorBJ( FadeUnit, 100.00, 100.00, 100.00, 70.00 )
    call TriggerSleepAction( 0.25 )
    call SetUnitVertexColorBJ( FadeUnit, 100.00, 100.00, 100.00, 80.00 )
    call TriggerSleepAction( 0.25 )
    call SetUnitVertexColorBJ( FadeUnit, 100.00, 100.00, 100.00, 90.00 )
    call TriggerSleepAction( 0.25 )
    call SetUnitVertexColorBJ( FadeUnit, 100.00, 100.00, 100.00, 100.00 )
    call TriggerSleepAction( 0.25 )
    call RemoveUnit( FadeUnit )
endfunction

//===========================================================================
function InitTrig_MidHeroesExit01Jass takes nothing returns nothing
    set gg_trg_MidHeroesExit01Jass = CreateTrigger(  )
    call DisableTrigger( gg_trg_MidHeroesExit01Jass )
    call TriggerRegisterEnterRectSimple( gg_trg_MidHeroesExit01Jass, gg_rct_MidHeroExitFade )
    call TriggerAddCondition( gg_trg_MidHeroesExit01Jass, Condition( function Trig_MidHeroesExit01Jass_Conditions ) )
    call TriggerAddAction( gg_trg_MidHeroesExit01Jass, function Trig_MidHeroesExit01Jass_Actions )
endfunction


//===========================================================================
// Trigger: MidHeroLife
//===========================================================================
function Trig_MidHeroLife_Func002C takes nothing returns boolean
    if ( ( GetTriggerUnit() == udg_Hero_Anduin ) ) then
        return true
    endif
    if ( ( GetTriggerUnit() == udg_Hero_Doomhammer ) ) then
        return true
    endif
    if ( ( GetTriggerUnit() == udg_Hero_Kurdran ) ) then
        return true
    endif
    if ( ( GetTriggerUnit() == udg_Hero_Zuljin ) ) then
        return true
    endif
    if ( ( GetTriggerUnit() == udg_Hero_Garona ) ) then
        return true
    endif
    return false
endfunction

function Trig_MidHeroLife_Conditions takes nothing returns boolean
    if ( not Trig_MidHeroLife_Func002C() ) then
        return false
    endif
    if ( not ( GetUnitLifePercent(GetTriggerUnit()) <= 50.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidHeroLife_Actions takes nothing returns nothing
    call SetUnitLifePercentBJ( GetTriggerUnit(), 100.00 )
endfunction

//===========================================================================
function InitTrig_MidHeroLife takes nothing returns nothing
    set gg_trg_MidHeroLife = CreateTrigger(  )
    call DisableTrigger( gg_trg_MidHeroLife )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_MidHeroLife, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_MidHeroLife, Condition( function Trig_MidHeroLife_Conditions ) )
    call TriggerAddAction( gg_trg_MidHeroLife, function Trig_MidHeroLife_Actions )
endfunction

//===========================================================================
// Trigger: MidSpawnControl
//===========================================================================
function Trig_MidSpawnControl_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidSpawnControl_Func008001 takes nothing returns boolean
    return ( udg_WaveStart == true )
endfunction

function Trig_MidSpawnControl_Func009001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_MidSpawnControl_Func016001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_MidSpawnControl_Func023001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_MidSpawnControl_Func030001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_MidSpawnControl_Func037001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_MidSpawnControl_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // WAVE 1
    call EnableTrigger( gg_trg_MidSpawner )
    call ConditionalTriggerExecute( gg_trg_MidSpawner )
    call TriggerSleepAction( 15.00 )
    call DisableTrigger( gg_trg_MidSpawner )
    loop
        exitwhen ( Trig_MidSpawnControl_Func008001() )
        call TriggerSleepAction(RMaxBJ(bj_WAIT_FOR_COND_MIN_INTERVAL, 1))
    endloop
    if ( Trig_MidSpawnControl_Func009001() ) then
        return
    else
        call DoNothing(  )
    endif
    // WAVE 2
    call EnableTrigger( gg_trg_MidSpawner )
    call ConditionalTriggerExecute( gg_trg_MidSpawner )
    call TriggerSleepAction( 30.00 )
    call DisableTrigger( gg_trg_MidSpawner )
    call TriggerSleepAction( 90.00 )
    if ( Trig_MidSpawnControl_Func016001() ) then
        return
    else
        call DoNothing(  )
    endif
    // WAVE 3
    call EnableTrigger( gg_trg_MidSpawner )
    call ConditionalTriggerExecute( gg_trg_MidSpawner )
    call TriggerSleepAction( 30.00 )
    call DisableTrigger( gg_trg_MidSpawner )
    call TriggerSleepAction( 90.00 )
    if ( Trig_MidSpawnControl_Func023001() ) then
        return
    else
        call DoNothing(  )
    endif
    // WAVE 4
    call EnableTrigger( gg_trg_MidSpawner )
    call ConditionalTriggerExecute( gg_trg_MidSpawner )
    call TriggerSleepAction( 30.00 )
    call DisableTrigger( gg_trg_MidSpawner )
    call TriggerSleepAction( 90.00 )
    if ( Trig_MidSpawnControl_Func030001() ) then
        return
    else
        call DoNothing(  )
    endif
    // WAVE 5
    call EnableTrigger( gg_trg_MidSpawner )
    call ConditionalTriggerExecute( gg_trg_MidSpawner )
    call TriggerSleepAction( 30.00 )
    call DisableTrigger( gg_trg_MidSpawner )
    call TriggerSleepAction( 90.00 )
    if ( Trig_MidSpawnControl_Func037001() ) then
        return
    else
        call DoNothing(  )
    endif
    // WAVE 6
    call EnableTrigger( gg_trg_MidSpawner )
    call ConditionalTriggerExecute( gg_trg_MidSpawner )
    call RemoveGuardPosition( udg_Hero_Anduin )
    call RemoveGuardPosition( udg_Hero_Kurdran )
    call PauseUnitBJ( false, udg_Hero_Anduin )
    call PauseUnitBJ( false, udg_Hero_Kurdran )
    call SetUnitOwner( udg_Hero_Anduin, Player(9), false )
    call SetUnitOwner( udg_Hero_Kurdran, Player(1), false )
    call TriggerSleepAction( 0.50 )
    call IssuePointOrderLocBJ( udg_Hero_Anduin, "attack", GetRectCenter(gg_rct_PlayerRelocate) )
    call IssuePointOrderLocBJ( udg_Hero_Kurdran, "attack", GetRectCenter(gg_rct_PlayerRelocate) )
    call TriggerSleepAction( 30.00 )
    call DisableTrigger( gg_trg_MidSpawner )
endfunction

//===========================================================================
function InitTrig_MidSpawnControl takes nothing returns nothing
    set gg_trg_MidSpawnControl = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_MidSpawnControl, Condition( function Trig_MidSpawnControl_Conditions ) )
    call TriggerAddAction( gg_trg_MidSpawnControl, function Trig_MidSpawnControl_Actions )
endfunction

//===========================================================================
// Trigger: MidSpawner
//===========================================================================
function Trig_MidSpawner_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidSpawner_Func005C takes nothing returns boolean
    if ( not ( udg_MidKnightSkip == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidSpawner_Func006C takes nothing returns boolean
    if ( not ( IsDestructableAliveBJ(gg_dest_B004_0095) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidSpawner_Func007C takes nothing returns boolean
    if ( not ( IsDestructableAliveBJ(gg_dest_B004_0095) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidSpawner_Func013001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_MidSpawner_Func014Func001C takes nothing returns boolean
    if ( not ( udg_MidKnightSkip == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidSpawner_Func014C takes nothing returns boolean
    if ( not ( udg_MidKnightSkip == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidSpawner_Func016001 takes nothing returns boolean
    return ( udg_GameOver == true )
endfunction

function Trig_MidSpawner_Actions takes nothing returns nothing
    call CreateNUnitsAtLoc( 1, 'h60B', udg_PlayerNoL, GetRectCenter(gg_rct_MidAllianceSpawn00), bj_UNIT_FACING )
    call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", GetRandomLocInRect(gg_rct_PlayerRelocate) )
    if ( Trig_MidSpawner_Func005C() ) then
        call CreateNUnitsAtLoc( 1, 'h60L', udg_PlayerNoL, GetRectCenter(gg_rct_MidAllianceSpawn01), bj_UNIT_FACING )
        call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", GetRandomLocInRect(gg_rct_PlayerRelocate) )
    else
    endif
    if ( Trig_MidSpawner_Func006C() ) then
        call CreateNUnitsAtLoc( 1, 'e601', udg_PlayerNoL, GetRectCenter(gg_rct_MidAllianceSpawn01), bj_UNIT_FACING )
        call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", GetRandomLocInRect(gg_rct_PlayerRelocate) )
    else
    endif
    if ( Trig_MidSpawner_Func007C() ) then
        call CreateNUnitsAtLoc( 1, 'h60L', udg_PlayerNoL, GetRectCenter(gg_rct_MidAllianceSpawn01), bj_UNIT_FACING )
        call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", GetRandomLocInRect(gg_rct_PlayerRelocate) )
    else
    endif
    call CreateNUnitsAtLoc( 1, 'h60B', udg_PlayerNoL, GetRectCenter(gg_rct_MidAllianceSpawn02), bj_UNIT_FACING )
    call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", GetRandomLocInRect(gg_rct_PlayerRelocate) )
    call CreateNUnitsAtLoc( 1, 'h60K', udg_PlayerNoL, GetRectCenter(gg_rct_MidAllianceSpawn03), bj_UNIT_FACING )
    call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", GetRandomLocInRect(gg_rct_PlayerRelocate) )
    call TriggerSleepAction( 4.90 )
    if ( Trig_MidSpawner_Func013001() ) then
        return
    else
        call DoNothing(  )
    endif
    if ( Trig_MidSpawner_Func014C() ) then
        set udg_MidKnightSkip = true
    else
        if ( Trig_MidSpawner_Func014Func001C() ) then
            set udg_MidKnightSkip = false
        else
        endif
    endif
    call TriggerSleepAction( 0.10 )
    if ( Trig_MidSpawner_Func016001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ConditionalTriggerExecute( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_MidSpawner takes nothing returns nothing
    set gg_trg_MidSpawner = CreateTrigger(  )
    call DisableTrigger( gg_trg_MidSpawner )
    call TriggerAddCondition( gg_trg_MidSpawner, Condition( function Trig_MidSpawner_Conditions ) )
    call TriggerAddAction( gg_trg_MidSpawner, function Trig_MidSpawner_Actions )
endfunction

//===========================================================================
// Trigger: MidSpawnOrder
//===========================================================================
function Trig_MidSpawnOrder_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidSpawnOrder_Func002Func001C takes nothing returns boolean
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_PEON) == false ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnumUnit()) != 'hrdh' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnumUnit()) != 'e601' ) ) then
        return false
    endif
    if ( not ( IsUnitIdType(GetUnitTypeId(GetEnumUnit()), UNIT_TYPE_STRUCTURE) == false ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_HERO) == false ) ) then
        return false
    endif
    if ( not ( GetEnumUnit() != udg_AllianceGuard01 ) ) then
        return false
    endif
    if ( not ( GetEnumUnit() != udg_AllianceGuard02 ) ) then
        return false
    endif
    if ( not ( GetEnumUnit() != udg_AllianceGuard03 ) ) then
        return false
    endif
    if ( not ( GetEnumUnit() != udg_AllianceGuard04 ) ) then
        return false
    endif
    if ( not ( GetEnumUnit() != udg_AllianceGuard05 ) ) then
        return false
    endif
    if ( not ( GetEnumUnit() != udg_AllianceGuard06 ) ) then
        return false
    endif
    if ( not ( GetEnumUnit() != udg_AllianceGuard07 ) ) then
        return false
    endif
    if ( not ( GetEnumUnit() != udg_AllianceGuard08 ) ) then
        return false
    endif
    if ( not ( GetEnumUnit() != udg_AllianceGuard09 ) ) then
        return false
    endif
    return true
endfunction

function Trig_MidSpawnOrder_Func002A takes nothing returns nothing
    if ( Trig_MidSpawnOrder_Func002Func001C() ) then
        call IssuePointOrderLocBJ( GetEnumUnit(), "attack", GetRandomLocInRect(gg_rct_PlayerRelocate) )
    else
    endif
endfunction

function Trig_MidSpawnOrder_Actions takes nothing returns nothing
    set udg_AllianceForces = GetUnitsOfPlayerAll(udg_PlayerNoL)
    call ForGroupBJ( udg_AllianceForces, function Trig_MidSpawnOrder_Func002A )
    call DestroyGroup(udg_AllianceForces)
endfunction

//===========================================================================
function InitTrig_MidSpawnOrder takes nothing returns nothing
    set gg_trg_MidSpawnOrder = CreateTrigger(  )
    call DisableTrigger( gg_trg_MidSpawnOrder )
    call TriggerRegisterTimerEventPeriodic( gg_trg_MidSpawnOrder, 10.00 )
    call TriggerAddCondition( gg_trg_MidSpawnOrder, Condition( function Trig_MidSpawnOrder_Conditions ) )
    call TriggerAddAction( gg_trg_MidSpawnOrder, function Trig_MidSpawnOrder_Actions )
endfunction

//===========================================================================
// Trigger: AllianceGuardReplace
//===========================================================================
function Trig_AllianceGuardReplace_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerNoL ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_AllianceGuardReplace_Func003Func001Func001Func001Func001Func001Func001Func001Func001C takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_AllianceGuard09 ) ) then
        return false
    endif
    return true
endfunction

function Trig_AllianceGuardReplace_Func003Func001Func001Func001Func001Func001Func001Func001C takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_AllianceGuard08 ) ) then
        return false
    endif
    return true
endfunction

function Trig_AllianceGuardReplace_Func003Func001Func001Func001Func001Func001Func001C takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_AllianceGuard07 ) ) then
        return false
    endif
    return true
endfunction

function Trig_AllianceGuardReplace_Func003Func001Func001Func001Func001Func001C takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_AllianceGuard06 ) ) then
        return false
    endif
    return true
endfunction

function Trig_AllianceGuardReplace_Func003Func001Func001Func001Func001C takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_AllianceGuard05 ) ) then
        return false
    endif
    return true
endfunction

function Trig_AllianceGuardReplace_Func003Func001Func001Func001C takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_AllianceGuard04 ) ) then
        return false
    endif
    return true
endfunction

function Trig_AllianceGuardReplace_Func003Func001Func001C takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_AllianceGuard03 ) ) then
        return false
    endif
    return true
endfunction

function Trig_AllianceGuardReplace_Func003Func001C takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_AllianceGuard02 ) ) then
        return false
    endif
    return true
endfunction

function Trig_AllianceGuardReplace_Func003C takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_AllianceGuard01 ) ) then
        return false
    endif
    return true
endfunction

function Trig_AllianceGuardReplace_Actions takes nothing returns nothing
    if ( Trig_AllianceGuardReplace_Func003C() ) then
        call CreateNUnitsAtLoc( 1, 'h60K', udg_PlayerNoL, GetRectCenter(gg_rct_MidAllianceSpawnGuard), bj_UNIT_FACING )
        set udg_AllianceGuard01 = GetLastCreatedUnit()
        call RemoveGuardPosition(udg_AllianceGuard01)
        call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", GetRandomLocInRect(gg_rct_AllianceGuard01) )
    else
        if ( Trig_AllianceGuardReplace_Func003Func001C() ) then
            call CreateNUnitsAtLoc( 1, 'h60K', udg_PlayerNoL, GetRectCenter(gg_rct_MidAllianceSpawnGuard), bj_UNIT_FACING )
            set udg_AllianceGuard02 = GetLastCreatedUnit()
            call RemoveGuardPosition(udg_AllianceGuard02)
            call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", GetRandomLocInRect(gg_rct_AllianceGuard02) )
        else
            if ( Trig_AllianceGuardReplace_Func003Func001Func001C() ) then
                call CreateNUnitsAtLoc( 1, 'hcth', udg_PlayerNoL, GetRectCenter(gg_rct_MidAllianceSpawnGuard), bj_UNIT_FACING )
                set udg_AllianceGuard03 = GetLastCreatedUnit()
                call RemoveGuardPosition(udg_AllianceGuard03)
                call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", GetRandomLocInRect(gg_rct_AllianceGuard03) )
            else
                if ( Trig_AllianceGuardReplace_Func003Func001Func001Func001C() ) then
                    call CreateNUnitsAtLoc( 1, 'h60B', udg_PlayerNoL, GetRectCenter(gg_rct_MidAllianceSpawnGuard), bj_UNIT_FACING )
                    set udg_AllianceGuard04 = GetLastCreatedUnit()
                    call RemoveGuardPosition(udg_AllianceGuard04)
                    call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", GetRandomLocInRect(gg_rct_AllianceGuard04) )
                else
                    if ( Trig_AllianceGuardReplace_Func003Func001Func001Func001Func001C() ) then
                        call CreateNUnitsAtLoc( 1, 'h60B', udg_PlayerNoL, GetRectCenter(gg_rct_MidAllianceSpawnGuard), bj_UNIT_FACING )
                        set udg_AllianceGuard05 = GetLastCreatedUnit()
                        call RemoveGuardPosition(udg_AllianceGuard05)
                        call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", GetRandomLocInRect(gg_rct_AllianceGuard05) )
                    else
                        if ( Trig_AllianceGuardReplace_Func003Func001Func001Func001Func001Func001C() ) then
                            call CreateNUnitsAtLoc( 1, 'h60K', udg_PlayerNoL, GetRectCenter(gg_rct_MidAllianceSpawnGuard), bj_UNIT_FACING )
                            set udg_AllianceGuard06 = GetLastCreatedUnit()
                            call RemoveGuardPosition(udg_AllianceGuard06)
                            call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", GetRandomLocInRect(gg_rct_AllianceGuard06) )
                        else
                            if ( Trig_AllianceGuardReplace_Func003Func001Func001Func001Func001Func001Func001C() ) then
                                call CreateNUnitsAtLoc( 1, 'h60K', udg_PlayerNoL, GetRectCenter(gg_rct_MidAllianceSpawnGuard), bj_UNIT_FACING )
                                set udg_AllianceGuard07 = GetLastCreatedUnit()
                                call RemoveGuardPosition(udg_AllianceGuard07)
                                call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", GetRandomLocInRect(gg_rct_AllianceGuard07) )
                            else
                                if ( Trig_AllianceGuardReplace_Func003Func001Func001Func001Func001Func001Func001Func001C() ) then
                                    call CreateNUnitsAtLoc( 1, 'h60K', udg_PlayerNoL, GetRectCenter(gg_rct_MidAllianceSpawnGuard), bj_UNIT_FACING )
                                    set udg_AllianceGuard08 = GetLastCreatedUnit()
                                    call RemoveGuardPosition(udg_AllianceGuard08)
                                    call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", GetRandomLocInRect(gg_rct_AllianceGuard08) )
                                else
                                    if ( Trig_AllianceGuardReplace_Func003Func001Func001Func001Func001Func001Func001Func001Func001C() ) then
                                        call CreateNUnitsAtLoc( 1, 'h60K', udg_PlayerNoL, GetRectCenter(gg_rct_MidAllianceSpawnGuard), bj_UNIT_FACING )
                                        set udg_AllianceGuard09 = GetLastCreatedUnit()
                                        call RemoveGuardPosition(udg_AllianceGuard09)
                                        call IssuePointOrderLocBJ( GetLastCreatedUnit(), "attack", GetRandomLocInRect(gg_rct_AllianceGuard09) )
                                    else
                                    endif
                                endif
                            endif
                        endif
                    endif
                endif
            endif
        endif
    endif
endfunction

//===========================================================================
function InitTrig_AllianceGuardReplace takes nothing returns nothing
    set gg_trg_AllianceGuardReplace = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_AllianceGuardReplace, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_AllianceGuardReplace, Condition( function Trig_AllianceGuardReplace_Conditions ) )
    call TriggerAddAction( gg_trg_AllianceGuardReplace, function Trig_AllianceGuardReplace_Actions )
endfunction

//===========================================================================
// Trigger: OutroCinQ
//===========================================================================
function Trig_OutroCinQ_Func023001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroCinQ_Func026001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroCinQ_Func027A takes nothing returns nothing
    call PauseUnitBJ( false, GetEnumUnit() )
endfunction

function Trig_OutroCinQ_Func029001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroCinQ_Func032001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroCinQ_Func035001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroCinQ_Func036Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'B00C' ) ) then
        return false
    endif
    return true
endfunction

function Trig_OutroCinQ_Func036A takes nothing returns nothing
    if ( Trig_OutroCinQ_Func036Func001C() ) then
        call KillDestructable( GetEnumDestructable() )
    else
    endif
endfunction

function Trig_OutroCinQ_Func051Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'B603' ) ) then
        return false
    endif
    return true
endfunction

function Trig_OutroCinQ_Func051A takes nothing returns nothing
    if ( Trig_OutroCinQ_Func051Func001C() ) then
        call SetDestAnimationSpeedPercent( GetEnumDestructable(), 6.00 )
        call SetDestructableAnimationBJ( GetEnumDestructable(), "death" )
    else
    endif
endfunction

function Trig_OutroCinQ_Func053001002 takes nothing returns boolean
    return ( IsUnitInGroup(GetFilterUnit(), udg_OutroForce) == true )
endfunction

function Trig_OutroCinQ_Func053002 takes nothing returns nothing
    call ExplodeUnitBJ( GetEnumUnit() )
endfunction

function Trig_OutroCinQ_Func055001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroCinQ_Func060001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroCinQ_Func064A takes nothing returns nothing
    call RemoveUnit( GetEnumUnit() )
endfunction

function Trig_OutroCinQ_Func066C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_Hero_Anduin) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_OutroCinQ_Func067C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_Hero_Kurdran) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_OutroCinQ_Func069A takes nothing returns nothing
    call PauseUnitBJ( false, GetEnumUnit() )
    call ShowUnitShow( GetEnumUnit() )
    call SetUnitBlendTimeBJ( GetEnumUnit(), 0.25 )
    call AddUnitAnimationPropertiesBJ( true, "cinematic", GetEnumUnit() )
    call SetUnitAnimation( GetEnumUnit(), "cinematic listening one" )
    call BlzSetUnitRealFieldBJ( GetEnumUnit(), UNIT_RF_ANIMATION_WALK_SPEED, 100.00 )
    call SetUnitMoveSpeed( GetEnumUnit(), 100.00 )
endfunction

function Trig_OutroCinQ_Func070Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'B00A' ) ) then
        return false
    endif
    return true
endfunction

function Trig_OutroCinQ_Func070A takes nothing returns nothing
    if ( Trig_OutroCinQ_Func070Func001C() ) then
        call ShowDestructableBJ( true, GetEnumDestructable() )
    else
    endif
endfunction

function Trig_OutroCinQ_Func071Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'B603' ) ) then
        return false
    endif
    return true
endfunction

function Trig_OutroCinQ_Func071A takes nothing returns nothing
    if ( Trig_OutroCinQ_Func071Func001C() ) then
        call SetDestAnimationSpeedPercent( GetEnumDestructable(), 100.00 )
        call SetDestructableAnimationBJ( GetEnumDestructable(), "stand" )
    else
    endif
endfunction

function Trig_OutroCinQ_Func073001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroCinQ_Func076001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroCinQ_Func080001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroCinQ_Func085001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroCinQ_Func089001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroCinQ_Func094001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroCinQ_Func101001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroCinQ_Func112001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroCinQ_Func116001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroCinQ_Func120001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroCinQ_Func125001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroCinQ_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_GameOver = true
    // Settings
    call StopMusicBJ( true )
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 2.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    call TriggerSleepAction( 2.00 )
    // Setup
    call ConditionalTriggerExecute( gg_trg_OilUIHide )
    call CinematicModeBJ( true, GetPlayersAll() )
    call CameraSetupApplyForPlayer( true, gg_cam_Outro01, Player(0), 0 )
    call SetCineModeVolumeGroupsBJ(  )
    call ConditionalTriggerExecute( gg_trg_OutroSetup )
    call ClearMapMusicBJ(  )
    call TriggerSleepAction( 0.25 )
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 2.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    call CameraSetupApplyForPlayerSmooth( true, gg_cam_Outro02, Player(0), 11.00, 1.00, 3.00, 100.00 )
    set udg_OutroCinematic = true
    call PlayThematicMusicBJ( "DarkVictory" )
    // Skippable
    call EnableTrigger( gg_trg_OutroSkipped )
    call ConditionalTriggerExecute( gg_trg_EitriggDeathSequence )
    call TriggerSleepAction( 2.00 )
    if ( Trig_OutroCinQ_Func023001() ) then
        return
    else
        call DoNothing(  )
    endif
    call PlaySoundAtPointBJ( gg_snd_CS_H01a_soldiers_walk_RtoL_a, 100, GetRectCenter(gg_rct_BarrelsWIthExposives), 0 )
    call TriggerSleepAction( 5.50 )
    if ( Trig_OutroCinQ_Func026001() ) then
        return
    else
        call DoNothing(  )
    endif
    call ForGroupBJ( udg_LastStandGrunts, function Trig_OutroCinQ_Func027A )
    call TriggerSleepAction( 3.00 )
    if ( Trig_OutroCinQ_Func029001() ) then
        return
    else
        call DoNothing(  )
    endif
    call IssueTargetOrderBJ( udg_OutroSapper01, "selfdestruct", udg_OutroSapper01 )
    call TriggerSleepAction( 0.25 )
    if ( Trig_OutroCinQ_Func032001() ) then
        return
    else
        call DoNothing(  )
    endif
    call IssueTargetOrderBJ( udg_OutroSapper02, "selfdestruct", udg_OutroSapper02 )
    call TriggerSleepAction( 0.25 )
    if ( Trig_OutroCinQ_Func035001() ) then
        return
    else
        call DoNothing(  )
    endif
    call EnumDestructablesInRectAll( gg_rct_BarrelsWIthExposives, function Trig_OutroCinQ_Func036A )
    call ConditionalTriggerExecute( gg_trg_OutroSway )
    call AddSpecialEffectLocBJ( GetRectCenter(gg_rct_OutroVFX01), "Doodads\\Cinematic\\Explosion\\NewDirtEXNofire.mdl" )
    call BlzSetSpecialEffectZ( GetLastCreatedEffectBJ(), 2100.00 )
    call AddSpecialEffectLocBJ( GetRectCenter(gg_rct_OutroVFX02), "Doodads\\Cinematic\\Explosion\\NewDirtEXNofire.mdl" )
    call BlzSetSpecialEffectZ( GetLastCreatedEffectBJ(), 2100.00 )
    call AddSpecialEffectLocBJ( GetRectCenter(gg_rct_OutroVFX03), "Doodads\\Cinematic\\Explosion\\NewDirtEXNofire.mdl" )
    call BlzSetSpecialEffectZ( GetLastCreatedEffectBJ(), 2100.00 )
    call AddSpecialEffectLocBJ( GetRectCenter(gg_rct_OutroVFX04), "Doodads\\Cinematic\\Explosion\\NewDirtEXNofire.mdl" )
    call BlzSetSpecialEffectZ( GetLastCreatedEffectBJ(), 2100.00 )
    call AddSpecialEffectLocBJ( GetRectCenter(gg_rct_OutroVFX05), "Doodads\\Cinematic\\Explosion\\NewDirtEXNofire.mdl" )
    call BlzSetSpecialEffectZ( GetLastCreatedEffectBJ(), 2100.00 )
    call AddSpecialEffectLocBJ( GetRectCenter(gg_rct_OutroVFX06), "Doodads\\Cinematic\\Explosion\\NewDirtEXNofire.mdl" )
    call BlzSetSpecialEffectZ( GetLastCreatedEffectBJ(), 2100.00 )
    call PlaySoundBJ( gg_snd_CS_orc2_outro_stomp )
    call EnumDestructablesInRectAll( gg_rct_OutroRocksMountain, function Trig_OutroCinQ_Func051A )
    call TriggerSleepAction( 0.50 )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_BarrelsWIthExposives, Condition(function Trig_OutroCinQ_Func053001002)), function Trig_OutroCinQ_Func053002 )
    call TriggerSleepAction( 1.00 )
    if ( Trig_OutroCinQ_Func055001() ) then
        return
    else
        call DoNothing(  )
    endif
    call StopSoundBJ( gg_snd_CS_orc2_outro_stomp, true )
    call PlaySoundBJ( gg_snd_CS_orc2_outro_rockfalls )
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 2.00, "ReplaceableTextures\\CameraMasks\\White_mask.blp", 100.00, 0.00, 0.00, 0 )
    call TriggerSleepAction( 2.00 )
    if ( Trig_OutroCinQ_Func060001() ) then
        return
    else
        call DoNothing(  )
    endif
    call AddWeatherEffectSaveLast( gg_rct_AvalanchFog, 'FDwh' )
    call EnableWeatherEffect( GetLastCreatedWeatherEffect(), true )
    call SetTerrainFogExBJ( 0, 1000, 5000.00, 0, 40.00, 30.00, 20.00 )
    call ForGroupBJ( udg_OutroForceB, function Trig_OutroCinQ_Func064A )
    call CameraClearNoiseForPlayer( Player(0) )
    if ( Trig_OutroCinQ_Func066C() ) then
        call ReviveHeroLoc( udg_Hero_Anduin, GetRectCenter(gg_rct_OutroAnduin01), false )
        call SetUnitPositionLocFacingBJ( udg_Hero_Anduin, GetRectCenter(gg_rct_OutroAnduin01), 326.55 )
        call SetUnitOwner( udg_Hero_Anduin, udg_PlayerMidHeroesAlliance, false )
    else
        call SetUnitOwner( udg_Hero_Anduin, udg_PlayerMidHeroesAlliance, false )
        call SetUnitPositionLocFacingBJ( udg_Hero_Anduin, GetRectCenter(gg_rct_OutroAnduin01), 326.55 )
    endif
    if ( Trig_OutroCinQ_Func067C() ) then
        call ReviveHeroLoc( udg_Hero_Kurdran, GetRectCenter(gg_rct_OutroKurdran01), false )
        call SetUnitOwner( udg_Hero_Kurdran, udg_PlayerMidHeroesAlliance, false )
        call AddUnitAnimationPropertiesBJ( true, "alternate", udg_Hero_Kurdran )
        call SetUnitPositionLocFacingBJ( udg_Hero_Kurdran, GetRectCenter(gg_rct_OutroKurdran01), 222.11 )
    else
        call SetUnitOwner( udg_Hero_Kurdran, udg_PlayerMidHeroesAlliance, false )
        call AddUnitAnimationPropertiesBJ( true, "alternate", udg_Hero_Kurdran )
        call SetUnitPositionLocFacingBJ( udg_Hero_Kurdran, GetRectCenter(gg_rct_OutroKurdran01), 222.11 )
    endif
    call CameraSetupApplyForPlayer( true, gg_cam_Outro03, Player(0), 0 )
    call ForGroupBJ( udg_OutroHeroesHuman, function Trig_OutroCinQ_Func069A )
    call EnumDestructablesInRectAll( gg_rct_OutroRocksHidden, function Trig_OutroCinQ_Func070A )
    call EnumDestructablesInRectAll( gg_rct_OutroRocksMountain, function Trig_OutroCinQ_Func071A )
    call TriggerSleepAction( 2.00 )
    if ( Trig_OutroCinQ_Func073001() ) then
        return
    else
        call DoNothing(  )
    endif
    call StopSoundBJ( gg_snd_CS_orc2_outro_rockfalls, true )
    call TriggerSleepAction( 0.25 )
    if ( Trig_OutroCinQ_Func076001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 2.00, "ReplaceableTextures\\CameraMasks\\White_mask.blp", 100.00, 0.00, 0.00, 0 )
    call TriggerSleepAction( 2.00 )
    call PlayThematicMusicBJ( "Comradeship" )
    if ( Trig_OutroCinQ_Func080001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Kurdran, "cinematic point one alternate" )
    call QueueUnitAnimationBJ( udg_Hero_Kurdran, "cinematic stand alternate 1" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Kurdran, "TRIGSTR_2667", gg_snd_WC2Orc08SKurdran3, "TRIGSTR_2668", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SKurdran3, 0 )
    if ( Trig_OutroCinQ_Func085001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Anduin, "cinematic standard one" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Anduin, "TRIGSTR_2669", gg_snd_WC2Orc08SLothar5, "TRIGSTR_2670", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SLothar5, 0 )
    if ( Trig_OutroCinQ_Func089001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Kurdran, "cinematic standard one alternate" )
    call SetUnitAnimation( udg_Hero_Anduin, "cinematic listening one" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Kurdran, "TRIGSTR_2671", gg_snd_WC2Orc08SKurdran4, "TRIGSTR_2672", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SKurdran4, 0 )
    if ( Trig_OutroCinQ_Func094001() ) then
        return
    else
        call DoNothing(  )
    endif
    call PlaySoundOnUnitBJ( gg_snd_CS_Prologue2_Foley2, 100, udg_Hero_Anduin )
    call IssuePointOrderLocBJ( udg_Hero_Anduin, "move", GetRectCenter(gg_rct_OutroAnduin02) )
    call PlaySoundOnUnitBJ( gg_snd_CS_Prologue2_Foley201, 100, udg_Hero_Kurdran )
    call IssuePointOrderLocBJ( udg_Hero_Kurdran, "move", GetRectCenter(gg_rct_OutroKurdran02) )
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 2.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    call TriggerSleepAction( 2.00 )
    if ( Trig_OutroCinQ_Func101001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetupApplyForPlayer( true, gg_cam_EitrigWounded01, Player(0), 0 )
    call ShowUnitShow( udg_Hero_Garona )
    call AddUnitAnimationPropertiesBJ( true, "cinematic", udg_Hero_Garona )
    call AddUnitAnimationPropertiesBJ( true, "alternate", udg_Hero_Garona )
    call SetUnitBlendTimeBJ( udg_Hero_Garona, 0.70 )
    call BlzSetUnitRealFieldBJ( udg_Hero_Garona, UNIT_RF_ANIMATION_WALK_SPEED, 100.00 )
    call SetUnitMoveSpeed( udg_Hero_Garona, 100.00 )
    call SetPlayerColorBJ( GetOwningPlayer(udg_Hero_Garona), PLAYER_COLOR_RED, true )
    call PauseUnitBJ( false, udg_Hero_Garona )
    call TriggerSleepAction( 4.00 )
    if ( Trig_OutroCinQ_Func112001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 4.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    call CameraSetupApplyForPlayer( true, gg_cam_EitrigWounded02, Player(0), GetSoundDurationBJ(gg_snd_WC2Orc08SEitrigg7) )
    call TriggerSleepAction( 2.00 )
    if ( Trig_OutroCinQ_Func116001() ) then
        return
    else
        call DoNothing(  )
    endif
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Eitrigg, "TRIGSTR_2674", gg_snd_WC2Orc08SEitrigg7, "TRIGSTR_2675", bj_TIMETYPE_ADD, 0.00, false )
    call IssuePointOrderLocBJ( udg_Hero_Garona, "move", GetRectCenter(gg_rct_OutroGarona01) )
    call WaitForSoundBJ( gg_snd_WC2Orc08SEitrigg7, 0 )
    if ( Trig_OutroCinQ_Func120001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitAnimation( udg_Hero_Garona, "cinematic kneeling one" )
    call QueueUnitAnimationBJ( udg_Hero_Garona, "cinematic kneeling idle" )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Garona, "TRIGSTR_2676", gg_snd_WC2Orc08SGarona3, "TRIGSTR_2677", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SGarona3, 0 )
    if ( Trig_OutroCinQ_Func125001() ) then
        return
    else
        call DoNothing(  )
    endif
    call DisableTrigger( gg_trg_OutroSkipped )
    call ConditionalTriggerExecute( gg_trg_Next_Level_Prep )
endfunction

//===========================================================================
function InitTrig_OutroCinQ takes nothing returns nothing
    set gg_trg_OutroCinQ = CreateTrigger(  )
    call TriggerAddAction( gg_trg_OutroCinQ, function Trig_OutroCinQ_Actions )
endfunction

//===========================================================================
// Trigger: OutroSetup
//===========================================================================
function Trig_OutroSetup_Func008Func001C takes nothing returns boolean
    if ( not ( GetDestructableTypeId(GetEnumDestructable()) == 'B00C' ) ) then
        return false
    endif
    return true
endfunction

function Trig_OutroSetup_Func008A takes nothing returns nothing
    if ( Trig_OutroSetup_Func008Func001C() ) then
        call SetDestructableInvulnerableBJ( GetEnumDestructable(), false )
    else
    endif
endfunction

function Trig_OutroSetup_Func009Func001C takes nothing returns boolean
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_OutroSetup_Func009A takes nothing returns nothing
    if ( Trig_OutroSetup_Func009Func001C() ) then
        call RemoveUnit( GetEnumUnit() )
    else
    endif
endfunction

function Trig_OutroSetup_Func010C takes nothing returns boolean
    if ( not ( IsUnitDeadBJ(udg_Hero_Eitrigg) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_OutroSetup_Func011C takes nothing returns boolean
    if ( not ( IsUnitDeadBJ(udg_Hero_Garona) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_OutroSetup_Func012C takes nothing returns boolean
    if ( not ( IsUnitDeadBJ(udg_Hero_Anduin) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_OutroSetup_Func013C takes nothing returns boolean
    if ( not ( IsUnitDeadBJ(udg_Hero_Kurdran) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_OutroSetup_Func022A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_OutroForce )
endfunction

function Trig_OutroSetup_Func023A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_OutroForce )
endfunction

function Trig_OutroSetup_Func024A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_OutroForce )
endfunction

function Trig_OutroSetup_Func025A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_OutroForce )
endfunction

function Trig_OutroSetup_Func026A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_OutroForce )
endfunction

function Trig_OutroSetup_Func027A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_OutroForce )
endfunction

function Trig_OutroSetup_Func028A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_OutroForce )
endfunction

function Trig_OutroSetup_Func029Func001C takes nothing returns boolean
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_HERO) == false ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_MECHANICAL) == false ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_PEON) == false ) ) then
        return false
    endif
    if ( not ( IsUnitAliveBJ(GetEnumUnit()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_OutroSetup_Func029A takes nothing returns nothing
    if ( Trig_OutroSetup_Func029Func001C() ) then
        call GroupAddUnitSimple( GetEnumUnit(), udg_OutroForceB )
        call SetUnitPositionLoc( GetEnumUnit(), GetRandomLocInRect(gg_rct_PlayerRelocate) )
        call SetUnitMoveSpeed( GetEnumUnit(), 270.00 )
        call BlzSetUnitRealFieldBJ( GetEnumUnit(), UNIT_RF_ANIMATION_WALK_SPEED, 270.00 )
        call IssuePointOrderLocBJ( GetEnumUnit(), "move", GetRectCenter(gg_rct_OutroTarget) )
    else
    endif
endfunction

function Trig_OutroSetup_Func030Func001C takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetEnumUnit(), udg_OutroForceB) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_OutroSetup_Func030A takes nothing returns nothing
    if ( Trig_OutroSetup_Func030Func001C() ) then
        call PauseUnitBJ( true, GetEnumUnit() )
        call ShowUnitHide( GetEnumUnit() )
    else
    endif
endfunction

function Trig_OutroSetup_Func031A takes nothing returns nothing
    call PauseUnitBJ( false, GetEnumUnit() )
    call ShowUnitShow( GetEnumUnit() )
    call SetUnitBlendTimeBJ( GetEnumUnit(), 0.25 )
    call AddUnitAnimationPropertiesBJ( true, "cinematic", GetEnumUnit() )
    call SetUnitAnimation( GetEnumUnit(), "cinematic listening one" )
    call BlzSetUnitRealFieldBJ( GetEnumUnit(), UNIT_RF_ANIMATION_WALK_SPEED, 100.00 )
    call SetUnitMoveSpeed( GetEnumUnit(), 100.00 )
endfunction

function Trig_OutroSetup_Func054A takes nothing returns nothing
    call PauseUnitBJ( true, GetEnumUnit() )
    call SetUnitAnimation( GetEnumUnit(), "stand ready" )
endfunction

function Trig_OutroSetup_Func078001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nglm' )
endfunction

function Trig_OutroSetup_Func078A takes nothing returns nothing
    call SetUnitOwner( GetEnumUnit(), Player(0), false )
endfunction

function Trig_OutroSetup_Func079001002 takes nothing returns boolean
    return ( GetUnitTypeId(GetFilterUnit()) == 'nglm' )
endfunction

function Trig_OutroSetup_Func079A takes nothing returns nothing
    call UnitAddAbilityBJ( 'Amnx', GetEnumUnit() )
    call UnitAddAbilityBJ( 'Amin', GetEnumUnit() )
    call SetUnitInvulnerable( GetEnumUnit(), false )
    call PauseUnitBJ( false, GetEnumUnit() )
endfunction

function Trig_OutroSetup_Actions takes nothing returns nothing
    call SetSkyModel( "Environment\\Sky\\LordaeronSummerSky\\LordaeronSummerSky.mdl" )
    call ClearSelectionForPlayer( udg_Player01 )
    // Show Cinematic Mountians
    call SetDoodadAnimationRectBJ( "stand", 'D614', GetPlayableMapRect() )
    call SetDoodadAnimationRectBJ( "stand", 'D618', GetPlayableMapRect() )
    call SetDoodadAnimationRectBJ( "stand", 'D619', GetPlayableMapRect() )
    call SetDoodadAnimationRectBJ( "stand", 'D61A', GetPlayableMapRect() )
    call EnumDestructablesInRectAll( gg_rct_BarrelsWIthExposives, function Trig_OutroSetup_Func008A )
    call ForGroupBJ( GetUnitsInRectOfPlayer(gg_rct_OutroPlayerClear, udg_Player01), function Trig_OutroSetup_Func009A )
    if ( Trig_OutroSetup_Func010C() ) then
        call ReviveHeroLoc( udg_Hero_Eitrigg, GetRectCenter(gg_rct_CutsceneHeroRevive), false )
    else
    endif
    if ( Trig_OutroSetup_Func011C() ) then
        call ReviveHeroLoc( udg_Hero_Garona, GetRectCenter(gg_rct_CutsceneHeroRevive), false )
    else
    endif
    if ( Trig_OutroSetup_Func012C() ) then
        call ReviveHeroLoc( udg_Hero_Anduin, GetRectCenter(gg_rct_CutsceneHeroRevive), false )
    else
    endif
    if ( Trig_OutroSetup_Func013C() ) then
        call ReviveHeroLoc( udg_Hero_Kurdran, GetRectCenter(gg_rct_CutsceneHeroRevive), false )
    else
    endif
    call SetUnitInvulnerable( udg_Hero_Anduin, true )
    call SetUnitInvulnerable( udg_Hero_Kurdran, true )
    call SetUnitInvulnerable( udg_Hero_Eitrigg, true )
    call SetUnitInvulnerable( udg_Hero_Garona, true )
    call GroupAddUnitSimple( udg_Hero_Anduin, udg_OutroHeroesHuman )
    call GroupAddUnitSimple( udg_Hero_Kurdran, udg_OutroHeroesHuman )
    call GroupAddUnitSimple( udg_Hero_Eitrigg, udg_OutroHeroesOrc )
    call GroupAddUnitSimple( udg_Hero_Garona, udg_OutroHeroesOrc )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_PlayerElves), function Trig_OutroSetup_Func022A )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_PlayerNoL), function Trig_OutroSetup_Func023A )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_PlayerWildBlue), function Trig_OutroSetup_Func024A )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_PlayerWildEmerald), function Trig_OutroSetup_Func025A )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_PlayerWildMaroon), function Trig_OutroSetup_Func026A )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_PlayerWildSnow), function Trig_OutroSetup_Func027A )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_PlayerWildYellow), function Trig_OutroSetup_Func028A )
    call ForGroupBJ( udg_OutroForce, function Trig_OutroSetup_Func029A )
    call ForGroupBJ( GetUnitsInRectAll(GetPlayableMapRect()), function Trig_OutroSetup_Func030A )
    call ForGroupBJ( udg_OutroHeroesOrc, function Trig_OutroSetup_Func031A )
    call SetUnitPositionLocFacingBJ( udg_Hero_Eitrigg, GetRectCenter(gg_rct_OutroEitrigg01), 280.10 )
    call SetUnitPositionLocFacingBJ( udg_Hero_Garona, GetRectCenter(gg_rct_OutroGarona00), 235.88 )
    call PauseUnitBJ( true, udg_Hero_Eitrigg )
    call PauseUnitBJ( true, udg_Hero_Garona )
    call ShowUnitHide( udg_Hero_Garona )
    call CreateNUnitsAtLoc( 1, 'ngsp', Player(PLAYER_NEUTRAL_PASSIVE), GetRectCenter(gg_rct_OutroSappers01), 73.98 )
    set udg_OutroSapper01 = GetLastCreatedUnit()
    call SetUnitColor( udg_OutroSapper01, GetPlayerColor(udg_Player01) )
    call CreateNUnitsAtLoc( 1, 'ngsp', Player(PLAYER_NEUTRAL_PASSIVE), GetRectCenter(gg_rct_OutroSappers02), 110.69 )
    set udg_OutroSapper02 = GetLastCreatedUnit()
    call SetUnitColor( udg_OutroSapper02, GetPlayerColor(udg_Player01) )
    // LastStandGrunts
    call CreateNUnitsAtLocFacingLocBJ( 1, 'o60G', Player(0), GetRectCenter(gg_rct_FinalStandGrunt01), GetRectCenter(gg_rct_BarrelsWIthExposives) )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_LastStandGrunts )
    call CreateNUnitsAtLocFacingLocBJ( 1, 'o60G', Player(0), GetRectCenter(gg_rct_FinalStandGrunt02), GetRectCenter(gg_rct_BarrelsWIthExposives) )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_LastStandGrunts )
    call CreateNUnitsAtLocFacingLocBJ( 1, 'o60G', Player(0), GetRectCenter(gg_rct_FinalStandGrunt03), GetRectCenter(gg_rct_BarrelsWIthExposives) )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_LastStandGrunts )
    call CreateNUnitsAtLocFacingLocBJ( 1, 'o60G', Player(0), GetRectCenter(gg_rct_FinalStandGrunt04), GetRectCenter(gg_rct_BarrelsWIthExposives) )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_LastStandGrunts )
    call CreateNUnitsAtLocFacingLocBJ( 1, 'o60G', Player(0), GetRectCenter(gg_rct_FinalStandGrunt05), GetRectCenter(gg_rct_BarrelsWIthExposives) )
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_LastStandGrunts )
    call ForGroupBJ( udg_LastStandGrunts, function Trig_OutroSetup_Func054A )
    // Explosives
    call ShowDestructableBJ( true, gg_dest_B00C_0304 )
    call ShowDestructableBJ( true, gg_dest_B00C_5899 )
    call ShowDestructableBJ( true, gg_dest_B00C_5922 )
    call ShowDestructableBJ( true, gg_dest_B00C_6025 )
    call ShowDestructableBJ( true, gg_dest_B00C_6124 )
    call ShowDestructableBJ( true, gg_dest_B00C_6122 )
    call ShowDestructableBJ( true, gg_dest_B00C_6125 )
    call ShowUnitShow( gg_unit_nglm_0278 )
    call ShowUnitShow( gg_unit_nglm_0242 )
    call ShowUnitShow( gg_unit_nglm_0279 )
    call ShowUnitShow( gg_unit_nglm_0285 )
    call ShowDestructableBJ( true, gg_dest_B00C_6024 )
    call ShowDestructableBJ( true, gg_dest_B00C_6047 )
    call ShowDestructableBJ( true, gg_dest_B00C_0342 )
    call ShowDestructableBJ( true, gg_dest_B00C_5900 )
    call ShowDestructableBJ( true, gg_dest_B00C_6113 )
    call ShowDestructableBJ( true, gg_dest_B00C_6116 )
    call ShowDestructableBJ( true, gg_dest_B00C_6121 )
    call ShowUnitShow( gg_unit_nglm_0276 )
    call ShowUnitShow( gg_unit_nglm_0277 )
    call ShowUnitShow( gg_unit_nglm_0275 )
    call ShowUnitShow( gg_unit_nglm_0255 )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_BarrelsWIthExposives, Condition(function Trig_OutroSetup_Func078001002)), function Trig_OutroSetup_Func078A )
    call ForGroupBJ( GetUnitsInRectMatching(gg_rct_BarrelsWIthExposives, Condition(function Trig_OutroSetup_Func079001002)), function Trig_OutroSetup_Func079A )
endfunction

//===========================================================================
function InitTrig_OutroSetup takes nothing returns nothing
    set gg_trg_OutroSetup = CreateTrigger(  )
    call DisableTrigger( gg_trg_OutroSetup )
    call TriggerAddAction( gg_trg_OutroSetup, function Trig_OutroSetup_Actions )
endfunction

//===========================================================================
// Trigger: OutroSkipped
//===========================================================================
function Trig_OutroSkipped_Conditions takes nothing returns boolean
    if ( not ( udg_OutroCinematic == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_OutroSkipped_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call StopSoundBJ( gg_snd_WC2Orc08SLothar5, false )
    call StopSoundBJ( gg_snd_WC2Orc08SKurdran3, false )
    call StopSoundBJ( gg_snd_WC2Orc08SKurdran4, false )
    call StopSoundBJ( gg_snd_WC2Orc08SEitrigg7, false )
    call StopSoundBJ( gg_snd_WC2Orc08SGarona3, false )
    set udg_OutroSkipped = true
    call ConditionalTriggerExecute( gg_trg_Next_Level_Prep )
    call ConditionalTriggerExecute( gg_trg_Victory )
endfunction

//===========================================================================
function InitTrig_OutroSkipped takes nothing returns nothing
    set gg_trg_OutroSkipped = CreateTrigger(  )
    call DisableTrigger( gg_trg_OutroSkipped )
    call TriggerRegisterPlayerEventEndCinematic( gg_trg_OutroSkipped, Player(0) )
    call TriggerAddCondition( gg_trg_OutroSkipped, Condition( function Trig_OutroSkipped_Conditions ) )
    call TriggerAddAction( gg_trg_OutroSkipped, function Trig_OutroSkipped_Actions )
endfunction

//===========================================================================
// Trigger: OutroSway
//===========================================================================
function Trig_OutroSway_Func003001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroSway_Func006001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroSway_Func008001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroSway_Func011001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroSway_Func014001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_OutroSway_Actions takes nothing returns nothing
    call CameraSetEQNoiseForPlayer( Player(0), 0.50 )
    call TriggerSleepAction( 4.00 )
    if ( Trig_OutroSway_Func003001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetEQNoiseForPlayer( Player(0), 0.10 )
    call TriggerSleepAction( 0.25 )
    if ( Trig_OutroSway_Func006001() ) then
        return
    else
        call DoNothing(  )
    endif
    call TriggerSleepAction( 1.00 )
    if ( Trig_OutroSway_Func008001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetSourceNoiseForPlayer( Player(0), 0.00, 0.00 )
    call TriggerSleepAction( 1.00 )
    if ( Trig_OutroSway_Func011001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetEQNoiseForPlayer( Player(0), 0.05 )
    call TriggerSleepAction( 1.00 )
    if ( Trig_OutroSway_Func014001() ) then
        return
    else
        call DoNothing(  )
    endif
    call CameraSetEQNoiseForPlayer( Player(0), 0.02 )
endfunction

//===========================================================================
function InitTrig_OutroSway takes nothing returns nothing
    set gg_trg_OutroSway = CreateTrigger(  )
    call DisableTrigger( gg_trg_OutroSway )
    call TriggerAddAction( gg_trg_OutroSway, function Trig_OutroSway_Actions )
endfunction

//===========================================================================
// Trigger: EitriggDeathSequence
//
// First two waits must equal 3
// First three waits must equal 11
//===========================================================================
function Trig_EitriggDeathSequence_Func010001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_EitriggDeathSequence_Func015A takes nothing returns nothing
    call RemoveUnit( GetEnumUnit() )
endfunction

function Trig_EitriggDeathSequence_Func017001 takes nothing returns boolean
    return ( udg_OutroSkipped == true )
endfunction

function Trig_EitriggDeathSequence_Actions takes nothing returns nothing
    call SetUnitAnimation( udg_Hero_Eitrigg, "Stand Victory" )
    call QueueUnitAnimationBJ( udg_Hero_Eitrigg, "cinematic listening one" )
    call TriggerSleepAction( 0.50 )
    call SetUnitFacingTimed( udg_OutroSapper01, 221.12, 0.50 )
    call SetUnitFacingTimed( udg_OutroSapper02, 29.71, 0.40 )
    call SetUnitTimeScalePercent( udg_Hero_Eitrigg, 15.00 )
    call TriggerSleepAction( 2.50 )
    call SetUnitTimeScalePercent( udg_Hero_Eitrigg, 50.00 )
    call TriggerSleepAction( 8.00 )
    if ( Trig_EitriggDeathSequence_Func010001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitTimeScalePercent( udg_Hero_Eitrigg, 100.00 )
    call SetUnitPositionLocFacingBJ( udg_Hero_Eitrigg, GetRectCenter(gg_rct_OutroEitrigg03), 222.11 )
    call VolumeGroupSetVolumeBJ( SOUND_VOLUMEGROUP_SPELLS, 0.00 )
    call SetUnitAnimation( udg_Hero_Eitrigg, "death" )
    call ForGroupBJ( udg_LastStandGrunts, function Trig_EitriggDeathSequence_Func015A )
    call TriggerSleepAction( 0.90 )
    if ( Trig_EitriggDeathSequence_Func017001() ) then
        return
    else
        call DoNothing(  )
    endif
    call SetUnitTimeScalePercent( udg_Hero_Eitrigg, 1.00 )
    call CreatePermanentCorpseLocBJ( bj_CORPSETYPE_FLESH, 'o60G', Player(0), GetRectCenter(gg_rct_FinalStandGrunt01), GetRandomDirectionDeg() )
    call CreatePermanentCorpseLocBJ( bj_CORPSETYPE_FLESH, 'o60G', Player(0), GetRectCenter(gg_rct_FinalStandGrunt02), GetRandomDirectionDeg() )
    call CreatePermanentCorpseLocBJ( bj_CORPSETYPE_FLESH, 'o60G', Player(0), GetRectCenter(gg_rct_FinalStandGrunt03), GetRandomDirectionDeg() )
    call CreatePermanentCorpseLocBJ( bj_CORPSETYPE_FLESH, 'o60G', Player(0), GetRectCenter(gg_rct_FinalStandGrunt04), GetRandomDirectionDeg() )
    call CreatePermanentCorpseLocBJ( bj_CORPSETYPE_FLESH, 'o60G', Player(0), GetRectCenter(gg_rct_FinalStandGrunt05), GetRandomDirectionDeg() )
endfunction

//===========================================================================
function InitTrig_EitriggDeathSequence takes nothing returns nothing
    set gg_trg_EitriggDeathSequence = CreateTrigger(  )
    call DisableTrigger( gg_trg_EitriggDeathSequence )
    call TriggerAddAction( gg_trg_EitriggDeathSequence, function Trig_EitriggDeathSequence_Actions )
endfunction

//===========================================================================
// Trigger: FailureCinQ
//===========================================================================
function Trig_FailureCinQ_Func020001 takes nothing returns boolean
    return ( udg_FailureSkipped == true )
endfunction

function Trig_FailureCinQ_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_GameOver = true
    // Settings
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 2.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    call TriggerSleepAction( 2.00 )
    // Setup
    call ConditionalTriggerExecute( gg_trg_OilUIHide )
    call TimerDialogDisplayBJ( false, udg_HoardExitWindow )
    call CinematicModeBJ( true, GetPlayersAll() )
    call CameraSetupApplyForPlayer( true, gg_cam_Failure, Player(0), 0 )
    call SetCineModeVolumeGroupsBJ(  )
    call ConditionalTriggerExecute( gg_trg_FailureSetup )
    call TriggerSleepAction( 0.25 )
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 2.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    call PlayThematicMusicBJ( "OrcDefeat" )
    set udg_FailureCinematic = true
    // Skippable
    call EnableTrigger( gg_trg_FailureSkipped )
    call TriggerSleepAction( 10.00 )
    if ( Trig_FailureCinQ_Func020001() ) then
        return
    else
        call DoNothing(  )
    endif
    call DisableTrigger( gg_trg_FailureSkipped )
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 2.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    call TriggerSleepAction( 2.00 )
    call ConditionalTriggerExecute( gg_trg_Defeat )
endfunction

//===========================================================================
function InitTrig_FailureCinQ takes nothing returns nothing
    set gg_trg_FailureCinQ = CreateTrigger(  )
    call TriggerAddAction( gg_trg_FailureCinQ, function Trig_FailureCinQ_Actions )
endfunction

//===========================================================================
// Trigger: FailureSetup
//===========================================================================
function Trig_FailureSetup_Func009A takes nothing returns nothing
    call RemoveUnit( GetEnumUnit() )
endfunction

function Trig_FailureSetup_Actions takes nothing returns nothing
    call SetSkyModel( "Environment\\Sky\\LordaeronSummerSky\\LordaeronSummerSky.mdl" )
    // Show Cinematic Mountians
    call SetDoodadAnimationRectBJ( "stand", 'D614', GetPlayableMapRect() )
    call SetDoodadAnimationRectBJ( "stand", 'D618', GetPlayableMapRect() )
    call SetDoodadAnimationRectBJ( "stand", 'D619', GetPlayableMapRect() )
    call SetDoodadAnimationRectBJ( "stand", 'D61A', GetPlayableMapRect() )
    call ClearSelectionForPlayer( udg_Player01 )
    call PauseAllUnitsBJ( true )
    call ForGroupBJ( GetUnitsInRectAll(gg_rct_OutroPlayerClear), function Trig_FailureSetup_Func009A )
    call CreateNUnitsAtLoc( 1, 'H61J', udg_PlayerNoL, GetRectCenter(gg_rct_FailureAnduin), 307.93 )
    set udg_FailureAnduin = GetLastCreatedUnit()
    call SetUnitBlendTimeBJ( udg_FailureAnduin, 0.35 )
    call AddUnitAnimationPropertiesBJ( true, "cinematic", udg_FailureAnduin )
    call SetUnitAnimation( udg_FailureAnduin, "cinematic listening one" )
    call SetUnitTimeScalePercent( udg_FailureAnduin, 50.00 )
    call DestructableRestoreLife( gg_dest_OTip_3845, GetDestructableMaxLife(gg_dest_OTip_3845), false )
    call DestructableRestoreLife( gg_dest_OTip_3853, GetDestructableMaxLife(gg_dest_OTip_3845), false )
    call DestructableRestoreLife( gg_dest_OTip_3854, GetDestructableMaxLife(gg_dest_OTip_3845), false )
    call EnableTrigger( gg_trg_FailureArmyCreate )
    call TriggerSleepAction( 2.00 )
    call SetUnitAnimation( udg_FailureAnduin, "stand victory" )
    call QueueUnitAnimationBJ( udg_FailureAnduin, "cinematic listening one" )
endfunction

//===========================================================================
function InitTrig_FailureSetup takes nothing returns nothing
    set gg_trg_FailureSetup = CreateTrigger(  )
    call DisableTrigger( gg_trg_FailureSetup )
    call TriggerAddAction( gg_trg_FailureSetup, function Trig_FailureSetup_Actions )
endfunction

//===========================================================================
// Trigger: FailureArmyCreate
//===========================================================================
function Trig_FailureArmyCreate_Actions takes nothing returns nothing
    call CreateNUnitsAtLoc( 1, 'h60K', udg_PlayerNoL, GetRectCenter(gg_rct_FailureArmyCreate), 90.00 )
    call IssuePointOrderLocBJ( GetLastCreatedUnit(), "move", GetRectCenter(gg_rct_FailureArmyTarget) )
endfunction

//===========================================================================
function InitTrig_FailureArmyCreate takes nothing returns nothing
    set gg_trg_FailureArmyCreate = CreateTrigger(  )
    call DisableTrigger( gg_trg_FailureArmyCreate )
    call TriggerRegisterTimerEventPeriodic( gg_trg_FailureArmyCreate, 1.50 )
    call TriggerAddAction( gg_trg_FailureArmyCreate, function Trig_FailureArmyCreate_Actions )
endfunction

//===========================================================================
// Trigger: FailureSkipped
//===========================================================================
function Trig_FailureSkipped_Conditions takes nothing returns boolean
    if ( not ( udg_FailureCinematic == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_FailureSkipped_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_FailureSkipped = true
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 2.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 100.00, 100.00, 100.00, 0 )
    call TriggerSleepAction( 2 )
    call ConditionalTriggerExecute( gg_trg_Defeat )
endfunction

//===========================================================================
function InitTrig_FailureSkipped takes nothing returns nothing
    set gg_trg_FailureSkipped = CreateTrigger(  )
    call DisableTrigger( gg_trg_FailureSkipped )
    call TriggerRegisterPlayerEventEndCinematic( gg_trg_FailureSkipped, Player(0) )
    call TriggerAddCondition( gg_trg_FailureSkipped, Condition( function Trig_FailureSkipped_Conditions ) )
    call TriggerAddAction( gg_trg_FailureSkipped, function Trig_FailureSkipped_Actions )
endfunction

//===========================================================================
// Trigger: EitriggAquire
//===========================================================================
function Trig_EitriggAquire_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_EitriggAquire_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call DisableTrigger( gg_trg_ReturnEitrigToCamp )
    set udg_EitrigPatrols = false
    call PanCameraToTimedLocForPlayer( Player(0), GetUnitLoc(udg_Hero_Eitrigg), 1.00 )
    call SelectUnitForPlayerSingle( udg_Hero_Eitrigg, Player(0) )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_HINT, "TRIGSTR_2636" )
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_IntroEitrigg03), 3.00 )
    call PolledWait( 3.00 )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_EitriggAquire takes nothing returns nothing
    set gg_trg_EitriggAquire = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_EitriggAquire, Condition( function Trig_EitriggAquire_Conditions ) )
    call TriggerAddAction( gg_trg_EitriggAquire, function Trig_EitriggAquire_Actions )
endfunction

//===========================================================================
// Trigger: EitriggLife
//===========================================================================
function Trig_EitriggLife_Conditions takes nothing returns boolean
    if ( not ( GetAttackedUnitBJ() == udg_Hero_Eitrigg ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(udg_Hero_Eitrigg) == Player(2) ) ) then
        return false
    endif
    return true
endfunction

function Trig_EitriggLife_Func001C takes nothing returns boolean
    if ( not ( GetUnitLifePercent(GetAttackedUnitBJ()) <= 50.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_EitriggLife_Actions takes nothing returns nothing
    if ( Trig_EitriggLife_Func001C() ) then
        call SetUnitLifePercentBJ( udg_Hero_Eitrigg, 100.00 )
    else
    endif
    set udg_EitrigPatrols = false
    set udg_EitrigIsAttacked = true
    set udg_EitrigTarget = GetAttacker()
endfunction

//===========================================================================
function InitTrig_EitriggLife takes nothing returns nothing
    set gg_trg_EitriggLife = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_EitriggLife, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_EitriggLife, Condition( function Trig_EitriggLife_Conditions ) )
    call TriggerAddAction( gg_trg_EitriggLife, function Trig_EitriggLife_Actions )
endfunction

//===========================================================================
// Trigger: Eitrigg Patrol A
//===========================================================================
function Trig_Eitrigg_Patrol_A_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( GetEnteringUnit() == udg_Hero_Eitrigg ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Eitrigg_Patrol_A_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( udg_Hero_Eitrigg, "attack", GetRectCenter(gg_rct_BasePatrol02) )
    set udg_EitrigPatrols = true
endfunction

//===========================================================================
function InitTrig_Eitrigg_Patrol_A takes nothing returns nothing
    set gg_trg_Eitrigg_Patrol_A = CreateTrigger(  )
    call DisableTrigger( gg_trg_Eitrigg_Patrol_A )
    call TriggerRegisterEnterRectSimple( gg_trg_Eitrigg_Patrol_A, gg_rct_BasePatrol01 )
    call TriggerAddCondition( gg_trg_Eitrigg_Patrol_A, Condition( function Trig_Eitrigg_Patrol_A_Conditions ) )
    call TriggerAddAction( gg_trg_Eitrigg_Patrol_A, function Trig_Eitrigg_Patrol_A_Actions )
endfunction

//===========================================================================
// Trigger: Eitrigg Patrol B
//===========================================================================
function Trig_Eitrigg_Patrol_B_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( GetEnteringUnit() == udg_Hero_Eitrigg ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Eitrigg_Patrol_B_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( udg_Hero_Eitrigg, "attack", GetRectCenter(gg_rct_BasePatrol03) )
    set udg_EitrigPatrols = true
endfunction

//===========================================================================
function InitTrig_Eitrigg_Patrol_B takes nothing returns nothing
    set gg_trg_Eitrigg_Patrol_B = CreateTrigger(  )
    call DisableTrigger( gg_trg_Eitrigg_Patrol_B )
    call TriggerRegisterEnterRectSimple( gg_trg_Eitrigg_Patrol_B, gg_rct_BasePatrol02 )
    call TriggerAddCondition( gg_trg_Eitrigg_Patrol_B, Condition( function Trig_Eitrigg_Patrol_B_Conditions ) )
    call TriggerAddAction( gg_trg_Eitrigg_Patrol_B, function Trig_Eitrigg_Patrol_B_Actions )
endfunction

//===========================================================================
// Trigger: Eitrigg Patrol C
//===========================================================================
function Trig_Eitrigg_Patrol_C_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( GetEnteringUnit() == udg_Hero_Eitrigg ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Eitrigg_Patrol_C_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( udg_Hero_Eitrigg, "attack", GetRectCenter(gg_rct_BasePatrol04) )
    set udg_EitrigPatrols = true
endfunction

//===========================================================================
function InitTrig_Eitrigg_Patrol_C takes nothing returns nothing
    set gg_trg_Eitrigg_Patrol_C = CreateTrigger(  )
    call DisableTrigger( gg_trg_Eitrigg_Patrol_C )
    call TriggerRegisterEnterRectSimple( gg_trg_Eitrigg_Patrol_C, gg_rct_BasePatrol03 )
    call TriggerAddCondition( gg_trg_Eitrigg_Patrol_C, Condition( function Trig_Eitrigg_Patrol_C_Conditions ) )
    call TriggerAddAction( gg_trg_Eitrigg_Patrol_C, function Trig_Eitrigg_Patrol_C_Actions )
endfunction

//===========================================================================
// Trigger: Eitrigg Patrol D
//===========================================================================
function Trig_Eitrigg_Patrol_D_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( GetEnteringUnit() == udg_Hero_Eitrigg ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Eitrigg_Patrol_D_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( udg_Hero_Eitrigg, "attack", GetRectCenter(gg_rct_BasePatrol01) )
    set udg_EitrigPatrols = true
endfunction

//===========================================================================
function InitTrig_Eitrigg_Patrol_D takes nothing returns nothing
    set gg_trg_Eitrigg_Patrol_D = CreateTrigger(  )
    call DisableTrigger( gg_trg_Eitrigg_Patrol_D )
    call TriggerRegisterEnterRectSimple( gg_trg_Eitrigg_Patrol_D, gg_rct_BasePatrol04 )
    call TriggerAddCondition( gg_trg_Eitrigg_Patrol_D, Condition( function Trig_Eitrigg_Patrol_D_Conditions ) )
    call TriggerAddAction( gg_trg_Eitrigg_Patrol_D, function Trig_Eitrigg_Patrol_D_Actions )
endfunction

//===========================================================================
// Trigger: ReturnEitrigToCamp
//===========================================================================
function Trig_ReturnEitrigToCamp_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(udg_Hero_Eitrigg) == Player(2) ) ) then
        return false
    endif
    if ( not ( udg_EitrigPatrols == false ) ) then
        return false
    endif
    if ( not ( udg_EitrigIsAttacked == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_ReturnEitrigToCamp_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( udg_Hero_Eitrigg, "attack", GetRectCenter(gg_rct_BasePatrol01) )
endfunction

//===========================================================================
function InitTrig_ReturnEitrigToCamp takes nothing returns nothing
    set gg_trg_ReturnEitrigToCamp = CreateTrigger(  )
    call DisableTrigger( gg_trg_ReturnEitrigToCamp )
    call TriggerRegisterTimerEventPeriodic( gg_trg_ReturnEitrigToCamp, 15.00 )
    call TriggerAddCondition( gg_trg_ReturnEitrigToCamp, Condition( function Trig_ReturnEitrigToCamp_Conditions ) )
    call TriggerAddAction( gg_trg_ReturnEitrigToCamp, function Trig_ReturnEitrigToCamp_Actions )
endfunction

//===========================================================================
// Trigger: EitrigKillsEnemies
//===========================================================================
function Trig_EitrigKillsEnemies_Conditions takes nothing returns boolean
    if ( not ( GetDyingUnit() == udg_EitrigTarget ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(udg_Hero_Eitrigg) == Player(2) ) ) then
        return false
    endif
    if ( not ( udg_EitrigIsAttacked == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_EitrigKillsEnemies_Actions takes nothing returns nothing
    set udg_EitrigTarget = null
    set udg_EitrigIsAttacked = false
    call EnableTrigger( gg_trg_ReturnEitrigToCamp )
endfunction

//===========================================================================
function InitTrig_EitrigKillsEnemies takes nothing returns nothing
    set gg_trg_EitrigKillsEnemies = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_EitrigKillsEnemies, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_EitrigKillsEnemies, Condition( function Trig_EitrigKillsEnemies_Conditions ) )
    call TriggerAddAction( gg_trg_EitrigKillsEnemies, function Trig_EitrigKillsEnemies_Actions )
endfunction

//===========================================================================
// Trigger: Garona Patrol A
//===========================================================================
function Trig_Garona_Patrol_A_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( GetTriggerUnit() == udg_Hero_Garona ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Garona_Patrol_A_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( udg_Hero_Garona, "attack", GetRectCenter(gg_rct_BasePatrol02) )
endfunction

//===========================================================================
function InitTrig_Garona_Patrol_A takes nothing returns nothing
    set gg_trg_Garona_Patrol_A = CreateTrigger(  )
    call DisableTrigger( gg_trg_Garona_Patrol_A )
    call TriggerRegisterEnterRectSimple( gg_trg_Garona_Patrol_A, gg_rct_BasePatrol01 )
    call TriggerAddCondition( gg_trg_Garona_Patrol_A, Condition( function Trig_Garona_Patrol_A_Conditions ) )
    call TriggerAddAction( gg_trg_Garona_Patrol_A, function Trig_Garona_Patrol_A_Actions )
endfunction

//===========================================================================
// Trigger: Garona Patrol B
//===========================================================================
function Trig_Garona_Patrol_B_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( GetTriggerUnit() == udg_Hero_Garona ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Garona_Patrol_B_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( udg_Hero_Garona, "attack", GetRectCenter(gg_rct_BasePatrol03) )
endfunction

//===========================================================================
function InitTrig_Garona_Patrol_B takes nothing returns nothing
    set gg_trg_Garona_Patrol_B = CreateTrigger(  )
    call DisableTrigger( gg_trg_Garona_Patrol_B )
    call TriggerRegisterEnterRectSimple( gg_trg_Garona_Patrol_B, gg_rct_BasePatrol02 )
    call TriggerAddCondition( gg_trg_Garona_Patrol_B, Condition( function Trig_Garona_Patrol_B_Conditions ) )
    call TriggerAddAction( gg_trg_Garona_Patrol_B, function Trig_Garona_Patrol_B_Actions )
endfunction

//===========================================================================
// Trigger: Garona Patrol C
//===========================================================================
function Trig_Garona_Patrol_C_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( GetTriggerUnit() == udg_Hero_Garona ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Garona_Patrol_C_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( udg_Hero_Garona, "attack", GetRectCenter(gg_rct_BasePatrol04) )
endfunction

//===========================================================================
function InitTrig_Garona_Patrol_C takes nothing returns nothing
    set gg_trg_Garona_Patrol_C = CreateTrigger(  )
    call DisableTrigger( gg_trg_Garona_Patrol_C )
    call TriggerRegisterEnterRectSimple( gg_trg_Garona_Patrol_C, gg_rct_BasePatrol03 )
    call TriggerAddCondition( gg_trg_Garona_Patrol_C, Condition( function Trig_Garona_Patrol_C_Conditions ) )
    call TriggerAddAction( gg_trg_Garona_Patrol_C, function Trig_Garona_Patrol_C_Actions )
endfunction

//===========================================================================
// Trigger: Garona Patrol D
//===========================================================================
function Trig_Garona_Patrol_D_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( GetTriggerUnit() == udg_Hero_Garona ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Garona_Patrol_D_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( udg_Hero_Garona, "attack", GetRectCenter(gg_rct_BasePatrol01) )
endfunction

//===========================================================================
function InitTrig_Garona_Patrol_D takes nothing returns nothing
    set gg_trg_Garona_Patrol_D = CreateTrigger(  )
    call DisableTrigger( gg_trg_Garona_Patrol_D )
    call TriggerRegisterEnterRectSimple( gg_trg_Garona_Patrol_D, gg_rct_BasePatrol04 )
    call TriggerAddCondition( gg_trg_Garona_Patrol_D, Condition( function Trig_Garona_Patrol_D_Conditions ) )
    call TriggerAddAction( gg_trg_Garona_Patrol_D, function Trig_Garona_Patrol_D_Actions )
endfunction

//===========================================================================
// Trigger: GaronaFlee
//===========================================================================
function Trig_GaronaFlee_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_GaronaFlee_Func001C takes nothing returns boolean
    if ( not ( RectContainsUnit(gg_rct_GaronaExit, udg_Hero_Garona) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_GaronaFlee_Actions takes nothing returns nothing
    if ( Trig_GaronaFlee_Func001C() ) then
        call SetUnitPathing( udg_Hero_Garona, false )
        call IssuePointOrderLocBJ( udg_Hero_Garona, "move", GetRectCenter(gg_rct_GaronaExit) )
    else
    endif
endfunction

//===========================================================================
function InitTrig_GaronaFlee takes nothing returns nothing
    set gg_trg_GaronaFlee = CreateTrigger(  )
    call DisableTrigger( gg_trg_GaronaFlee )
    call TriggerRegisterTimerEventPeriodic( gg_trg_GaronaFlee, 3.00 )
    call TriggerAddCondition( gg_trg_GaronaFlee, Condition( function Trig_GaronaFlee_Conditions ) )
    call TriggerAddAction( gg_trg_GaronaFlee, function Trig_GaronaFlee_Actions )
endfunction

//===========================================================================
// Trigger: GaronaExit
//===========================================================================
function Trig_GaronaExit_Conditions takes nothing returns boolean
    if ( not ( GetTriggerUnit() == udg_Hero_Garona ) ) then
        return false
    endif
    return true
endfunction

function Trig_GaronaExit_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call UnitAddAbility(udg_Hero_Garona, 'Aloc' )
    call SetUnitVertexColorBJ( GetTriggerUnit(), 100.00, 100.00, 100.00, 10.00 )
    call TriggerSleepAction( 0.25 )
    call SetUnitVertexColorBJ( GetTriggerUnit(), 100.00, 100.00, 100.00, 20.00 )
    call TriggerSleepAction( 0.25 )
    call SetUnitVertexColorBJ( GetTriggerUnit(), 100.00, 100.00, 100.00, 30.00 )
    call TriggerSleepAction( 0.25 )
    call SetUnitVertexColorBJ( GetTriggerUnit(), 100.00, 100.00, 100.00, 40.00 )
    call TriggerSleepAction( 0.25 )
    call SetUnitVertexColorBJ( GetTriggerUnit(), 100.00, 100.00, 100.00, 50.00 )
    call UnitShareVisionBJ( false, udg_Hero_Garona, udg_Player01 )
    call TriggerSleepAction( 0.25 )
    call SetUnitVertexColorBJ( GetTriggerUnit(), 100.00, 100.00, 100.00, 60.00 )
    call TriggerSleepAction( 0.25 )
    call SetUnitVertexColorBJ( GetTriggerUnit(), 100.00, 100.00, 100.00, 70.00 )
    call TriggerSleepAction( 0.25 )
    call SetUnitVertexColorBJ( GetTriggerUnit(), 100.00, 100.00, 100.00, 80.00 )
    call TriggerSleepAction( 0.25 )
    call SetUnitVertexColorBJ( GetTriggerUnit(), 100.00, 100.00, 100.00, 90.00 )
    call TriggerSleepAction( 0.25 )
    call SetUnitVertexColorBJ( GetTriggerUnit(), 100.00, 100.00, 100.00, 100.00 )
    call TriggerSleepAction( 0.25 )
    call SetUnitInvulnerable( udg_Hero_Garona, true )
    call PauseUnitBJ( true, udg_Hero_Garona )
    call ShowUnitHide( udg_Hero_Garona )
    call SetUnitVertexColorBJ( GetTriggerUnit(), 100.00, 100.00, 100.00, 0.00 )
endfunction

//===========================================================================
function InitTrig_GaronaExit takes nothing returns nothing
    set gg_trg_GaronaExit = CreateTrigger(  )
    call DisableTrigger( gg_trg_GaronaExit )
    call TriggerRegisterEnterRectSimple( gg_trg_GaronaExit, gg_rct_MidHeroExitFade )
    call TriggerAddCondition( gg_trg_GaronaExit, Condition( function Trig_GaronaExit_Conditions ) )
    call TriggerAddAction( gg_trg_GaronaExit, function Trig_GaronaExit_Actions )
endfunction

//===========================================================================
// Trigger: GaronaClick
//===========================================================================
function Trig_GaronaClick_Conditions takes nothing returns boolean
    if ( not ( IsQuestDiscovered(udg_MainQuestSurvive) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_GaronaClick_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call QueuedTriggerAddBJ( gg_trg_GaronaClickResponse, true )
endfunction

//===========================================================================
function InitTrig_GaronaClick takes nothing returns nothing
    set gg_trg_GaronaClick = CreateTrigger(  )
    call TriggerRegisterUnitEvent( gg_trg_GaronaClick, gg_unit_E602_0012, EVENT_UNIT_SELECTED )
    call TriggerAddCondition( gg_trg_GaronaClick, Condition( function Trig_GaronaClick_Conditions ) )
    call TriggerAddAction( gg_trg_GaronaClick, function Trig_GaronaClick_Actions )
endfunction

//===========================================================================
// Trigger: GaronaClickResponse
//===========================================================================
function Trig_GaronaClickResponse_Func005Func003Func003Func003C takes nothing returns boolean
    if ( not ( udg_GaronaClickChance == 4 ) ) then
        return false
    endif
    return true
endfunction

function Trig_GaronaClickResponse_Func005Func003Func003C takes nothing returns boolean
    if ( not ( udg_GaronaClickChance == 3 ) ) then
        return false
    endif
    return true
endfunction

function Trig_GaronaClickResponse_Func005Func003C takes nothing returns boolean
    if ( not ( udg_GaronaClickChance == 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_GaronaClickResponse_Func005C takes nothing returns boolean
    if ( not ( udg_GaronaClickChance == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_GaronaClickResponse_Actions takes nothing returns nothing
    // //
    set udg_GaronaClickChance = GetRandomInt(1, 4)
    // //
    call SetSpeechVolumeGroupsBJ(  )
    if ( Trig_GaronaClickResponse_Func005C() ) then
        call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Garona, "TRIGSTR_2952", gg_snd_TyrandePissed1, "TRIGSTR_2953", bj_TIMETYPE_ADD, 0, true )
    else
        if ( Trig_GaronaClickResponse_Func005Func003C() ) then
            call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Garona, "TRIGSTR_2954", gg_snd_TyrandePissed3, "TRIGSTR_2955", bj_TIMETYPE_ADD, 0, true )
        else
            if ( Trig_GaronaClickResponse_Func005Func003Func003C() ) then
                call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Garona, "TRIGSTR_2956", gg_snd_TyrandePissed4, "TRIGSTR_2957", bj_TIMETYPE_ADD, 0, true )
            else
                if ( Trig_GaronaClickResponse_Func005Func003Func003Func003C() ) then
                    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Garona, "TRIGSTR_2958", gg_snd_TyrandePissed5, "TRIGSTR_2959", bj_TIMETYPE_ADD, 0, true )
                else
                    call DoNothing(  )
                endif
            endif
        endif
    endif
    call VolumeGroupResetBJ(  )
    // //
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
    call EnableTrigger( gg_trg_GaronaClick )
endfunction

//===========================================================================
function InitTrig_GaronaClickResponse takes nothing returns nothing
    set gg_trg_GaronaClickResponse = CreateTrigger(  )
    call TriggerAddAction( gg_trg_GaronaClickResponse, function Trig_GaronaClickResponse_Actions )
endfunction

//===========================================================================
// Trigger: Quests Create
//
// Settlements Optional see: Settlements Optional Discover Q
// It is implemented this way to preventr a ? tile appearing in the quest log.
// Same for Survive.
//===========================================================================
function Trig_Quests_Create_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Quests_Create_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    // Settlements
    call CreateQuestBJ( bj_QUESTTYPE_REQ_UNDISCOVERED, "TRIGSTR_2436", "TRIGSTR_2437", "ReplaceableTextures\\CommandButtons\\BTNOrgrim.blp" )
    set udg_MainQuestSettlements = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( udg_MainQuestSettlements, "TRIGSTR_2438" )
    set udg_MainQuestReqWildhammer = GetLastCreatedQuestItemBJ()
    // Trolls
    call CreateQuestBJ( bj_QUESTTYPE_REQ_UNDISCOVERED, "TRIGSTR_2440", "TRIGSTR_2441", "ReplaceableTextures\\CommandButtons\\BTNZuljin.dds" )
    set udg_MainQuestTrolls = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( udg_MainQuestTrolls, "TRIGSTR_2442" )
    set udg_MainQuestReqTrolls = GetLastCreatedQuestItemBJ()
    // Trolls Optional
    call CreateQuestBJ( bj_QUESTTYPE_OPT_UNDISCOVERED, "TRIGSTR_2541", "TRIGSTR_2542", "ReplaceableTextures\\CommandButtons\\BTNForestTrollWarlord.blp" )
    set udg_OptionalQuestTrolls = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( udg_OptionalQuestTrolls, "TRIGSTR_2543" )
    set udg_OptionalQuestReqTrolls = GetLastCreatedQuestItemBJ()
    // Elves Optional
    call CreateQuestBJ( bj_QUESTTYPE_OPT_UNDISCOVERED, "TRIGSTR_2531", "TRIGSTR_2532", "ReplaceableTextures\\CommandButtons\\BTNSwordsman.blp" )
    set udg_OptionalQuestElves = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( udg_OptionalQuestElves, "TRIGSTR_2533" )
    set udg_OptionalQuestReqElves = GetLastCreatedQuestItemBJ()
endfunction

//===========================================================================
function InitTrig_Quests_Create takes nothing returns nothing
    set gg_trg_Quests_Create = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Quests_Create, Condition( function Trig_Quests_Create_Conditions ) )
    call TriggerAddAction( gg_trg_Quests_Create, function Trig_Quests_Create_Actions )
endfunction

//===========================================================================
// Trigger: Settlements Discover Q
//===========================================================================
function Trig_Settlements_Discover_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Settlements_Discover_Q_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quests_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_MainQuestSettlements, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_2435" )
    call ConditionalTriggerExecute( gg_trg_SettlementsTimerCreate )
    call CampaignMinimapIconLocBJ( GetRectCenter(gg_rct_WildhammerBase01Blue), bj_CAMPPINGSTYLE_PRIMARY_RED )
    set udg_SettlementMarker01Blue = GetLastCreatedMinimapIcon()
    call CampaignMinimapIconLocBJ( GetRectCenter(gg_rct_WildhammerBase02Yellow), bj_CAMPPINGSTYLE_PRIMARY_RED )
    set udg_SettlementMarker02Yellow = GetLastCreatedMinimapIcon()
    call CampaignMinimapIconLocBJ( GetRectCenter(gg_rct_WildhammerBase03Red), bj_CAMPPINGSTYLE_PRIMARY_RED )
    set udg_SettlementMarker03Red = GetLastCreatedMinimapIcon()
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_WildhammerBase01Blue), 5.00 )
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_WildhammerBase02Yellow), 5.00 )
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_WildhammerBase03Red), 5.00 )
    call PolledWait( 5.00 )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Settlements_Discover_Q takes nothing returns nothing
    set gg_trg_Settlements_Discover_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Settlements_Discover_Q, Condition( function Trig_Settlements_Discover_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Settlements_Discover_Q, function Trig_Settlements_Discover_Q_Actions )
endfunction

//===========================================================================
// Trigger: Settlements Update Q
//===========================================================================
function Trig_Settlements_Update_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Settlements_Update_Q_Func007Func001C takes nothing returns boolean
    if ( not ( udg_SettlementCount == 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Settlements_Update_Q_Func007C takes nothing returns boolean
    if ( not ( udg_SettlementCount == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Settlements_Update_Q_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quests_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_MainQuestSettlements, true )
    // Display a quest message.
    if ( Trig_Settlements_Update_Q_Func007C() ) then
        call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_2545" )
        call QuestItemSetDescriptionBJ( udg_MainQuestReqWildhammer, "TRIGSTR_2735" )
    else
        if ( Trig_Settlements_Update_Q_Func007Func001C() ) then
            call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_2546" )
            call QuestItemSetDescriptionBJ( udg_MainQuestReqWildhammer, "TRIGSTR_2736" )
        else
        endif
    endif
    call PolledWait( 5.00 )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Settlements_Update_Q takes nothing returns nothing
    set gg_trg_Settlements_Update_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Settlements_Update_Q, Condition( function Trig_Settlements_Update_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Settlements_Update_Q, function Trig_Settlements_Update_Q_Actions )
endfunction

//===========================================================================
// Trigger: Settlements Completed Q
//===========================================================================
function Trig_Settlements_Completed_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Settlements_Completed_Q_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quests_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_MainQuestSettlements, true )
    call QuestItemSetCompletedBJ( udg_MainQuestReqWildhammer, true )
    call QuestSetCompletedBJ( udg_MainQuestSettlements, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_2434" )
    call QuestItemSetDescriptionBJ( udg_MainQuestReqWildhammer, "TRIGSTR_2737" )
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Settlements_Completed_Q takes nothing returns nothing
    set gg_trg_Settlements_Completed_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Settlements_Completed_Q, Condition( function Trig_Settlements_Completed_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Settlements_Completed_Q, function Trig_Settlements_Completed_Q_Actions )
endfunction

//===========================================================================
// Trigger: Settlements Optional Discover Q
//===========================================================================
function Trig_Settlements_Optional_Discover_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Settlements_Optional_Discover_Q_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call CreateQuestBJ( bj_QUESTTYPE_OPT_UNDISCOVERED, "TRIGSTR_2632", "TRIGSTR_2633", "ReplaceableTextures\\CommandButtons\\BTNRifleman.blp" )
    set udg_OptionalQuestSettlements = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( udg_OptionalQuestSettlements, "TRIGSTR_2634" )
    set udg_OptionalQuestReqWildhammer = GetLastCreatedQuestItemBJ()
    // Update the quest
    call QuestSetDiscoveredBJ( udg_OptionalQuestSettlements, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_2625" )
    call CampaignMinimapIconLocBJ( GetRectCenter(gg_rct_WildhammerBase04Green), bj_CAMPPINGSTYLE_PRIMARY_RED )
    set udg_SettlementMarker04Green = GetLastCreatedMinimapIcon()
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_WildhammerBase04Green), 5.00 )
    call PolledWait( 5.00 )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Settlements_Optional_Discover_Q takes nothing returns nothing
    set gg_trg_Settlements_Optional_Discover_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Settlements_Optional_Discover_Q, Condition( function Trig_Settlements_Optional_Discover_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Settlements_Optional_Discover_Q, function Trig_Settlements_Optional_Discover_Q_Actions )
endfunction

//===========================================================================
// Trigger: Settlements Optional Completed Q
//===========================================================================
function Trig_Settlements_Optional_Completed_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Settlements_Optional_Completed_Q_Actions takes nothing returns nothing
    // Update the quest
    call QuestSetDiscoveredBJ( udg_OptionalQuestSettlements, true )
    call QuestItemSetCompletedBJ( udg_OptionalQuestReqWildhammer, true )
    call QuestSetCompletedBJ( udg_OptionalQuestSettlements, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_2544" )
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Settlements_Optional_Completed_Q takes nothing returns nothing
    set gg_trg_Settlements_Optional_Completed_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Settlements_Optional_Completed_Q, Condition( function Trig_Settlements_Optional_Completed_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Settlements_Optional_Completed_Q, function Trig_Settlements_Optional_Completed_Q_Actions )
endfunction

//===========================================================================
// Trigger: Settlements Failed Q
//===========================================================================
function Trig_Settlements_Failed_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Settlements_Failed_Q_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quests_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_MainQuestSettlements, true )
    call QuestItemSetCompletedBJ( udg_MainQuestReqWildhammer, false )
    call QuestSetFailedBJ( udg_MainQuestSettlements, true )
    call DestroyMinimapIcon( udg_SettlementMarker01Blue )
    call DestroyMinimapIcon( udg_SettlementMarker02Yellow )
    call DestroyMinimapIcon( udg_SettlementMarker03Red )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_FAILED, "TRIGSTR_2561" )
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call DisableTrigger( gg_trg_SettlementCount )
    call ConditionalTriggerExecute( gg_trg_SettlementsFailedAI )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Settlements_Failed_Q takes nothing returns nothing
    set gg_trg_Settlements_Failed_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Settlements_Failed_Q, Condition( function Trig_Settlements_Failed_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Settlements_Failed_Q, function Trig_Settlements_Failed_Q_Actions )
endfunction

//===========================================================================
// Trigger: Trolls Discover Q
//===========================================================================
function Trig_Trolls_Discover_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Trolls_Discover_Q_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quests_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_MainQuestTrolls, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_2443" )
    call CampaignMinimapIconLocBJ( GetRectCenter(gg_rct_TrollBase01), bj_CAMPPINGSTYLE_CONTROL_ALLY )
    set udg_TrollMarker01 = GetLastCreatedMinimapIcon()
    call CampaignMinimapIconLocBJ( GetRectCenter(gg_rct_TrollBase02), bj_CAMPPINGSTYLE_CONTROL_ALLY )
    set udg_TrollMarker02 = GetLastCreatedMinimapIcon()
    call CampaignMinimapIconLocBJ( GetRectCenter(gg_rct_TrollBase03), bj_CAMPPINGSTYLE_CONTROL_ALLY )
    set udg_TrollMarker03 = GetLastCreatedMinimapIcon()
    call CampaignMinimapIconLocBJ( GetRectCenter(gg_rct_TrollBase04), bj_CAMPPINGSTYLE_CONTROL_ALLY )
    set udg_TrollMarker04 = GetLastCreatedMinimapIcon()
    call CampaignMinimapIconLocBJ( GetRectCenter(gg_rct_TrollBase05), bj_CAMPPINGSTYLE_CONTROL_ALLY )
    set udg_TrollMarker05 = GetLastCreatedMinimapIcon()
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_TrollBase01), 5.00 )
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_TrollBase02), 5.00 )
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_TrollBase03), 5.00 )
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_TrollBase04), 5.00 )
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_TrollBase05), 5.00 )
    call PolledWait( 5.00 )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Trolls_Discover_Q takes nothing returns nothing
    set gg_trg_Trolls_Discover_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Trolls_Discover_Q, Condition( function Trig_Trolls_Discover_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Trolls_Discover_Q, function Trig_Trolls_Discover_Q_Actions )
endfunction

//===========================================================================
// Trigger: Trolls Update Q
//===========================================================================
function Trig_Trolls_Update_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Trolls_Update_Q_Func008Func001C takes nothing returns boolean
    if ( not ( udg_TrollCount == 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Trolls_Update_Q_Func008C takes nothing returns boolean
    if ( not ( udg_TrollCount == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Trolls_Update_Q_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quests_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_MainQuestTrolls, true )
    // Display a quest message.
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    if ( Trig_Trolls_Update_Q_Func008C() ) then
        call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_2551" )
        call QuestItemSetDescriptionBJ( udg_MainQuestReqTrolls, "TRIGSTR_2738" )
    else
        if ( Trig_Trolls_Update_Q_Func008Func001C() ) then
            call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_2550" )
            call QuestItemSetDescriptionBJ( udg_MainQuestReqTrolls, "TRIGSTR_2739" )
        else
        endif
    endif
    call PolledWait( 5.00 )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Trolls_Update_Q takes nothing returns nothing
    set gg_trg_Trolls_Update_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Trolls_Update_Q, Condition( function Trig_Trolls_Update_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Trolls_Update_Q, function Trig_Trolls_Update_Q_Actions )
endfunction

//===========================================================================
// Trigger: Trolls Completed Q
//===========================================================================
function Trig_Trolls_Completed_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Trolls_Completed_Q_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quests_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_MainQuestTrolls, true )
    call QuestItemSetCompletedBJ( udg_MainQuestReqTrolls, true )
    call QuestSetCompletedBJ( udg_MainQuestTrolls, true )
    call QuestItemSetDescriptionBJ( udg_MainQuestReqTrolls, "TRIGSTR_2740" )
    // Display a quest message.
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_2444" )
    call QueuedTriggerAddBJ( gg_trg_Trolls_Optional_Discover_Q, true )
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
    call SaveGameCheckPointBJ( "HinterlandsPloy01", true )
endfunction

//===========================================================================
function InitTrig_Trolls_Completed_Q takes nothing returns nothing
    set gg_trg_Trolls_Completed_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Trolls_Completed_Q, Condition( function Trig_Trolls_Completed_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Trolls_Completed_Q, function Trig_Trolls_Completed_Q_Actions )
endfunction

//===========================================================================
// Trigger: Trolls Failed Q
//===========================================================================
function Trig_Trolls_Failed_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Trolls_Failed_Q_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quests_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_MainQuestTrolls, true )
    call QuestItemSetCompletedBJ( udg_MainQuestReqTrolls, false )
    call QuestSetFailedBJ( udg_MainQuestTrolls, true )
    call DestroyMinimapIcon( udg_TrollMarker01 )
    call DestroyMinimapIcon( udg_TrollMarker02 )
    call DestroyMinimapIcon( udg_TrollMarker03 )
    call DestroyMinimapIcon( udg_TrollMarker04 )
    call DestroyMinimapIcon( udg_TrollMarker05 )
    call UnitAddAbility(udg_TrollCircle01, 'Aloc' )
    call UnitAddAbility(udg_TrollCircle02, 'Aloc' )
    call UnitAddAbility(udg_TrollCircle03, 'Aloc' )
    call UnitAddAbility(udg_TrollCircle04, 'Aloc' )
    call UnitAddAbility(udg_TrollCircle05, 'Aloc' )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_FAILED, "TRIGSTR_2616" )
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
    call ConditionalTriggerExecute( gg_trg_Defeat )
endfunction

//===========================================================================
function InitTrig_Trolls_Failed_Q takes nothing returns nothing
    set gg_trg_Trolls_Failed_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Trolls_Failed_Q, Condition( function Trig_Trolls_Failed_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Trolls_Failed_Q, function Trig_Trolls_Failed_Q_Actions )
endfunction

//===========================================================================
// Trigger: Trolls Optional Discover Q
//===========================================================================
function Trig_Trolls_Optional_Discover_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Trolls_Optional_Discover_Q_Func008C takes nothing returns boolean
    if ( not ( udg_TrollCap01 == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Trolls_Optional_Discover_Q_Func009C takes nothing returns boolean
    if ( not ( udg_TrollCap02 == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Trolls_Optional_Discover_Q_Func010C takes nothing returns boolean
    if ( not ( udg_TrollCap03 == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Trolls_Optional_Discover_Q_Func011C takes nothing returns boolean
    if ( not ( udg_TrollCap04 == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Trolls_Optional_Discover_Q_Func012C takes nothing returns boolean
    if ( not ( udg_TrollCap05 == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Trolls_Optional_Discover_Q_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quests_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_OptionalQuestTrolls, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_2552" )
    if ( Trig_Trolls_Optional_Discover_Q_Func008C() ) then
        call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_TrollBase01), 5.00 )
        call DestroyMinimapIcon( udg_TrollMarker01 )
        call CampaignMinimapIconLocBJ( GetRectCenter(gg_rct_TrollBase01), bj_CAMPPINGSTYLE_BONUS )
        set udg_TrollMarker01 = GetLastCreatedMinimapIcon()
    else
    endif
    if ( Trig_Trolls_Optional_Discover_Q_Func009C() ) then
        call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_TrollBase02), 5.00 )
        call DestroyMinimapIcon( udg_TrollMarker02 )
        call CampaignMinimapIconLocBJ( GetRectCenter(gg_rct_TrollBase02), bj_CAMPPINGSTYLE_BONUS )
        set udg_TrollMarker02 = GetLastCreatedMinimapIcon()
    else
    endif
    if ( Trig_Trolls_Optional_Discover_Q_Func010C() ) then
        call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_TrollBase03), 5.00 )
        call DestroyMinimapIcon( udg_TrollMarker03 )
        call CampaignMinimapIconLocBJ( GetRectCenter(gg_rct_TrollBase03), bj_CAMPPINGSTYLE_BONUS )
        set udg_TrollMarker03 = GetLastCreatedMinimapIcon()
    else
    endif
    if ( Trig_Trolls_Optional_Discover_Q_Func011C() ) then
        call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_TrollBase04), 5.00 )
        call DestroyMinimapIcon( udg_TrollMarker04 )
        call CampaignMinimapIconLocBJ( GetRectCenter(gg_rct_TrollBase04), bj_CAMPPINGSTYLE_BONUS )
        set udg_TrollMarker04 = GetLastCreatedMinimapIcon()
    else
    endif
    if ( Trig_Trolls_Optional_Discover_Q_Func012C() ) then
        call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_TrollBase05), 5.00 )
        call DestroyMinimapIcon( udg_TrollMarker05 )
        call CampaignMinimapIconLocBJ( GetRectCenter(gg_rct_TrollBase05), bj_CAMPPINGSTYLE_BONUS )
        set udg_TrollMarker05 = GetLastCreatedMinimapIcon()
    else
    endif
    call PolledWait( 5.00 )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Trolls_Optional_Discover_Q takes nothing returns nothing
    set gg_trg_Trolls_Optional_Discover_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Trolls_Optional_Discover_Q, Condition( function Trig_Trolls_Optional_Discover_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Trolls_Optional_Discover_Q, function Trig_Trolls_Optional_Discover_Q_Actions )
endfunction

//===========================================================================
// Trigger: Trolls Optional Update Q
//===========================================================================
function Trig_Trolls_Optional_Update_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Trolls_Optional_Update_Q_Func008C takes nothing returns boolean
    if ( not ( udg_TrollCount == 4 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Trolls_Optional_Update_Q_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quests_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_OptionalQuestTrolls, true )
    // Display a quest message.
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    if ( Trig_Trolls_Optional_Update_Q_Func008C() ) then
        call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_2554" )
        call QuestItemSetDescriptionBJ( udg_OptionalQuestReqTrolls, "TRIGSTR_2742" )
    else
    endif
    call PolledWait( 5.00 )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Trolls_Optional_Update_Q takes nothing returns nothing
    set gg_trg_Trolls_Optional_Update_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Trolls_Optional_Update_Q, Condition( function Trig_Trolls_Optional_Update_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Trolls_Optional_Update_Q, function Trig_Trolls_Optional_Update_Q_Actions )
endfunction

//===========================================================================
// Trigger: Trolls Optional Completed Q
//===========================================================================
function Trig_Trolls_Optional_Completed_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Trolls_Optional_Completed_Q_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quests_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_OptionalQuestTrolls, true )
    call QuestItemSetDescriptionBJ( udg_OptionalQuestReqTrolls, "TRIGSTR_2814" )
    call QuestItemSetCompletedBJ( udg_OptionalQuestReqTrolls, true )
    call QuestSetCompletedBJ( udg_OptionalQuestTrolls, true )
    // Display a quest message.
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_2557" )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
    call SaveGameCheckPointBJ( "HinterlandsPloy02", true )
endfunction

//===========================================================================
function InitTrig_Trolls_Optional_Completed_Q takes nothing returns nothing
    set gg_trg_Trolls_Optional_Completed_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Trolls_Optional_Completed_Q, Condition( function Trig_Trolls_Optional_Completed_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Trolls_Optional_Completed_Q, function Trig_Trolls_Optional_Completed_Q_Actions )
endfunction

//===========================================================================
// Trigger: Trolls Optional Failed Q
//===========================================================================
function Trig_Trolls_Optional_Failed_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Trolls_Optional_Failed_Q_Func017C takes nothing returns boolean
    if ( not ( IsQuestDiscovered(udg_OptionalQuestTrolls) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Trolls_Optional_Failed_Q_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quests_Create )
    // Update the quest
    call QuestItemSetCompletedBJ( udg_OptionalQuestReqTrolls, false )
    call QuestSetFailedBJ( udg_OptionalQuestTrolls, true )
    call DestroyMinimapIcon( udg_TrollMarker01 )
    call DestroyMinimapIcon( udg_TrollMarker02 )
    call DestroyMinimapIcon( udg_TrollMarker03 )
    call DestroyMinimapIcon( udg_TrollMarker04 )
    call DestroyMinimapIcon( udg_TrollMarker05 )
    call UnitAddAbility(udg_TrollCircle01, 'Aloc' )
    call UnitAddAbility(udg_TrollCircle02, 'Aloc' )
    call UnitAddAbility(udg_TrollCircle03, 'Aloc' )
    call UnitAddAbility(udg_TrollCircle04, 'Aloc' )
    call UnitAddAbility(udg_TrollCircle05, 'Aloc' )
    if ( Trig_Trolls_Optional_Failed_Q_Func017C() ) then
        // Display a quest message.
        call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_FAILED, "TRIGSTR_2637" )
        call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    else
    endif
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Trolls_Optional_Failed_Q takes nothing returns nothing
    set gg_trg_Trolls_Optional_Failed_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Trolls_Optional_Failed_Q, Condition( function Trig_Trolls_Optional_Failed_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Trolls_Optional_Failed_Q, function Trig_Trolls_Optional_Failed_Q_Actions )
endfunction

//===========================================================================
// Trigger: Elves Discover Q
//===========================================================================
function Trig_Elves_Discover_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Elves_Discover_Q_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quests_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_OptionalQuestElves, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_2534" )
    call CampaignMinimapIconLocBJ( GetUnitLoc(gg_unit_edob_0039), bj_CAMPPINGSTYLE_CONTROL_ENEMY )
    set udg_ElvenMarker = GetLastCreatedMinimapIcon()
    call PingMinimapLocForForce( GetPlayersAll(), GetUnitLoc(gg_unit_edob_0039), 5.00 )
    call PolledWait( 5.00 )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Elves_Discover_Q takes nothing returns nothing
    set gg_trg_Elves_Discover_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Elves_Discover_Q, Condition( function Trig_Elves_Discover_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Elves_Discover_Q, function Trig_Elves_Discover_Q_Actions )
endfunction

//===========================================================================
// Trigger: Elves Completed Q
//
// Kam - we need to turn Elven AI off when the lodge is destroyed
//===========================================================================
function Trig_Elves_Completed_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Elves_Completed_Q_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quests_Create )
    // Update the quest
    call QuestSetCompletedBJ( udg_OptionalQuestElves, true )
    call QuestItemSetCompletedBJ( udg_OptionalQuestReqElves, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_2727" )
    call DestroyMinimapIcon( udg_ElvenMarker )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Elves_Completed_Q takes nothing returns nothing
    set gg_trg_Elves_Completed_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Elves_Completed_Q, Condition( function Trig_Elves_Completed_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Elves_Completed_Q, function Trig_Elves_Completed_Q_Actions )
endfunction

//===========================================================================
// Trigger: Survive Discover Q
//===========================================================================
function Trig_Survive_Discover_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Survive_Discover_Q_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call CreateQuestBJ( bj_QUESTTYPE_REQ_UNDISCOVERED, "TRIGSTR_2640", "TRIGSTR_2641", "ReplaceableTextures\\CommandButtons\\BTNGarthok.blp" )
    set udg_MainQuestSurvive = GetLastCreatedQuestBJ()
    call CreateQuestItemBJ( udg_MainQuestSurvive, "TRIGSTR_2646" )
    set udg_MainQuestReqSurviveA = GetLastCreatedQuestItemBJ()
    call CreateQuestItemBJ( udg_MainQuestSurvive, "TRIGSTR_2666" )
    set udg_MainQuestReqSurviveC = GetLastCreatedQuestItemBJ()
    // Update the quest
    call QuestSetDiscoveredBJ( udg_MainQuestSurvive, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_DISCOVERED, "TRIGSTR_2588" )
    call CampaignMinimapIconLocBJ( GetRectCenter(gg_rct_SurviveMarker), bj_CAMPPINGSTYLE_PRIMARY_GREEN )
    set udg_SurviveMarkerA = GetLastCreatedMinimapIcon()
    call CampaignMinimapIconUnitBJ( udg_Hero_Doomhammer, bj_CAMPPINGSTYLE_PRIMARY_GREEN )
    set udg_SurviveMarkerB = GetLastCreatedMinimapIcon()
    call EnableTrigger( gg_trg_PlayerBaseCount )
    call PolledWait( 5.00 )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
    call PolledWait( bj_QUEUE_DELAY_QUEST )
    call SaveGameCheckPointBJ( "HinterlandsPloy03", true )
endfunction

//===========================================================================
function InitTrig_Survive_Discover_Q takes nothing returns nothing
    set gg_trg_Survive_Discover_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Survive_Discover_Q, Condition( function Trig_Survive_Discover_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Survive_Discover_Q, function Trig_Survive_Discover_Q_Actions )
endfunction

//===========================================================================
// Trigger: Survive Update Q
//===========================================================================
function Trig_Survive_Update_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Survive_Update_Q_Actions takes nothing returns nothing
    // Create quest part II
    call QuestItemSetCompletedBJ( udg_MainQuestReqSurviveA, true )
    call QuestSetDescriptionBJ( udg_MainQuestSurvive, "TRIGSTR_2659" )
    call CreateQuestItemBJ( udg_MainQuestSurvive, "TRIGSTR_2658" )
    set udg_MainQuestReqSurviveB = GetLastCreatedQuestItemBJ()
    // Display a quest update.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_UPDATED, "TRIGSTR_2653" )
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_SurviveMarker), 5.00 )
    call ConditionalTriggerExecute( gg_trg_SurviveTimerCreate )
    call PolledWait( 5.00 )
    // Unhide Goblins
    call ShowUnitShow( gg_unit_ngsp_0232 )
    call SetUnitInvulnerable( gg_unit_ngsp_0232, true )
    call UnitShareVisionBJ( true, gg_unit_ngsp_0232, Player(0) )
    call ShowUnitShow( gg_unit_ngsp_0234 )
    call SetUnitInvulnerable( gg_unit_ngsp_0234, true )
    call UnitShareVisionBJ( true, gg_unit_ngsp_0234, Player(0) )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Survive_Update_Q takes nothing returns nothing
    set gg_trg_Survive_Update_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Survive_Update_Q, Condition( function Trig_Survive_Update_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Survive_Update_Q, function Trig_Survive_Update_Q_Actions )
endfunction

//===========================================================================
// Trigger: Survive Completed Q
//===========================================================================
function Trig_Survive_Completed_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Survive_Completed_Q_Actions takes nothing returns nothing
    // Ensure that the quest exists
    call ConditionalTriggerExecute( gg_trg_Quests_Create )
    // Update the quest
    call QuestSetDiscoveredBJ( udg_MainQuestSurvive, true )
    call QuestItemSetCompletedBJ( udg_MainQuestReqSurviveB, true )
    call QuestItemSetCompletedBJ( udg_MainQuestReqSurviveC, true )
    call QuestSetCompletedBJ( udg_MainQuestSurvive, true )
    // Display a quest message.
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_COMPLETED, "TRIGSTR_2612" )
    call QueuedTriggerAddBJ( gg_trg_SettlementsTimerDestroy, true )
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Survive_Completed_Q takes nothing returns nothing
    set gg_trg_Survive_Completed_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Survive_Completed_Q, Condition( function Trig_Survive_Completed_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Survive_Completed_Q, function Trig_Survive_Completed_Q_Actions )
endfunction

//===========================================================================
// Trigger: Survive Failed Q
//===========================================================================
function Trig_Survive_Failed_Q_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Survive_Failed_Q_Func006C takes nothing returns boolean
    if ( not ( IsQuestDiscovered(udg_MainQuestSurvive) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Survive_Failed_Q_Func008Func001C takes nothing returns boolean
    if ( not ( udg_FailReason == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Survive_Failed_Q_Func008C takes nothing returns boolean
    if ( not ( udg_FailReason == 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Survive_Failed_Q_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_Failed = true
    // Update the quest
    if ( Trig_Survive_Failed_Q_Func006C() ) then
        call QuestItemSetCompletedBJ( udg_MainQuestReqSurviveB, false )
        call QuestItemSetCompletedBJ( udg_MainQuestReqSurviveC, false )
        call QuestSetFailedBJ( udg_MainQuestSurvive, true )
    else
    endif
    // Display a quest message.
    if ( Trig_Survive_Failed_Q_Func008C() ) then
        call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_FAILED, "TRIGSTR_2680" )
    else
        if ( Trig_Survive_Failed_Q_Func008Func001C() ) then
            call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_FAILED, "TRIGSTR_2761" )
        else
        endif
    endif
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
    call QueuedTriggerAddBJ( gg_trg_FailureCinQ, true )
endfunction

//===========================================================================
function InitTrig_Survive_Failed_Q takes nothing returns nothing
    set gg_trg_Survive_Failed_Q = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Survive_Failed_Q, Condition( function Trig_Survive_Failed_Q_Conditions ) )
    call TriggerAddAction( gg_trg_Survive_Failed_Q, function Trig_Survive_Failed_Q_Actions )
endfunction

//===========================================================================
// Trigger: LodgeVOTrigger
//===========================================================================
function Trig_LodgeVOTrigger_Func001C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetTriggerUnit()) == Player(0) ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetTriggerUnit()) == Player(2) ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetTriggerUnit()) == Player(11) ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetTriggerUnit()) == Player(20) ) ) then
        return true
    endif
    return false
endfunction

function Trig_LodgeVOTrigger_Conditions takes nothing returns boolean
    if ( not Trig_LodgeVOTrigger_Func001C() ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetAttacker()) == udg_PlayerElves ) ) then
        return false
    endif
    return true
endfunction

function Trig_LodgeVOTrigger_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call QueuedTriggerAddBJ( gg_trg_LodgeIntroVO, true )
endfunction

//===========================================================================
function InitTrig_LodgeVOTrigger takes nothing returns nothing
    set gg_trg_LodgeVOTrigger = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_LodgeVOTrigger, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_LodgeVOTrigger, Condition( function Trig_LodgeVOTrigger_Conditions ) )
    call TriggerAddAction( gg_trg_LodgeVOTrigger, function Trig_LodgeVOTrigger_Actions )
endfunction

//===========================================================================
// Trigger: LodgeDestroyed
//===========================================================================
function Trig_LodgeDestroyed_Conditions takes nothing returns boolean
    if ( not ( GetDyingUnit() == gg_unit_edob_0039 ) ) then
        return false
    endif
    return true
endfunction

function Trig_LodgeDestroyed_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call QueuedTriggerAddBJ( gg_trg_LodgeDestroyedVO, true )
endfunction

//===========================================================================
function InitTrig_LodgeDestroyed takes nothing returns nothing
    set gg_trg_LodgeDestroyed = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_LodgeDestroyed, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_LodgeDestroyed, Condition( function Trig_LodgeDestroyed_Conditions ) )
    call TriggerAddAction( gg_trg_LodgeDestroyed, function Trig_LodgeDestroyed_Actions )
endfunction

//===========================================================================
// Trigger: SettlementCount
//===========================================================================
function Trig_SettlementCount_Func001C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerWildBlue ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerWildYellow ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerWildMaroon ) ) then
        return true
    endif
    return false
endfunction

function Trig_SettlementCount_Func003001001002001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == true )
endfunction

function Trig_SettlementCount_Func003001001002002 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_SettlementCount_Func003001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_SettlementCount_Func003001001002001(), Trig_SettlementCount_Func003001001002002() )
endfunction

function Trig_SettlementCount_Conditions takes nothing returns boolean
    if ( not Trig_SettlementCount_Func001C() ) then
        return false
    endif
    if ( not ( IsUnitType(GetTriggerUnit(), UNIT_TYPE_STRUCTURE) == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsOfPlayerMatching(GetOwningPlayer(GetTriggerUnit()), Condition(function Trig_SettlementCount_Func003001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_SettlementCount_Func006Func001Func001C takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetDyingUnit()) == udg_PlayerWildMaroon ) ) then
        return false
    endif
    return true
endfunction

function Trig_SettlementCount_Func006Func001C takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerWildYellow ) ) then
        return false
    endif
    return true
endfunction

function Trig_SettlementCount_Func006C takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerWildBlue ) ) then
        return false
    endif
    return true
endfunction

function Trig_SettlementCount_Func007C takes nothing returns boolean
    if ( not ( udg_SettlementCount <= 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_SettlementCount_Func008C takes nothing returns boolean
    if ( not ( udg_SettlementCount == 3 ) ) then
        return false
    endif
    return true
endfunction

function Trig_SettlementCount_Actions takes nothing returns nothing
    set udg_SettlementCount = ( udg_SettlementCount + 1 )
    if ( Trig_SettlementCount_Func006C() ) then
        call DestroyMinimapIcon( udg_SettlementMarker01Blue )
        set udg_SettlementDead01Blue = true
    else
        if ( Trig_SettlementCount_Func006Func001C() ) then
            call DestroyMinimapIcon( udg_SettlementMarker02Yellow )
            set udg_SettlementDead02Yellow = true
        else
            if ( Trig_SettlementCount_Func006Func001Func001C() ) then
                call DestroyMinimapIcon( udg_SettlementMarker03Red )
                set udg_SettlementDead03Red = true
            else
            endif
        endif
    endif
    if ( Trig_SettlementCount_Func007C() ) then
        call QueuedTriggerAddBJ( gg_trg_Settlements_Update_Q, true )
    else
    endif
    if ( Trig_SettlementCount_Func008C() ) then
        call QueuedTriggerAddBJ( gg_trg_Settlements_Completed_Q, true )
    else
    endif
endfunction

//===========================================================================
function InitTrig_SettlementCount takes nothing returns nothing
    set gg_trg_SettlementCount = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_SettlementCount, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_SettlementCount, Condition( function Trig_SettlementCount_Conditions ) )
    call TriggerAddAction( gg_trg_SettlementCount, function Trig_SettlementCount_Actions )
endfunction

//===========================================================================
// Trigger: Settement04GreenDiscoverDoor
//===========================================================================
function Trig_Settement04GreenDiscoverDoor_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( GetDestructableTypeId(GetDyingDestructable()) == 'VTlt' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Settement04GreenDiscoverDoor_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call QueuedTriggerAddBJ( gg_trg_HiddenPing01, true )
endfunction

//===========================================================================
function InitTrig_Settement04GreenDiscoverDoor takes nothing returns nothing
    set gg_trg_Settement04GreenDiscoverDoor = CreateTrigger(  )
    call TriggerRegisterDestDeathInRegionEvent( gg_trg_Settement04GreenDiscoverDoor, gg_rct_WildhammerBase04GreenOpen )
    call TriggerAddCondition( gg_trg_Settement04GreenDiscoverDoor, Condition( function Trig_Settement04GreenDiscoverDoor_Conditions ) )
    call TriggerAddAction( gg_trg_Settement04GreenDiscoverDoor, function Trig_Settement04GreenDiscoverDoor_Actions )
endfunction

//===========================================================================
// Trigger: Settlement04GreenDiscoverQuest
//===========================================================================
function Trig_Settlement04GreenDiscoverQuest_Func006C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetAttacker()) == udg_PlayerWildEmerald ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetAttacker()) == udg_Player01 ) ) then
        return true
    endif
    return false
endfunction

function Trig_Settlement04GreenDiscoverQuest_Func007C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerWildEmerald ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetTriggerUnit()) == udg_Player01 ) ) then
        return true
    endif
    return false
endfunction

function Trig_Settlement04GreenDiscoverQuest_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetTriggerUnit()) != GetOwningPlayer(GetAttacker()) ) ) then
        return false
    endif
    if ( not Trig_Settlement04GreenDiscoverQuest_Func006C() ) then
        return false
    endif
    if ( not Trig_Settlement04GreenDiscoverQuest_Func007C() ) then
        return false
    endif
    return true
endfunction

function Trig_Settlement04GreenDiscoverQuest_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call QueuedTriggerAddBJ( gg_trg_Settlements_Optional_Discover_Q, true )
endfunction

//===========================================================================
function InitTrig_Settlement04GreenDiscoverQuest takes nothing returns nothing
    set gg_trg_Settlement04GreenDiscoverQuest = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Settlement04GreenDiscoverQuest, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Settlement04GreenDiscoverQuest, Condition( function Trig_Settlement04GreenDiscoverQuest_Conditions ) )
    call TriggerAddAction( gg_trg_Settlement04GreenDiscoverQuest, function Trig_Settlement04GreenDiscoverQuest_Actions )
endfunction

//===========================================================================
// Trigger: Settlement04GreenKill
//===========================================================================
function Trig_Settlement04GreenKill_Func006001001002001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == true )
endfunction

function Trig_Settlement04GreenKill_Func006001001002002 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Settlement04GreenKill_Func006001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Settlement04GreenKill_Func006001001002001(), Trig_Settlement04GreenKill_Func006001001002002() )
endfunction

function Trig_Settlement04GreenKill_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerWildEmerald ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetTriggerUnit(), UNIT_TYPE_STRUCTURE) == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsOfPlayerMatching(GetOwningPlayer(GetTriggerUnit()), Condition(function Trig_Settlement04GreenKill_Func006001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Settlement04GreenKill_Actions takes nothing returns nothing
    call DestroyMinimapIcon( udg_SettlementMarker04Green )
    set udg_SettlementDead04Green = true
    call QueuedTriggerAddBJ( gg_trg_Settlements_Optional_Completed_Q, true )
endfunction

//===========================================================================
function InitTrig_Settlement04GreenKill takes nothing returns nothing
    set gg_trg_Settlement04GreenKill = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Settlement04GreenKill, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Settlement04GreenKill, Condition( function Trig_Settlement04GreenKill_Conditions ) )
    call TriggerAddAction( gg_trg_Settlement04GreenKill, function Trig_Settlement04GreenKill_Actions )
endfunction

//===========================================================================
// Trigger: SettementDruidsDiscoverDoor
//===========================================================================
function Trig_SettementDruidsDiscoverDoor_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_SettementDruidsDiscoverDoor_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call QueuedTriggerAddBJ( gg_trg_HiddenPing02, true )
endfunction

//===========================================================================
function InitTrig_SettementDruidsDiscoverDoor takes nothing returns nothing
    set gg_trg_SettementDruidsDiscoverDoor = CreateTrigger(  )
    call TriggerRegisterDestDeathInRegionEvent( gg_trg_SettementDruidsDiscoverDoor, gg_rct_WildhammerBaseDruids )
    call TriggerAddCondition( gg_trg_SettementDruidsDiscoverDoor, Condition( function Trig_SettementDruidsDiscoverDoor_Conditions ) )
    call TriggerAddAction( gg_trg_SettementDruidsDiscoverDoor, function Trig_SettementDruidsDiscoverDoor_Actions )
endfunction

//===========================================================================
// Trigger: HiddenPing01
//===========================================================================
function Trig_HiddenPing01_Func003A takes nothing returns nothing
    call KillDestructable( GetEnumDestructable() )
endfunction

function Trig_HiddenPing01_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call PlaySoundBJ( gg_snd_SecretFound )
    call EnumDestructablesInRectAll( gg_rct_WildhammerBase04GreenOpen, function Trig_HiddenPing01_Func003A )
    call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_WildhammerBase04GreenOpen), 5.00 )
    call PolledWait( 5.00 )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_HiddenPing01 takes nothing returns nothing
    set gg_trg_HiddenPing01 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_HiddenPing01, function Trig_HiddenPing01_Actions )
endfunction

//===========================================================================
// Trigger: HiddenPing02
//===========================================================================
function Trig_HiddenPing02_Func002Func001Func002Func001C takes nothing returns boolean
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_HiddenPing02_Func002Func001Func002A takes nothing returns nothing
    if ( Trig_HiddenPing02_Func002Func001Func002Func001C() ) then
        call GroupAddUnitSimple( GetEnumUnit(), udg_AllianceForces )
    else
    endif
endfunction

function Trig_HiddenPing02_Func002Func001Func003A takes nothing returns nothing
    call KillDestructable( GetEnumDestructable() )
endfunction

function Trig_HiddenPing02_Func002Func001C takes nothing returns boolean
    if ( not ( udg_HiddenUnitsStart == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_HiddenPing02_Func002Func004A takes nothing returns nothing
    call KillDestructable( GetEnumDestructable() )
endfunction

function Trig_HiddenPing02_Func002C takes nothing returns boolean
    if ( not ( udg_HiddenUnitsStart == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_HiddenPing02_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    if ( Trig_HiddenPing02_Func002C() ) then
        call DisableTrigger( gg_trg_HiddenAssault )
        call SetDoodadAnimationRectBJ( "death", 'XOmr', gg_rct_WildhammerBase04GreenOpen )
        call EnumDestructablesInRectAll( gg_rct_WildhammerBaseDruids, function Trig_HiddenPing02_Func002Func004A )
        call PlaySoundBJ( gg_snd_SecretFound )
        call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_WildhammerBaseDruids), 5.00 )
        call PolledWait( 5.00 )
        call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
    else
        if ( Trig_HiddenPing02_Func002Func001C() ) then
            call DisableTrigger( gg_trg_SettementDruidsDiscoverDoor )
            call ForGroupBJ( GetUnitsOfPlayerAll(udg_PlayerWildSnow), function Trig_HiddenPing02_Func002Func001Func002A )
            call EnumDestructablesInRectAll( gg_rct_WildhammerBaseDruids, function Trig_HiddenPing02_Func002Func001Func003A )
        else
        endif
    endif
endfunction

//===========================================================================
function InitTrig_HiddenPing02 takes nothing returns nothing
    set gg_trg_HiddenPing02 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_HiddenPing02, function Trig_HiddenPing02_Actions )
endfunction

//===========================================================================
// Trigger: TrollCount
//===========================================================================
function Trig_TrollCount_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_MainQuestTrolls) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCount_Func003Func001Func002Func001C takes nothing returns boolean
    if ( not ( udg_TrollCount >= 5 ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCount_Func003Func001Func002C takes nothing returns boolean
    if ( not ( udg_TrollCount == 4 ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCount_Func003Func001C takes nothing returns boolean
    if ( not ( udg_TrollCount == 3 ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCount_Func003C takes nothing returns boolean
    if ( not ( udg_TrollCount <= 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCount_Actions takes nothing returns nothing
    if ( Trig_TrollCount_Func003C() ) then
        call QueuedTriggerAddBJ( gg_trg_Trolls_Update_Q, true )
    else
        if ( Trig_TrollCount_Func003Func001C() ) then
            call QueuedTriggerAddBJ( gg_trg_Trolls_Completed_Q, true )
        else
            if ( Trig_TrollCount_Func003Func001Func002C() ) then
                call QueuedTriggerAddBJ( gg_trg_Trolls_Optional_Update_Q, true )
            else
                if ( Trig_TrollCount_Func003Func001Func002Func001C() ) then
                    call DisableTrigger( GetTriggeringTrigger() )
                    call QueuedTriggerAddBJ( gg_trg_Trolls_Optional_Completed_Q, true )
                else
                endif
            endif
        endif
    endif
endfunction

//===========================================================================
function InitTrig_TrollCount takes nothing returns nothing
    set gg_trg_TrollCount = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_TrollCount, Condition( function Trig_TrollCount_Conditions ) )
    call TriggerAddAction( gg_trg_TrollCount, function Trig_TrollCount_Actions )
endfunction

//===========================================================================
// Trigger: TrollRegion01
//
// COAL
//===========================================================================
function Trig_TrollRegion01_Conditions takes nothing returns boolean
    if ( not ( GetEnteringUnit() == udg_Hero_Zuljin ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_MainQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_OptionalQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion01_Func012Func001Func001C takes nothing returns boolean
    if ( ( IsUnitType(GetEnumUnit(), UNIT_TYPE_GROUND) == true ) ) then
        return true
    endif
    if ( ( IsUnitType(GetEnumUnit(), UNIT_TYPE_FLYING) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_TrollRegion01_Func012Func001C takes nothing returns boolean
    if ( not Trig_TrollRegion01_Func012Func001Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion01_Func012A takes nothing returns nothing
    if ( Trig_TrollRegion01_Func012Func001C() ) then
        call RescueUnitBJ( GetEnumUnit(), udg_Player01, true )
    else
    endif
endfunction

function Trig_TrollRegion01_Func013Func001Func002C takes nothing returns boolean
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'n60W' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'n60X' ) ) then
        return true
    endif
    return false
endfunction

function Trig_TrollRegion01_Func013Func001C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(GetEnumUnit()) == true ) ) then
        return false
    endif
    if ( not Trig_TrollRegion01_Func013Func001Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion01_Func013A takes nothing returns nothing
    if ( Trig_TrollRegion01_Func013Func001C() ) then
        call CreateNUnitsAtLocFacingLocBJ( 1, 'n008', udg_PlayerTribeWarriors, GetUnitLoc(GetEnumUnit()), GetUnitLoc(udg_TrollCircle01) )
        call SetUnitColor( GetLastCreatedUnit(), GetPlayerColor(GetOwningPlayer(GetEnumUnit())) )
        call IssuePointOrderLocBJ( GetLastCreatedUnit(), "move", GetRectCenter(gg_rct_TrollsExit) )
    else
    endif
endfunction

function Trig_TrollRegion01_Func014C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_TrollPriest01) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion01_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call DisableTrigger( gg_trg_TrollCampDeath01 )
    call SetUnitColor( udg_TrollCircle01, GetPlayerColor(udg_Player01) )
    call UnitAddAbility(udg_TrollCircle01, 'Aloc' )
    call DestroyMinimapIcon( udg_TrollMarker01 )
    set udg_TrollCap01 = true
    set udg_TrollCount = ( udg_TrollCount + 1 )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_PlayerTribeCoal), function Trig_TrollRegion01_Func012A )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_PlayerTribeCoal), function Trig_TrollRegion01_Func013A )
    if ( Trig_TrollRegion01_Func014C() ) then
        set udg_TrollRandomVO = ( udg_TrollRandomVO + 1 )
        call QueuedTriggerAddBJ( gg_trg_TrollPlaySounds, true )
    else
    endif
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call ConditionalTriggerExecute( gg_trg_TrollCount )
endfunction

//===========================================================================
function InitTrig_TrollRegion01 takes nothing returns nothing
    set gg_trg_TrollRegion01 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_TrollRegion01, gg_rct_TrollBase01VO )
    call TriggerRegisterPlayerChatEvent( gg_trg_TrollRegion01, Player(0), "Troll01", true )
    call TriggerAddCondition( gg_trg_TrollRegion01, Condition( function Trig_TrollRegion01_Conditions ) )
    call TriggerAddAction( gg_trg_TrollRegion01, function Trig_TrollRegion01_Actions )
endfunction

//===========================================================================
// Trigger: TrollRegion02
//
// BROWN
//===========================================================================
function Trig_TrollRegion02_Conditions takes nothing returns boolean
    if ( not ( GetEnteringUnit() == udg_Hero_Zuljin ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_MainQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_OptionalQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion02_Func012Func001Func001C takes nothing returns boolean
    if ( ( IsUnitType(GetEnumUnit(), UNIT_TYPE_GROUND) == true ) ) then
        return true
    endif
    if ( ( IsUnitType(GetEnumUnit(), UNIT_TYPE_FLYING) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_TrollRegion02_Func012Func001C takes nothing returns boolean
    if ( not Trig_TrollRegion02_Func012Func001Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion02_Func012A takes nothing returns nothing
    if ( Trig_TrollRegion02_Func012Func001C() ) then
        call RescueUnitBJ( GetEnumUnit(), udg_Player01, true )
    else
    endif
endfunction

function Trig_TrollRegion02_Func013Func001Func002C takes nothing returns boolean
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'n60W' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'n60X' ) ) then
        return true
    endif
    return false
endfunction

function Trig_TrollRegion02_Func013Func001C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(GetEnumUnit()) == true ) ) then
        return false
    endif
    if ( not Trig_TrollRegion02_Func013Func001Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion02_Func013A takes nothing returns nothing
    if ( Trig_TrollRegion02_Func013Func001C() ) then
        call CreateNUnitsAtLocFacingLocBJ( 1, 'n008', udg_PlayerTribeWarriors, GetUnitLoc(GetEnumUnit()), GetUnitLoc(udg_TrollCircle02) )
        call SetUnitColor( GetLastCreatedUnit(), GetPlayerColor(GetOwningPlayer(GetEnumUnit())) )
        call IssuePointOrderLocBJ( GetLastCreatedUnit(), "move", GetRectCenter(gg_rct_TrollsExit) )
    else
    endif
endfunction

function Trig_TrollRegion02_Func014C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_TrollPriest02) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion02_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call DisableTrigger( gg_trg_TrollCampDeath02 )
    call SetUnitColor( udg_TrollCircle02, GetPlayerColor(udg_Player01) )
    call UnitAddAbility(udg_TrollCircle02, 'Aloc' )
    call DestroyMinimapIcon( udg_TrollMarker02 )
    set udg_TrollCap02 = true
    set udg_TrollCount = ( udg_TrollCount + 1 )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_PlayerTribeBrown), function Trig_TrollRegion02_Func012A )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_PlayerTribeBrown), function Trig_TrollRegion02_Func013A )
    if ( Trig_TrollRegion02_Func014C() ) then
        set udg_TrollRandomVO = ( udg_TrollRandomVO + 1 )
        call QueuedTriggerAddBJ( gg_trg_TrollPlaySounds, true )
    else
    endif
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call ConditionalTriggerExecute( gg_trg_TrollCount )
endfunction

//===========================================================================
function InitTrig_TrollRegion02 takes nothing returns nothing
    set gg_trg_TrollRegion02 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_TrollRegion02, gg_rct_TrollBase02VO )
    call TriggerRegisterPlayerChatEvent( gg_trg_TrollRegion02, Player(0), "Troll02", true )
    call TriggerAddCondition( gg_trg_TrollRegion02, Condition( function Trig_TrollRegion02_Conditions ) )
    call TriggerAddAction( gg_trg_TrollRegion02, function Trig_TrollRegion02_Actions )
endfunction

//===========================================================================
// Trigger: TrollRegion03
//
// MINT
//===========================================================================
function Trig_TrollRegion03_Conditions takes nothing returns boolean
    if ( not ( GetEnteringUnit() == udg_Hero_Zuljin ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_MainQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_OptionalQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion03_Func012Func001Func001C takes nothing returns boolean
    if ( ( IsUnitType(GetEnumUnit(), UNIT_TYPE_GROUND) == true ) ) then
        return true
    endif
    if ( ( IsUnitType(GetEnumUnit(), UNIT_TYPE_FLYING) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_TrollRegion03_Func012Func001C takes nothing returns boolean
    if ( not Trig_TrollRegion03_Func012Func001Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion03_Func012A takes nothing returns nothing
    if ( Trig_TrollRegion03_Func012Func001C() ) then
        call RescueUnitBJ( GetEnumUnit(), udg_Player01, true )
    else
    endif
endfunction

function Trig_TrollRegion03_Func013Func001Func002C takes nothing returns boolean
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'n60W' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'n60X' ) ) then
        return true
    endif
    return false
endfunction

function Trig_TrollRegion03_Func013Func001C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(GetEnumUnit()) == true ) ) then
        return false
    endif
    if ( not Trig_TrollRegion03_Func013Func001Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion03_Func013A takes nothing returns nothing
    if ( Trig_TrollRegion03_Func013Func001C() ) then
        call CreateNUnitsAtLocFacingLocBJ( 1, 'n008', udg_PlayerTribeWarriors, GetUnitLoc(GetEnumUnit()), GetUnitLoc(udg_TrollCircle03) )
        call SetUnitColor( GetLastCreatedUnit(), GetPlayerColor(GetOwningPlayer(GetEnumUnit())) )
        call IssuePointOrderLocBJ( GetLastCreatedUnit(), "move", GetRectCenter(gg_rct_TrollsExit) )
    else
    endif
endfunction

function Trig_TrollRegion03_Func014C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_TrollPriest03) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion03_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call DisableTrigger( gg_trg_TrollCampDeath03 )
    call SetUnitColor( udg_TrollCircle03, GetPlayerColor(udg_Player01) )
    call UnitAddAbility(udg_TrollCircle03, 'Aloc' )
    call DestroyMinimapIcon( udg_TrollMarker03 )
    set udg_TrollCap03 = true
    set udg_TrollCount = ( udg_TrollCount + 1 )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_PlayerTribeMint), function Trig_TrollRegion03_Func012A )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_PlayerTribeMint), function Trig_TrollRegion03_Func013A )
    if ( Trig_TrollRegion03_Func014C() ) then
        set udg_TrollRandomVO = ( udg_TrollRandomVO + 1 )
        call QueuedTriggerAddBJ( gg_trg_TrollPlaySounds, true )
    else
    endif
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call ConditionalTriggerExecute( gg_trg_TrollCount )
endfunction

//===========================================================================
function InitTrig_TrollRegion03 takes nothing returns nothing
    set gg_trg_TrollRegion03 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_TrollRegion03, gg_rct_TrollBase03VO )
    call TriggerRegisterPlayerChatEvent( gg_trg_TrollRegion03, Player(0), "Troll03", true )
    call TriggerAddCondition( gg_trg_TrollRegion03, Condition( function Trig_TrollRegion03_Conditions ) )
    call TriggerAddAction( gg_trg_TrollRegion03, function Trig_TrollRegion03_Actions )
endfunction

//===========================================================================
// Trigger: TrollRegion04
//
// LAVENDER
//===========================================================================
function Trig_TrollRegion04_Conditions takes nothing returns boolean
    if ( not ( GetEnteringUnit() == udg_Hero_Zuljin ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_MainQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_OptionalQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion04_Func012Func001Func001C takes nothing returns boolean
    if ( ( IsUnitType(GetEnumUnit(), UNIT_TYPE_GROUND) == true ) ) then
        return true
    endif
    if ( ( IsUnitType(GetEnumUnit(), UNIT_TYPE_FLYING) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_TrollRegion04_Func012Func001C takes nothing returns boolean
    if ( not Trig_TrollRegion04_Func012Func001Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion04_Func012A takes nothing returns nothing
    if ( Trig_TrollRegion04_Func012Func001C() ) then
        call RescueUnitBJ( GetEnumUnit(), udg_Player01, true )
    else
    endif
endfunction

function Trig_TrollRegion04_Func013Func001Func002C takes nothing returns boolean
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'n60W' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'n60X' ) ) then
        return true
    endif
    return false
endfunction

function Trig_TrollRegion04_Func013Func001C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(GetEnumUnit()) == true ) ) then
        return false
    endif
    if ( not Trig_TrollRegion04_Func013Func001Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion04_Func013A takes nothing returns nothing
    if ( Trig_TrollRegion04_Func013Func001C() ) then
        call CreateNUnitsAtLocFacingLocBJ( 1, 'n008', udg_PlayerTribeWarriors, GetUnitLoc(GetEnumUnit()), GetUnitLoc(udg_TrollCircle04) )
        call SetUnitColor( GetLastCreatedUnit(), GetPlayerColor(GetOwningPlayer(GetEnumUnit())) )
        call IssuePointOrderLocBJ( GetLastCreatedUnit(), "move", GetRectCenter(gg_rct_TrollsExit) )
    else
    endif
endfunction

function Trig_TrollRegion04_Func014C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_TrollPriest04) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion04_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call DisableTrigger( gg_trg_TrollCampDeath04 )
    call SetUnitColor( udg_TrollCircle04, GetPlayerColor(udg_Player01) )
    call UnitAddAbility(udg_TrollCircle04, 'Aloc' )
    call DestroyMinimapIcon( udg_TrollMarker04 )
    set udg_TrollCap04 = true
    set udg_TrollCount = ( udg_TrollCount + 1 )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_PlayerTribeLavender), function Trig_TrollRegion04_Func012A )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_PlayerTribeLavender), function Trig_TrollRegion04_Func013A )
    if ( Trig_TrollRegion04_Func014C() ) then
        set udg_TrollRandomVO = ( udg_TrollRandomVO + 1 )
        call QueuedTriggerAddBJ( gg_trg_TrollPlaySounds, true )
    else
    endif
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call ConditionalTriggerExecute( gg_trg_TrollCount )
endfunction

//===========================================================================
function InitTrig_TrollRegion04 takes nothing returns nothing
    set gg_trg_TrollRegion04 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_TrollRegion04, gg_rct_TrollBase04VO )
    call TriggerRegisterPlayerChatEvent( gg_trg_TrollRegion04, Player(0), "Troll04", true )
    call TriggerAddCondition( gg_trg_TrollRegion04, Condition( function Trig_TrollRegion04_Conditions ) )
    call TriggerAddAction( gg_trg_TrollRegion04, function Trig_TrollRegion04_Actions )
endfunction

//===========================================================================
// Trigger: TrollRegion05
//
// PEACH
//===========================================================================
function Trig_TrollRegion05_Conditions takes nothing returns boolean
    if ( not ( GetEnteringUnit() == udg_Hero_Zuljin ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_MainQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_OptionalQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion05_Func012Func001Func001C takes nothing returns boolean
    if ( ( IsUnitType(GetEnumUnit(), UNIT_TYPE_GROUND) == true ) ) then
        return true
    endif
    if ( ( IsUnitType(GetEnumUnit(), UNIT_TYPE_FLYING) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_TrollRegion05_Func012Func001C takes nothing returns boolean
    if ( not Trig_TrollRegion05_Func012Func001Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion05_Func012A takes nothing returns nothing
    if ( Trig_TrollRegion05_Func012Func001C() ) then
        call RescueUnitBJ( GetEnumUnit(), udg_Player01, true )
    else
    endif
endfunction

function Trig_TrollRegion05_Func013Func001Func002C takes nothing returns boolean
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'n60W' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetEnumUnit()) == 'n60X' ) ) then
        return true
    endif
    return false
endfunction

function Trig_TrollRegion05_Func013Func001C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(GetEnumUnit()) == true ) ) then
        return false
    endif
    if ( not Trig_TrollRegion05_Func013Func001Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion05_Func013A takes nothing returns nothing
    if ( Trig_TrollRegion05_Func013Func001C() ) then
        call CreateNUnitsAtLocFacingLocBJ( 1, 'n008', udg_PlayerTribeWarriors, GetUnitLoc(GetEnumUnit()), GetUnitLoc(udg_TrollCircle05) )
        call SetUnitColor( GetLastCreatedUnit(), GetPlayerColor(GetOwningPlayer(GetEnumUnit())) )
        call IssuePointOrderLocBJ( GetLastCreatedUnit(), "move", GetRectCenter(gg_rct_TrollsExit) )
    else
    endif
endfunction

function Trig_TrollRegion05_Func014C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_TrollPriest05) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollRegion05_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call DisableTrigger( gg_trg_TrollCampDeath05 )
    call SetUnitColor( udg_TrollCircle05, GetPlayerColor(udg_Player01) )
    call UnitAddAbility(udg_TrollCircle05, 'Aloc' )
    call DestroyMinimapIcon( udg_TrollMarker05 )
    set udg_TrollCap05 = true
    set udg_TrollCount = ( udg_TrollCount + 1 )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_PlayerTribePeach), function Trig_TrollRegion05_Func012A )
    call ForGroupBJ( GetUnitsOfPlayerAll(udg_PlayerTribePeach), function Trig_TrollRegion05_Func013A )
    if ( Trig_TrollRegion05_Func014C() ) then
        set udg_TrollRandomVO = ( udg_TrollRandomVO + 1 )
        call QueuedTriggerAddBJ( gg_trg_TrollPlaySounds, true )
    else
    endif
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call ConditionalTriggerExecute( gg_trg_TrollCount )
endfunction

//===========================================================================
function InitTrig_TrollRegion05 takes nothing returns nothing
    set gg_trg_TrollRegion05 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_TrollRegion05, gg_rct_TrollBase05VO )
    call TriggerRegisterPlayerChatEvent( gg_trg_TrollRegion05, Player(0), "Troll05", true )
    call TriggerAddCondition( gg_trg_TrollRegion05, Condition( function Trig_TrollRegion05_Conditions ) )
    call TriggerAddAction( gg_trg_TrollRegion05, function Trig_TrollRegion05_Actions )
endfunction

//===========================================================================
// Trigger: TrollCamp03Open
//===========================================================================
function Trig_TrollCamp03Open_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCamp03Open_Func002A takes nothing returns nothing
    call KillDestructable( GetEnumDestructable() )
endfunction

function Trig_TrollCamp03Open_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call EnumDestructablesInRectAll( gg_rct_TrollBase03Open, function Trig_TrollCamp03Open_Func002A )
endfunction

//===========================================================================
function InitTrig_TrollCamp03Open takes nothing returns nothing
    set gg_trg_TrollCamp03Open = CreateTrigger(  )
    call TriggerRegisterDestDeathInRegionEvent( gg_trg_TrollCamp03Open, gg_rct_TrollBase03Open )
    call TriggerAddCondition( gg_trg_TrollCamp03Open, Condition( function Trig_TrollCamp03Open_Conditions ) )
    call TriggerAddAction( gg_trg_TrollCamp03Open, function Trig_TrollCamp03Open_Actions )
endfunction

//===========================================================================
// Trigger: TrollCampDeath01
//===========================================================================
function Trig_TrollCampDeath01_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetDyingUnit()) == udg_PlayerTribeCoal ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_MainQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_OptionalQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCampDeath01_Func005Func006C takes nothing returns boolean
    if ( not ( udg_TrollDeadCount <= 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCampDeath01_Func005C takes nothing returns boolean
    if ( not ( GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_FOOD_USED) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCampDeath01_Actions takes nothing returns nothing
    if ( Trig_TrollCampDeath01_Func005C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
        call DisableTrigger( gg_trg_TrollRegion01 )
        set udg_TrollDeadCount = ( udg_TrollDeadCount + 1 )
        call DestroyMinimapIcon( udg_TrollMarker01 )
        call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, true, udg_PlayerTribeCoal )
        if ( Trig_TrollCampDeath01_Func005Func006C() ) then
            call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_WARNING, "TRIGSTR_2620" )
            call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_TrollBase01), 3.00 )
        else
        endif
        call ConditionalTriggerExecute( gg_trg_EnoughTrolls )
    else
    endif
endfunction

//===========================================================================
function InitTrig_TrollCampDeath01 takes nothing returns nothing
    set gg_trg_TrollCampDeath01 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_TrollCampDeath01, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_TrollCampDeath01, Condition( function Trig_TrollCampDeath01_Conditions ) )
    call TriggerAddAction( gg_trg_TrollCampDeath01, function Trig_TrollCampDeath01_Actions )
endfunction

//===========================================================================
// Trigger: TrollCampDeath02
//===========================================================================
function Trig_TrollCampDeath02_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetDyingUnit()) == udg_PlayerTribeBrown ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_MainQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_OptionalQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCampDeath02_Func001Func007C takes nothing returns boolean
    if ( not ( udg_TrollDeadCount <= 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCampDeath02_Func001C takes nothing returns boolean
    if ( not ( GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_FOOD_USED) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCampDeath02_Actions takes nothing returns nothing
    if ( Trig_TrollCampDeath02_Func001C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
        call DisableTrigger( gg_trg_TrollRegion02 )
        set udg_TrollDeadCount = ( udg_TrollDeadCount + 1 )
        call DestroyMinimapIcon( udg_TrollMarker02 )
        call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, true, udg_PlayerTribeBrown )
        if ( Trig_TrollCampDeath02_Func001Func007C() ) then
            call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_WARNING, "TRIGSTR_2621" )
            call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_TrollBase02), 3.00 )
        else
        endif
        call ConditionalTriggerExecute( gg_trg_EnoughTrolls )
    else
    endif
endfunction

//===========================================================================
function InitTrig_TrollCampDeath02 takes nothing returns nothing
    set gg_trg_TrollCampDeath02 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_TrollCampDeath02, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_TrollCampDeath02, Condition( function Trig_TrollCampDeath02_Conditions ) )
    call TriggerAddAction( gg_trg_TrollCampDeath02, function Trig_TrollCampDeath02_Actions )
endfunction

//===========================================================================
// Trigger: TrollCampDeath03
//===========================================================================
function Trig_TrollCampDeath03_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerTribeMint ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_MainQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_OptionalQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCampDeath03_Func001Func006C takes nothing returns boolean
    if ( not ( udg_TrollDeadCount <= 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCampDeath03_Func001C takes nothing returns boolean
    if ( not ( GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_FOOD_USED) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCampDeath03_Actions takes nothing returns nothing
    if ( Trig_TrollCampDeath03_Func001C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
        call DisableTrigger( gg_trg_TrollRegion03 )
        set udg_TrollDeadCount = ( udg_TrollDeadCount + 1 )
        call DestroyMinimapIcon( udg_TrollMarker03 )
        call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, true, udg_PlayerTribeMint )
        if ( Trig_TrollCampDeath03_Func001Func006C() ) then
            call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_WARNING, "TRIGSTR_2622" )
            call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_TrollBase03), 3.00 )
        else
        endif
        call ConditionalTriggerExecute( gg_trg_EnoughTrolls )
    else
    endif
endfunction

//===========================================================================
function InitTrig_TrollCampDeath03 takes nothing returns nothing
    set gg_trg_TrollCampDeath03 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_TrollCampDeath03, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_TrollCampDeath03, Condition( function Trig_TrollCampDeath03_Conditions ) )
    call TriggerAddAction( gg_trg_TrollCampDeath03, function Trig_TrollCampDeath03_Actions )
endfunction

//===========================================================================
// Trigger: TrollCampDeath04
//===========================================================================
function Trig_TrollCampDeath04_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerTribeLavender ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_MainQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_OptionalQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCampDeath04_Func001Func006C takes nothing returns boolean
    if ( not ( udg_TrollDeadCount <= 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCampDeath04_Func001C takes nothing returns boolean
    if ( not ( GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_FOOD_USED) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCampDeath04_Actions takes nothing returns nothing
    if ( Trig_TrollCampDeath04_Func001C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
        call DisableTrigger( gg_trg_TrollRegion04 )
        set udg_TrollDeadCount = ( udg_TrollDeadCount + 1 )
        call DestroyMinimapIcon( udg_TrollMarker04 )
        call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, true, udg_PlayerTribeLavender )
        if ( Trig_TrollCampDeath04_Func001Func006C() ) then
            call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_WARNING, "TRIGSTR_2623" )
            call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_TrollBase04), 3.00 )
        else
        endif
        call ConditionalTriggerExecute( gg_trg_EnoughTrolls )
    else
    endif
endfunction

//===========================================================================
function InitTrig_TrollCampDeath04 takes nothing returns nothing
    set gg_trg_TrollCampDeath04 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_TrollCampDeath04, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_TrollCampDeath04, Condition( function Trig_TrollCampDeath04_Conditions ) )
    call TriggerAddAction( gg_trg_TrollCampDeath04, function Trig_TrollCampDeath04_Actions )
endfunction

//===========================================================================
// Trigger: TrollCampDeath05
//===========================================================================
function Trig_TrollCampDeath05_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerTribePeach ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_MainQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( IsQuestFailed(udg_OptionalQuestTrolls) == false ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCampDeath05_Func001Func006C takes nothing returns boolean
    if ( not ( udg_TrollDeadCount <= 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCampDeath05_Func001C takes nothing returns boolean
    if ( not ( GetPlayerState(GetOwningPlayer(GetTriggerUnit()), PLAYER_STATE_RESOURCE_FOOD_USED) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollCampDeath05_Actions takes nothing returns nothing
    if ( Trig_TrollCampDeath05_Func001C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
        call DisableTrigger( gg_trg_TrollRegion05 )
        set udg_TrollDeadCount = ( udg_TrollDeadCount + 1 )
        call DestroyMinimapIcon( udg_TrollMarker05 )
        call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, true, udg_PlayerTribePeach )
        if ( Trig_TrollCampDeath05_Func001Func006C() ) then
            call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_WARNING, "TRIGSTR_2624" )
            call PingMinimapLocForForce( GetPlayersAll(), GetRectCenter(gg_rct_TrollBase05), 3.00 )
        else
        endif
        call ConditionalTriggerExecute( gg_trg_EnoughTrolls )
    else
    endif
endfunction

//===========================================================================
function InitTrig_TrollCampDeath05 takes nothing returns nothing
    set gg_trg_TrollCampDeath05 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_TrollCampDeath05, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_TrollCampDeath05, Condition( function Trig_TrollCampDeath05_Conditions ) )
    call TriggerAddAction( gg_trg_TrollCampDeath05, function Trig_TrollCampDeath05_Actions )
endfunction

//===========================================================================
// Trigger: TrollsExit01
//===========================================================================
function Trig_TrollsExit01_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerTribeWarriors ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollsExit01_Actions takes nothing returns nothing
    call SetUnitVertexColorBJ( GetTriggerUnit(), 100.00, 100.00, 100.00, 10.00 )
endfunction

//===========================================================================
function InitTrig_TrollsExit01 takes nothing returns nothing
    set gg_trg_TrollsExit01 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_TrollsExit01, gg_rct_TrollFade01 )
    call TriggerAddCondition( gg_trg_TrollsExit01, Condition( function Trig_TrollsExit01_Conditions ) )
    call TriggerAddAction( gg_trg_TrollsExit01, function Trig_TrollsExit01_Actions )
endfunction

//===========================================================================
// Trigger: TrollsExit02
//===========================================================================
function Trig_TrollsExit02_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerTribeWarriors ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollsExit02_Actions takes nothing returns nothing
    call SetUnitVertexColorBJ( GetTriggerUnit(), 100.00, 100.00, 100.00, 20.00 )
endfunction

//===========================================================================
function InitTrig_TrollsExit02 takes nothing returns nothing
    set gg_trg_TrollsExit02 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_TrollsExit02, gg_rct_TrollFade02 )
    call TriggerAddCondition( gg_trg_TrollsExit02, Condition( function Trig_TrollsExit02_Conditions ) )
    call TriggerAddAction( gg_trg_TrollsExit02, function Trig_TrollsExit02_Actions )
endfunction

//===========================================================================
// Trigger: TrollsExit03
//===========================================================================
function Trig_TrollsExit03_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerTribeWarriors ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollsExit03_Actions takes nothing returns nothing
    call SetUnitVertexColorBJ( GetTriggerUnit(), 100.00, 100.00, 100.00, 30.00 )
endfunction

//===========================================================================
function InitTrig_TrollsExit03 takes nothing returns nothing
    set gg_trg_TrollsExit03 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_TrollsExit03, gg_rct_TrollFade03 )
    call TriggerAddCondition( gg_trg_TrollsExit03, Condition( function Trig_TrollsExit03_Conditions ) )
    call TriggerAddAction( gg_trg_TrollsExit03, function Trig_TrollsExit03_Actions )
endfunction

//===========================================================================
// Trigger: TrollsExit04
//===========================================================================
function Trig_TrollsExit04_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerTribeWarriors ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollsExit04_Actions takes nothing returns nothing
    call SetUnitVertexColorBJ( GetTriggerUnit(), 100.00, 100.00, 100.00, 40.00 )
endfunction

//===========================================================================
function InitTrig_TrollsExit04 takes nothing returns nothing
    set gg_trg_TrollsExit04 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_TrollsExit04, gg_rct_TrollFade04 )
    call TriggerAddCondition( gg_trg_TrollsExit04, Condition( function Trig_TrollsExit04_Conditions ) )
    call TriggerAddAction( gg_trg_TrollsExit04, function Trig_TrollsExit04_Actions )
endfunction

//===========================================================================
// Trigger: TrollsExit05
//===========================================================================
function Trig_TrollsExit05_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollsExit05_Actions takes nothing returns nothing
    call SetUnitVertexColorBJ( GetEnteringUnit(), 100.00, 100.00, 100.00, 50.00 )
endfunction

//===========================================================================
function InitTrig_TrollsExit05 takes nothing returns nothing
    set gg_trg_TrollsExit05 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_TrollsExit05, gg_rct_TrollFade05 )
    call TriggerAddCondition( gg_trg_TrollsExit05, Condition( function Trig_TrollsExit05_Conditions ) )
    call TriggerAddAction( gg_trg_TrollsExit05, function Trig_TrollsExit05_Actions )
endfunction

//===========================================================================
// Trigger: TrollsExit06
//===========================================================================
function Trig_TrollsExit06_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollsExit06_Actions takes nothing returns nothing
    call SetUnitVertexColorBJ( GetEnteringUnit(), 100.00, 100.00, 100.00, 60.00 )
endfunction

//===========================================================================
function InitTrig_TrollsExit06 takes nothing returns nothing
    set gg_trg_TrollsExit06 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_TrollsExit06, gg_rct_TrollFade06 )
    call TriggerAddCondition( gg_trg_TrollsExit06, Condition( function Trig_TrollsExit06_Conditions ) )
    call TriggerAddAction( gg_trg_TrollsExit06, function Trig_TrollsExit06_Actions )
endfunction

//===========================================================================
// Trigger: TrollsExit07
//===========================================================================
function Trig_TrollsExit07_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollsExit07_Actions takes nothing returns nothing
    call SetUnitVertexColorBJ( GetEnteringUnit(), 100.00, 100.00, 100.00, 70.00 )
endfunction

//===========================================================================
function InitTrig_TrollsExit07 takes nothing returns nothing
    set gg_trg_TrollsExit07 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_TrollsExit07, gg_rct_TrollFade07 )
    call TriggerAddCondition( gg_trg_TrollsExit07, Condition( function Trig_TrollsExit07_Conditions ) )
    call TriggerAddAction( gg_trg_TrollsExit07, function Trig_TrollsExit07_Actions )
endfunction

//===========================================================================
// Trigger: TrollsExit08
//===========================================================================
function Trig_TrollsExit08_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollsExit08_Actions takes nothing returns nothing
    call SetUnitVertexColorBJ( GetEnteringUnit(), 100.00, 100.00, 100.00, 80.00 )
endfunction

//===========================================================================
function InitTrig_TrollsExit08 takes nothing returns nothing
    set gg_trg_TrollsExit08 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_TrollsExit08, gg_rct_TrollFade08 )
    call TriggerAddCondition( gg_trg_TrollsExit08, Condition( function Trig_TrollsExit08_Conditions ) )
    call TriggerAddAction( gg_trg_TrollsExit08, function Trig_TrollsExit08_Actions )
endfunction

//===========================================================================
// Trigger: TrollsExit09
//===========================================================================
function Trig_TrollsExit09_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollsExit09_Actions takes nothing returns nothing
    call SetUnitVertexColorBJ( GetEnteringUnit(), 100.00, 100.00, 100.00, 90.00 )
endfunction

//===========================================================================
function InitTrig_TrollsExit09 takes nothing returns nothing
    set gg_trg_TrollsExit09 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_TrollsExit09, gg_rct_TrollFade09 )
    call TriggerAddCondition( gg_trg_TrollsExit09, Condition( function Trig_TrollsExit09_Conditions ) )
    call TriggerAddAction( gg_trg_TrollsExit09, function Trig_TrollsExit09_Actions )
endfunction

//===========================================================================
// Trigger: TrollsExit10
//===========================================================================
function Trig_TrollsExit10_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollsExit10_Actions takes nothing returns nothing
    call SetUnitVertexColorBJ( GetEnteringUnit(), 100.00, 100.00, 100.00, 100.00 )
    call RemoveUnit( GetEnteringUnit() )
endfunction

//===========================================================================
function InitTrig_TrollsExit10 takes nothing returns nothing
    set gg_trg_TrollsExit10 = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_TrollsExit10, gg_rct_TrollFade10 )
    call TriggerAddCondition( gg_trg_TrollsExit10, Condition( function Trig_TrollsExit10_Conditions ) )
    call TriggerAddAction( gg_trg_TrollsExit10, function Trig_TrollsExit10_Actions )
endfunction

//===========================================================================
// Trigger: EnoughTrolls
//===========================================================================
function Trig_EnoughTrolls_Conditions takes nothing returns boolean
    if ( not ( udg_TrollDeadCount >= 3 ) ) then
        return false
    endif
    return true
endfunction

function Trig_EnoughTrolls_Actions takes nothing returns nothing
    call QueuedTriggerAddBJ( gg_trg_Trolls_Failed_Q, true )
    call QueuedTriggerAddBJ( gg_trg_Trolls_Optional_Failed_Q, true )
endfunction

//===========================================================================
function InitTrig_EnoughTrolls takes nothing returns nothing
    set gg_trg_EnoughTrolls = CreateTrigger(  )
    call DisableTrigger( gg_trg_EnoughTrolls )
    call TriggerAddCondition( gg_trg_EnoughTrolls, Condition( function Trig_EnoughTrolls_Conditions ) )
    call TriggerAddAction( gg_trg_EnoughTrolls, function Trig_EnoughTrolls_Actions )
endfunction

//===========================================================================
// Trigger: TrollResetSounds
//===========================================================================
function Trig_TrollResetSounds_Actions takes nothing returns nothing
    set udg_sampleSound[0] = gg_snd_WC2Orc08SAmaniPriest1
    set udg_sampleText[0] = "Mighty Zul'jin, ya honor us with ya presence!"
    set udg_sampleSound[1] = gg_snd_WC2Orc08SAmaniPriest2
    set udg_sampleText[1] = "It is Zul'jin! Have ya come to aid us with de Dwarves?"
    set udg_sampleSound[2] = gg_snd_WC2Orc08SAmaniPriest3
    set udg_sampleText[2] = "Da leader he be here! Bless us!"
    set udg_maxIndex = 2
endfunction

//===========================================================================
function InitTrig_TrollResetSounds takes nothing returns nothing
    set gg_trg_TrollResetSounds = CreateTrigger(  )
    call TriggerAddAction( gg_trg_TrollResetSounds, function Trig_TrollResetSounds_Actions )
endfunction

//===========================================================================
// Trigger: TrollPlaySounds
//===========================================================================
function Trig_TrollPlaySounds_Func002Func003C takes nothing returns boolean
    if ( not ( udg_index < udg_maxIndex ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollPlaySounds_Func002C takes nothing returns boolean
    if ( not ( udg_TrollRandomVO <= 3 ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollPlaySounds_Func005Func001C takes nothing returns boolean
    if ( not ( udg_VOChance == 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollPlaySounds_Func005C takes nothing returns boolean
    if ( not ( udg_VOChance == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollPlaySounds_Actions takes nothing returns nothing
    call SetSpeechVolumeGroupsBJ(  )
    if ( Trig_TrollPlaySounds_Func002C() ) then
        set udg_index = GetRandomInt(0, udg_maxIndex)
        call TransmissionFromUnitTypeWithNameBJ( GetPlayersAll(), udg_PlayerTribeWarriors, 'nfsp', "TRIGSTR_2765", GetCameraTargetPositionLoc(), udg_sampleSound[udg_index], udg_sampleText[udg_index], bj_TIMETYPE_ADD, 0, false )
        if ( Trig_TrollPlaySounds_Func002Func003C() ) then
            loop
            set udg_sampleSound[udg_index] = udg_sampleSound[( udg_index + 1 )]
            set udg_sampleText[udg_index] = udg_sampleText[( udg_index + 1 )]
            set udg_index = udg_index + 1
            exitwhen udg_index > udg_maxIndex
            endloop
        else
        endif
        set udg_maxIndex = ( udg_maxIndex - 1 )
        call WaitForSoundBJ( GetLastPlayedSound(), 0 )
    else
    endif
    call VolumeGroupResetBJ(  )
    set udg_VOChance = GetRandomInt(1, 3)
    if ( Trig_TrollPlaySounds_Func005C() ) then
        call QueuedTriggerAddBJ( gg_trg_TrollsAquiredVO1, true )
    else
        if ( Trig_TrollPlaySounds_Func005Func001C() ) then
            call QueuedTriggerAddBJ( gg_trg_TrollsAquiredVO2, true )
        else
            call QueuedTriggerAddBJ( gg_trg_TrollsAquiredVO3, true )
        endif
    endif
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_TrollPlaySounds takes nothing returns nothing
    set gg_trg_TrollPlaySounds = CreateTrigger(  )
    call TriggerAddAction( gg_trg_TrollPlaySounds, function Trig_TrollPlaySounds_Actions )
endfunction

//===========================================================================
// Trigger: WildhammerAttackedVO
//===========================================================================
function Trig_WildhammerAttackedVO_Func003C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerWildBlue ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerWildYellow ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerWildMaroon ) ) then
        return true
    endif
    return false
endfunction

function Trig_WildhammerAttackedVO_Conditions takes nothing returns boolean
    if ( not ( IsUnitType(GetTriggerUnit(), UNIT_TYPE_STRUCTURE) == true ) ) then
        return false
    endif
    if ( not Trig_WildhammerAttackedVO_Func003C() ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetAttacker()) != Player(PLAYER_NEUTRAL_AGGRESSIVE) ) ) then
        return false
    endif
    return true
endfunction

function Trig_WildhammerAttackedVO_Func001Func001C takes nothing returns boolean
    if ( not ( IsTriggerEnabled(gg_trg_WilhammerVO02) == true ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetTriggerUnit()) != udg_SettlementVictim ) ) then
        return false
    endif
    return true
endfunction

function Trig_WildhammerAttackedVO_Func001C takes nothing returns boolean
    if ( not ( IsTriggerEnabled(gg_trg_WilhammerVO01) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_WildhammerAttackedVO_Actions takes nothing returns nothing
    if ( Trig_WildhammerAttackedVO_Func001C() ) then
        call QueuedTriggerAddBJ( gg_trg_WilhammerVO01, true )
        set udg_SettlementVictim = GetOwningPlayer(GetTriggerUnit())
    else
        if ( Trig_WildhammerAttackedVO_Func001Func001C() ) then
            call DisableTrigger( GetTriggeringTrigger() )
            call QueuedTriggerAddBJ( gg_trg_WilhammerVO02, true )
        else
        endif
    endif
endfunction

//===========================================================================
function InitTrig_WildhammerAttackedVO takes nothing returns nothing
    set gg_trg_WildhammerAttackedVO = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_WildhammerAttackedVO, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_WildhammerAttackedVO, Condition( function Trig_WildhammerAttackedVO_Conditions ) )
    call TriggerAddAction( gg_trg_WildhammerAttackedVO, function Trig_WildhammerAttackedVO_Actions )
endfunction

//===========================================================================
// Trigger: WilhammerVO01
//===========================================================================
function Trig_WilhammerVO01_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_WilhammerVO01_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetSpeechVolumeGroupsBJ(  )
    call TransmissionFromUnitTypeWithNameBJ( GetPlayersAll(), udg_PlayerWildBlue, 'h61V', "TRIGSTR_2769", GetCameraTargetPositionLoc(), gg_snd_WC2Orc08SWildhammerThane1, "TRIGSTR_2770", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SWildhammerThane1, 0 )
    call VolumeGroupResetBJ(  )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_WilhammerVO01 takes nothing returns nothing
    set gg_trg_WilhammerVO01 = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_WilhammerVO01, Condition( function Trig_WilhammerVO01_Conditions ) )
    call TriggerAddAction( gg_trg_WilhammerVO01, function Trig_WilhammerVO01_Actions )
endfunction

//===========================================================================
// Trigger: WilhammerVO02
//===========================================================================
function Trig_WilhammerVO02_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_WilhammerVO02_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetSpeechVolumeGroupsBJ(  )
    call TransmissionFromUnitTypeWithNameBJ( GetPlayersAll(), udg_PlayerWildBlue, 'h60T', "TRIGSTR_2771", GetCameraTargetPositionLoc(), gg_snd_WC2Orc08SWildhammerThane2, "TRIGSTR_2772", bj_TIMETYPE_ADD, 0, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SWildhammerThane2, 0 )
    call VolumeGroupResetBJ(  )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_WilhammerVO02 takes nothing returns nothing
    set gg_trg_WilhammerVO02 = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_WilhammerVO02, Condition( function Trig_WilhammerVO02_Conditions ) )
    call TriggerAddAction( gg_trg_WilhammerVO02, function Trig_WilhammerVO02_Actions )
endfunction

//===========================================================================
// Trigger: RedShirtGuyTriggered
//===========================================================================
function Trig_RedShirtGuyTriggered_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetEnteringUnit()) == Player(0) ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetEnteringUnit(), UNIT_TYPE_GROUND) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_RedShirtGuyTriggered_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call QueuedTriggerAddBJ( gg_trg_WildhammerGreenVO, true )
endfunction

//===========================================================================
function InitTrig_RedShirtGuyTriggered takes nothing returns nothing
    set gg_trg_RedShirtGuyTriggered = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_RedShirtGuyTriggered, gg_rct_Falstaaaad )
    call TriggerAddCondition( gg_trg_RedShirtGuyTriggered, Condition( function Trig_RedShirtGuyTriggered_Conditions ) )
    call TriggerAddAction( gg_trg_RedShirtGuyTriggered, function Trig_RedShirtGuyTriggered_Actions )
endfunction

//===========================================================================
// Trigger: WildhammerGreenVO
//===========================================================================
function Trig_WildhammerGreenVO_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_WildhammerGreenVO_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetSpeechVolumeGroupsBJ(  )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), gg_unit_h61I_0107, "TRIGSTR_2548", gg_snd_WC2Orc08SFalstaaaaaaaad1, "TRIGSTR_2549", bj_TIMETYPE_ADD, 0.00, false )
    call WaitForSoundBJ( gg_snd_WC2Orc08SFalstaaaaaaaad1, 0 )
    call VolumeGroupResetBJ(  )
    call IssuePointOrderLocBJ( gg_unit_h61I_0107, "move", GetRectCenter(gg_rct_RedShirtGuyHiden) )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_WildhammerGreenVO takes nothing returns nothing
    set gg_trg_WildhammerGreenVO = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_WildhammerGreenVO, Condition( function Trig_WildhammerGreenVO_Conditions ) )
    call TriggerAddAction( gg_trg_WildhammerGreenVO, function Trig_WildhammerGreenVO_Actions )
endfunction

//===========================================================================
// Trigger: RedShirtGuyHides
//===========================================================================
function Trig_RedShirtGuyHides_Conditions takes nothing returns boolean
    if ( not ( GetEnteringUnit() == gg_unit_h61I_0107 ) ) then
        return false
    endif
    if ( not ( IsUnitAliveBJ(gg_unit_n61N_0152) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_RedShirtGuyHides_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call ShowUnitHide( gg_unit_h61I_0107 )
    call PlaySoundAtPointBJ( gg_snd_DoorSlam1, 100, GetRectCenter(gg_rct_RedShirtGuyHiden), 0 )
endfunction

//===========================================================================
function InitTrig_RedShirtGuyHides takes nothing returns nothing
    set gg_trg_RedShirtGuyHides = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_RedShirtGuyHides, gg_rct_RedShirtGuyHiden )
    call TriggerAddCondition( gg_trg_RedShirtGuyHides, Condition( function Trig_RedShirtGuyHides_Conditions ) )
    call TriggerAddAction( gg_trg_RedShirtGuyHides, function Trig_RedShirtGuyHides_Actions )
endfunction

//===========================================================================
// Trigger: LodgeIntroVO
//===========================================================================
function Trig_LodgeIntroVO_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_LodgeIntroVO_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetSpeechVolumeGroupsBJ(  )
    call TransmissionFromUnitTypeWithNameBJ( GetPlayersAll(), udg_PlayerElves, 'h60S', "TRIGSTR_2773", GetCameraTargetPositionLoc(), gg_snd_WC2Orc08SElvenRanger1, "TRIGSTR_2774", bj_TIMETYPE_ADD, 0, true )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Eitrigg, "TRIGSTR_2515", gg_snd_WC2Orc08SEitrigg3, "TRIGSTR_2516", bj_TIMETYPE_ADD, 0.00, true )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Doomhammer, "TRIGSTR_2517", gg_snd_WC2Orc08SDoomhammer8, "TRIGSTR_2518", bj_TIMETYPE_ADD, 0.00, true )
    call TransmissionFromUnitTypeWithNameBJ( GetPlayersAll(), Player(7), 'O60B', "TRIGSTR_2777", GetCameraTargetPositionLoc(), gg_snd_WC2Orc08SZuljin6, "TRIGSTR_2778", bj_TIMETYPE_ADD, 0, true )
    call VolumeGroupResetBJ(  )
    call ConditionalTriggerExecute( gg_trg_Elves_Discover_Q )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_LodgeIntroVO takes nothing returns nothing
    set gg_trg_LodgeIntroVO = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_LodgeIntroVO, Condition( function Trig_LodgeIntroVO_Conditions ) )
    call TriggerAddAction( gg_trg_LodgeIntroVO, function Trig_LodgeIntroVO_Actions )
endfunction

//===========================================================================
// Trigger: LodgeDestroyedVO
//===========================================================================
function Trig_LodgeDestroyedVO_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_LodgeDestroyedVO_Func003C takes nothing returns boolean
    if ( not ( IsQuestItemCompleted(udg_MainQuestReqSurviveA) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_LodgeDestroyedVO_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    if ( Trig_LodgeDestroyedVO_Func003C() ) then
        call SetSpeechVolumeGroupsBJ(  )
        call TransmissionFromUnitTypeWithNameBJ( GetPlayersAll(), Player(7), 'O60B', "TRIGSTR_2797", GetCameraTargetPositionLoc(), gg_snd_WC2Orc08SZuljin7, "TRIGSTR_2798", bj_TIMETYPE_ADD, 0, false )
        call VolumeGroupResetBJ(  )
    else
    endif
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
    call QueuedTriggerAddBJ( gg_trg_Elves_Completed_Q, true )
endfunction

//===========================================================================
function InitTrig_LodgeDestroyedVO takes nothing returns nothing
    set gg_trg_LodgeDestroyedVO = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_LodgeDestroyedVO, Condition( function Trig_LodgeDestroyedVO_Conditions ) )
    call TriggerAddAction( gg_trg_LodgeDestroyedVO, function Trig_LodgeDestroyedVO_Actions )
endfunction

//===========================================================================
// Trigger: TrollsAquiredVO1
//===========================================================================
function Trig_TrollsAquiredVO1_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollsAquiredVO1_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetSpeechVolumeGroupsBJ(  )
    call TransmissionFromUnitTypeWithNameBJ( GetPlayersAll(), Player(7), 'O60B', "TRIGSTR_2781", GetCameraTargetPositionLoc(), gg_snd_WC2Orc08SZuljin3, "TRIGSTR_2782", bj_TIMETYPE_ADD, 0, true )
    call VolumeGroupResetBJ(  )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_TrollsAquiredVO1 takes nothing returns nothing
    set gg_trg_TrollsAquiredVO1 = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_TrollsAquiredVO1, Condition( function Trig_TrollsAquiredVO1_Conditions ) )
    call TriggerAddAction( gg_trg_TrollsAquiredVO1, function Trig_TrollsAquiredVO1_Actions )
endfunction

//===========================================================================
// Trigger: TrollsAquiredVO2
//===========================================================================
function Trig_TrollsAquiredVO2_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollsAquiredVO2_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetSpeechVolumeGroupsBJ(  )
    call TransmissionFromUnitTypeWithNameBJ( GetPlayersAll(), Player(7), 'O60B', "TRIGSTR_2783", GetCameraTargetPositionLoc(), gg_snd_WC2Orc08SZuljin4, "TRIGSTR_2784", bj_TIMETYPE_ADD, 0, true )
    call VolumeGroupResetBJ(  )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_TrollsAquiredVO2 takes nothing returns nothing
    set gg_trg_TrollsAquiredVO2 = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_TrollsAquiredVO2, Condition( function Trig_TrollsAquiredVO2_Conditions ) )
    call TriggerAddAction( gg_trg_TrollsAquiredVO2, function Trig_TrollsAquiredVO2_Actions )
endfunction

//===========================================================================
// Trigger: TrollsAquiredVO3
//===========================================================================
function Trig_TrollsAquiredVO3_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_TrollsAquiredVO3_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetSpeechVolumeGroupsBJ(  )
    call TransmissionFromUnitTypeWithNameBJ( GetPlayersAll(), Player(7), 'O60B', "TRIGSTR_2785", GetCameraTargetPositionLoc(), gg_snd_WC2Orc08SZuljin5, "TRIGSTR_2786", bj_TIMETYPE_ADD, 0, true )
    call VolumeGroupResetBJ(  )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_TrollsAquiredVO3 takes nothing returns nothing
    set gg_trg_TrollsAquiredVO3 = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_TrollsAquiredVO3, Condition( function Trig_TrollsAquiredVO3_Conditions ) )
    call TriggerAddAction( gg_trg_TrollsAquiredVO3, function Trig_TrollsAquiredVO3_Actions )
endfunction

//===========================================================================
// Trigger: TrollsCompletedVO
//===========================================================================
function Trig_TrollsCompletedVO_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetSpeechVolumeGroupsBJ(  )
    call TransmissionFromUnitTypeWithNameBJ( GetPlayersAll(), Player(7), 'O60B', "TRIGSTR_2779", GetCameraTargetPositionLoc(), gg_snd_WC2Orc08SZuljin8, "TRIGSTR_2780", bj_TIMETYPE_ADD, 0, true )
    call VolumeGroupResetBJ(  )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_TrollsCompletedVO takes nothing returns nothing
    set gg_trg_TrollsCompletedVO = CreateTrigger(  )
    call TriggerAddAction( gg_trg_TrollsCompletedVO, function Trig_TrollsCompletedVO_Actions )
endfunction

//===========================================================================
// Trigger: Goblins01VO
//===========================================================================
function Trig_Goblins01VO_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Goblins01VO_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call ShowDestructableBJ( true, gg_dest_B00C_6024 )
    call ShowDestructableBJ( true, gg_dest_B00C_6047 )
    call ShowDestructableBJ( true, gg_dest_B00C_0342 )
    call ShowDestructableBJ( true, gg_dest_B00C_5900 )
    call ShowDestructableBJ( true, gg_dest_B00C_6113 )
    call ShowDestructableBJ( true, gg_dest_B00C_6116 )
    call ShowDestructableBJ( true, gg_dest_B00C_6121 )
    call ShowUnitShow( gg_unit_nglm_0276 )
    call ShowUnitShow( gg_unit_nglm_0277 )
    call ShowUnitShow( gg_unit_nglm_0275 )
    call ShowUnitShow( gg_unit_nglm_0255 )
    call SetSpeechVolumeGroupsBJ(  )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), gg_unit_ngsp_0232, "TRIGSTR_2590", gg_snd_WC2Orc08SGoblinSappers1, "TRIGSTR_2591", bj_TIMETYPE_ADD, 0.00, true )
    call VolumeGroupResetBJ(  )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Goblins01VO takes nothing returns nothing
    set gg_trg_Goblins01VO = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Goblins01VO, Condition( function Trig_Goblins01VO_Conditions ) )
    call TriggerAddAction( gg_trg_Goblins01VO, function Trig_Goblins01VO_Actions )
endfunction

//===========================================================================
// Trigger: Goblins02VO
//===========================================================================
function Trig_Goblins02VO_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Goblins02VO_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call ShowDestructableBJ( true, gg_dest_B00C_0304 )
    call ShowDestructableBJ( true, gg_dest_B00C_5899 )
    call ShowDestructableBJ( true, gg_dest_B00C_5922 )
    call ShowDestructableBJ( true, gg_dest_B00C_6025 )
    call ShowDestructableBJ( true, gg_dest_B00C_6124 )
    call ShowDestructableBJ( true, gg_dest_B00C_6122 )
    call ShowDestructableBJ( true, gg_dest_B00C_6125 )
    call ShowUnitShow( gg_unit_nglm_0278 )
    call ShowUnitShow( gg_unit_nglm_0242 )
    call ShowUnitShow( gg_unit_nglm_0279 )
    call ShowUnitShow( gg_unit_nglm_0285 )
    call SetSpeechVolumeGroupsBJ(  )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), gg_unit_ngsp_0234, "TRIGSTR_2610", gg_snd_WC2Orc08SGoblinSappers2, "TRIGSTR_2611", bj_TIMETYPE_ADD, 0.00, true )
    call VolumeGroupResetBJ(  )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Goblins02VO takes nothing returns nothing
    set gg_trg_Goblins02VO = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Goblins02VO, Condition( function Trig_Goblins02VO_Conditions ) )
    call TriggerAddAction( gg_trg_Goblins02VO, function Trig_Goblins02VO_Actions )
endfunction

//===========================================================================
// Trigger: Garona01VO
//===========================================================================
function Trig_Garona01VO_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Garona01VO_Func004C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_Hero_Eitrigg) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Garona01VO_Func013A takes nothing returns nothing
    call KillDestructable( GetEnumDestructable() )
endfunction

function Trig_Garona01VO_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetSpeechVolumeGroupsBJ(  )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Garona, "TRIGSTR_2594", gg_snd_WC2Orc08SGarona1, "TRIGSTR_2595", bj_TIMETYPE_ADD, 0.00, true )
    if ( Trig_Garona01VO_Func004C() ) then
        call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Eitrigg, "TRIGSTR_2596", gg_snd_WC2Orc08SEitrigg5, "TRIGSTR_2597", bj_TIMETYPE_ADD, 0.00, true )
    else
    endif
    call VolumeGroupResetBJ(  )
    call CameraSetupApplyForPlayerSmooth( true, gg_cam_GaronaCam, udg_Player01, 2.00, 0.00, 0.50, 100.00 )
    call AddUnitAnimationPropertiesBJ( false, "cinematic", udg_Hero_Garona )
    call ResetUnitLookAt( udg_Hero_Garona )
    call ResetUnitAnimation( udg_Hero_Garona )
    call SetUnitBlendTimeBJ( udg_Hero_Garona, 0.15 )
    call SetUnitMoveSpeed( udg_Hero_Garona, GetUnitDefaultMoveSpeed(udg_Hero_Garona) )
    call BlzSetUnitRealFieldBJ( udg_Hero_Garona, UNIT_RF_ANIMATION_WALK_SPEED, 320.00 )
    call EnumDestructablesInRectAll( gg_rct_GaronaCage, function Trig_Garona01VO_Func013A )
    call TriggerSleepAction( 2.00 )
    call SetUnitOwner( udg_Hero_Garona, udg_PlayerMidHeroesOrc, false )
    call PauseUnitBJ( false, udg_Hero_Garona )
    call SetUnitInvulnerable( udg_Hero_Garona, false )
    call IssuePointOrderLocBJ( udg_Hero_Garona, "attack", GetRectCenter(gg_rct_BasePatrol01) )
    call ConditionalTriggerExecute( gg_trg_SurviveMusicTheme )
    call EnableTrigger( gg_trg_Garona_Patrol_A )
    call EnableTrigger( gg_trg_Garona_Patrol_B )
    call EnableTrigger( gg_trg_Garona_Patrol_C )
    call EnableTrigger( gg_trg_Garona_Patrol_D )
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Garona01VO takes nothing returns nothing
    set gg_trg_Garona01VO = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Garona01VO, Condition( function Trig_Garona01VO_Conditions ) )
    call TriggerAddAction( gg_trg_Garona01VO, function Trig_Garona01VO_Actions )
endfunction

//===========================================================================
// Trigger: Garona02VO
//===========================================================================
function Trig_Garona02VO_Conditions takes nothing returns boolean
    if ( not ( udg_GameOver == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Garona02VO_Func011C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_Hero_Eitrigg) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Garona02VO_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call DisableTrigger( gg_trg_Garona_Patrol_A )
    call DisableTrigger( gg_trg_Garona_Patrol_B )
    call DisableTrigger( gg_trg_Garona_Patrol_C )
    call DisableTrigger( gg_trg_Garona_Patrol_D )
    call SetSpeechVolumeGroupsBJ(  )
    call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Garona, "TRIGSTR_2606", gg_snd_WC2Orc08SGarona2, "TRIGSTR_2607", bj_TIMETYPE_ADD, 0.00, true )
    call VolumeGroupResetBJ(  )
    call EnableTrigger( gg_trg_GaronaFlee )
    call EnableTrigger( gg_trg_GaronaExit )
    if ( Trig_Garona02VO_Func011C() ) then
        call SetSpeechVolumeGroupsBJ(  )
        call TransmissionFromUnitWithNameBJ( GetPlayersAll(), udg_Hero_Eitrigg, "TRIGSTR_2608", gg_snd_WC2Orc08SEitrigg6, "TRIGSTR_2609", bj_TIMETYPE_ADD, 0.00, true )
        call VolumeGroupResetBJ(  )
    else
    endif
    call QueuedTriggerRemoveBJ( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Garona02VO takes nothing returns nothing
    set gg_trg_Garona02VO = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Garona02VO, Condition( function Trig_Garona02VO_Conditions ) )
    call TriggerAddAction( gg_trg_Garona02VO, function Trig_Garona02VO_Actions )
endfunction

//===========================================================================
// Trigger: LodgeAttackTimerDestroy
//===========================================================================
function Trig_LodgeAttackTimerDestroy_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_LodgeAttackTimerDestroy_Func005C takes nothing returns boolean
    if ( not ( GetGameDifficulty() == MAP_DIFFICULTY_HARD ) ) then
        return false
    endif
    return true
endfunction

function Trig_LodgeAttackTimerDestroy_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call DisableTrigger( gg_trg_LodgeAttackedStart )
    if ( Trig_LodgeAttackTimerDestroy_Func005C() ) then
        call StartCampaignAI( udg_PlayerElves, "Scripts\\WC2Orc08S\\WC2O08SP15.ai" )
    else
        call StartCampaignAI( udg_PlayerElves, "Scripts\\WC2Orc08S\\WC2O08SP15B.ai" )
        call ConditionalTriggerExecute( gg_trg_LodgeAttackWaves )
        call EnableTrigger( gg_trg_LodgeAttackWaves )
        call EnableTrigger( gg_trg_LodgeAttackRecurring )
    endif
endfunction

//===========================================================================
function InitTrig_LodgeAttackTimerDestroy takes nothing returns nothing
    set gg_trg_LodgeAttackTimerDestroy = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_LodgeAttackTimerDestroy, udg_ElvesTimer )
    call TriggerAddCondition( gg_trg_LodgeAttackTimerDestroy, Condition( function Trig_LodgeAttackTimerDestroy_Conditions ) )
    call TriggerAddAction( gg_trg_LodgeAttackTimerDestroy, function Trig_LodgeAttackTimerDestroy_Actions )
endfunction

//===========================================================================
// Trigger: LodgeAttackedStart
//===========================================================================
function Trig_LodgeAttackedStart_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerElves ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetAttacker()) != Player(PLAYER_NEUTRAL_AGGRESSIVE) ) ) then
        return false
    endif
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_LodgeAttackedStart_Func003C takes nothing returns boolean
    if ( not ( GetGameDifficulty() == MAP_DIFFICULTY_HARD ) ) then
        return false
    endif
    return true
endfunction

function Trig_LodgeAttackedStart_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call DisableTrigger( gg_trg_LodgeAttackTimerDestroy )
    if ( Trig_LodgeAttackedStart_Func003C() ) then
        call StartCampaignAI( udg_PlayerElves, "Scripts\\WC2Orc08S\\WC2O08SP15.ai" )
    else
        call StartCampaignAI( udg_PlayerElves, "Scripts\\WC2Orc08S\\WC2O08SP15B.ai" )
        call ConditionalTriggerExecute( gg_trg_LodgeAttackWaves )
        call EnableTrigger( gg_trg_LodgeAttackWaves )
        call EnableTrigger( gg_trg_LodgeAttackRecurring )
    endif
endfunction

//===========================================================================
function InitTrig_LodgeAttackedStart takes nothing returns nothing
    set gg_trg_LodgeAttackedStart = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_LodgeAttackedStart, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_LodgeAttackedStart, Condition( function Trig_LodgeAttackedStart_Conditions ) )
    call TriggerAddAction( gg_trg_LodgeAttackedStart, function Trig_LodgeAttackedStart_Actions )
endfunction

//===========================================================================
// Trigger: LodgeAttackWaves
//
// Easy and Normal
//===========================================================================
function Trig_LodgeAttackWaves_Func002Func002C takes nothing returns boolean
    if ( not ( IsUnitType(udg_LodgeWaveUnit, UNIT_TYPE_STRUCTURE) == false ) ) then
        return false
    endif
    if ( not ( IsUnitType(udg_LodgeWaveUnit, UNIT_TYPE_PEON) == false ) ) then
        return false
    endif
    if ( not ( IsUnitAliveBJ(udg_LodgeWaveUnit) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_LodgeAttackWaves_Func002A takes nothing returns nothing
    set udg_LodgeWaveUnit = GetEnumUnit()
    if ( Trig_LodgeAttackWaves_Func002Func002C() ) then
        call RemoveGuardPosition( udg_LodgeWaveUnit )
        set udg_LodgeWavePoint = GetRandomLocInRect(gg_rct_PlayerRelocate)
        call IssuePointOrderLocBJ( udg_LodgeWaveUnit, "attack", udg_LodgeWavePoint )
        call RemoveLocation (udg_LodgeWavePoint)
    else
    endif
endfunction

function Trig_LodgeAttackWaves_Actions takes nothing returns nothing
    set udg_LodgeWave = GetUnitsOfPlayerAll(udg_PlayerElves)
    call ForGroupBJ( udg_LodgeWave, function Trig_LodgeAttackWaves_Func002A )
    call DestroyGroup (udg_LodgeWave)
endfunction

//===========================================================================
function InitTrig_LodgeAttackWaves takes nothing returns nothing
    set gg_trg_LodgeAttackWaves = CreateTrigger(  )
    call DisableTrigger( gg_trg_LodgeAttackWaves )
    call TriggerRegisterTimerEventPeriodic( gg_trg_LodgeAttackWaves, 120.00 )
    call TriggerAddAction( gg_trg_LodgeAttackWaves, function Trig_LodgeAttackWaves_Actions )
endfunction

//===========================================================================
// Trigger: LodgeAttackRecurring
//===========================================================================
function Trig_LodgeAttackRecurring_Func003Func002C takes nothing returns boolean
    if ( not ( IsUnitType(udg_LodgeWaveUnit, UNIT_TYPE_STRUCTURE) == false ) ) then
        return false
    endif
    if ( not ( IsUnitType(udg_LodgeWaveUnit, UNIT_TYPE_PEON) == false ) ) then
        return false
    endif
    if ( not ( IsUnitAliveBJ(udg_LodgeWaveUnit) == true ) ) then
        return false
    endif
    if ( not ( RectContainsUnit(gg_rct_ElfBase, udg_LodgeWaveUnit) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_LodgeAttackRecurring_Func003A takes nothing returns nothing
    set udg_LodgeWaveUnit_R = GetEnumUnit()
    if ( Trig_LodgeAttackRecurring_Func003Func002C() ) then
        call RemoveGuardPosition( udg_LodgeWaveUnit_R )
        set udg_LodgeWavePoint_R = GetRandomLocInRect(gg_rct_PlayerRelocate)
        call IssuePointOrderLocBJ( udg_LodgeWaveUnit_R, "attack", udg_LodgeWavePoint_R )
        call RemoveLocation (udg_LodgeWavePoint_R)
    else
    endif
endfunction

function Trig_LodgeAttackRecurring_Actions takes nothing returns nothing
    set udg_LodgeWave_R = GetUnitsOfPlayerAll(udg_PlayerElves)
    call ForGroupBJ( udg_LodgeWave_R, function Trig_LodgeAttackRecurring_Func003A )
    call DestroyGroup (udg_LodgeWave_R)
endfunction

//===========================================================================
function InitTrig_LodgeAttackRecurring takes nothing returns nothing
    set gg_trg_LodgeAttackRecurring = CreateTrigger(  )
    call DisableTrigger( gg_trg_LodgeAttackRecurring )
    call TriggerRegisterTimerEventPeriodic( gg_trg_LodgeAttackRecurring, 1.00 )
    call TriggerAddAction( gg_trg_LodgeAttackRecurring, function Trig_LodgeAttackRecurring_Actions )
endfunction

//===========================================================================
// Trigger: ElvenTrollResponse01
//===========================================================================
function Trig_ElvenTrollResponse01_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerElves ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetAttacker()) == udg_PlayerTribeBrown ) ) then
        return false
    endif
    return true
endfunction

function Trig_ElvenTrollResponse01_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, false, udg_PlayerTribeBrown )
endfunction

//===========================================================================
function InitTrig_ElvenTrollResponse01 takes nothing returns nothing
    set gg_trg_ElvenTrollResponse01 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_ElvenTrollResponse01, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_ElvenTrollResponse01, Condition( function Trig_ElvenTrollResponse01_Conditions ) )
    call TriggerAddAction( gg_trg_ElvenTrollResponse01, function Trig_ElvenTrollResponse01_Actions )
endfunction

//===========================================================================
// Trigger: ElvenTrollResponse02
//===========================================================================
function Trig_ElvenTrollResponse02_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerElves ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetAttacker()) == udg_PlayerTribeCoal ) ) then
        return false
    endif
    return true
endfunction

function Trig_ElvenTrollResponse02_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, false, udg_PlayerTribeCoal )
endfunction

//===========================================================================
function InitTrig_ElvenTrollResponse02 takes nothing returns nothing
    set gg_trg_ElvenTrollResponse02 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_ElvenTrollResponse02, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_ElvenTrollResponse02, Condition( function Trig_ElvenTrollResponse02_Conditions ) )
    call TriggerAddAction( gg_trg_ElvenTrollResponse02, function Trig_ElvenTrollResponse02_Actions )
endfunction

//===========================================================================
// Trigger: ElvenTrollResponse03
//===========================================================================
function Trig_ElvenTrollResponse03_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerElves ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetAttacker()) == udg_PlayerTribeLavender ) ) then
        return false
    endif
    return true
endfunction

function Trig_ElvenTrollResponse03_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, false, udg_PlayerTribeLavender )
endfunction

//===========================================================================
function InitTrig_ElvenTrollResponse03 takes nothing returns nothing
    set gg_trg_ElvenTrollResponse03 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_ElvenTrollResponse03, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_ElvenTrollResponse03, Condition( function Trig_ElvenTrollResponse03_Conditions ) )
    call TriggerAddAction( gg_trg_ElvenTrollResponse03, function Trig_ElvenTrollResponse03_Actions )
endfunction

//===========================================================================
// Trigger: ElvenTrollResponse04
//===========================================================================
function Trig_ElvenTrollResponse04_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerElves ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetAttacker()) == udg_PlayerTribeMint ) ) then
        return false
    endif
    return true
endfunction

function Trig_ElvenTrollResponse04_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, false, udg_PlayerTribeMint )
endfunction

//===========================================================================
function InitTrig_ElvenTrollResponse04 takes nothing returns nothing
    set gg_trg_ElvenTrollResponse04 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_ElvenTrollResponse04, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_ElvenTrollResponse04, Condition( function Trig_ElvenTrollResponse04_Conditions ) )
    call TriggerAddAction( gg_trg_ElvenTrollResponse04, function Trig_ElvenTrollResponse04_Actions )
endfunction

//===========================================================================
// Trigger: ElvenTrollResponse05
//===========================================================================
function Trig_ElvenTrollResponse05_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetTriggerUnit()) == udg_PlayerElves ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetAttacker()) == udg_PlayerTribePeach ) ) then
        return false
    endif
    return true
endfunction

function Trig_ElvenTrollResponse05_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call SetPlayerAllianceBJ( udg_PlayerElves, ALLIANCE_PASSIVE, false, udg_PlayerTribePeach )
endfunction

//===========================================================================
function InitTrig_ElvenTrollResponse05 takes nothing returns nothing
    set gg_trg_ElvenTrollResponse05 = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_ElvenTrollResponse05, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_ElvenTrollResponse05, Condition( function Trig_ElvenTrollResponse05_Conditions ) )
    call TriggerAddAction( gg_trg_ElvenTrollResponse05, function Trig_ElvenTrollResponse05_Actions )
endfunction

//===========================================================================
// Trigger: HiddenAssault
//===========================================================================
function Trig_HiddenAssault_Conditions takes nothing returns boolean
    if ( not ( IsTriggerEnabled(GetTriggeringTrigger()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_HiddenAssault_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_HiddenUnitsStart = true
    call ConditionalTriggerExecute( gg_trg_HiddenPing02 )
endfunction

//===========================================================================
function InitTrig_HiddenAssault takes nothing returns nothing
    set gg_trg_HiddenAssault = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_HiddenAssault, udg_HiddenUnitTimer )
    call TriggerAddCondition( gg_trg_HiddenAssault, Condition( function Trig_HiddenAssault_Conditions ) )
    call TriggerAddAction( gg_trg_HiddenAssault, function Trig_HiddenAssault_Actions )
endfunction

//===========================================================================
// Trigger: SettlementsFailedAI
//===========================================================================
function Trig_SettlementsFailedAI_Actions takes nothing returns nothing
    call SetPlayerStateBJ( udg_PlayerWildBlue, PLAYER_STATE_RESOURCE_LUMBER, 99999 )
    call SetPlayerStateBJ( udg_PlayerWildYellow, PLAYER_STATE_RESOURCE_LUMBER, 99999 )
    call SetPlayerStateBJ( udg_PlayerWildMaroon, PLAYER_STATE_RESOURCE_LUMBER, 99999 )
    call SetPlayerStateBJ( udg_PlayerWildBlue, PLAYER_STATE_RESOURCE_GOLD, 99999 )
    call SetPlayerStateBJ( udg_PlayerWildYellow, PLAYER_STATE_RESOURCE_GOLD, 99999 )
    call SetPlayerStateBJ( udg_PlayerWildMaroon, PLAYER_STATE_RESOURCE_GOLD, 99999 )
    call StartCampaignAI( udg_PlayerWildBlue, "Scripts\\WC2Orc08S\\WC2O08SP02.ai" )
    call StartCampaignAI( udg_PlayerWildYellow, "Scripts\\WC2Orc08S\\WC2O08SP05.ai" )
    call StartCampaignAI( udg_PlayerWildMaroon, "Scripts\\WC2Orc08S\\WC2O08SP13.ai" )
    call ConditionalTriggerExecute( gg_trg_GryphonTraining )
endfunction

//===========================================================================
function InitTrig_SettlementsFailedAI takes nothing returns nothing
    set gg_trg_SettlementsFailedAI = CreateTrigger(  )
    call DisableTrigger( gg_trg_SettlementsFailedAI )
    call TriggerAddAction( gg_trg_SettlementsFailedAI, function Trig_SettlementsFailedAI_Actions )
endfunction

//===========================================================================
// Trigger: GryphonTraining
//===========================================================================
function Trig_GryphonTraining_Conditions takes nothing returns boolean
    if ( not ( udg_OutroCinematic == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_GryphonTraining_Func002A takes nothing returns nothing
    call IssueTrainOrderByIdBJ( GetEnumUnit(), 'h60N' )
endfunction

function Trig_GryphonTraining_Actions takes nothing returns nothing
    call ForGroupBJ( GetUnitsOfTypeIdAll('h611'), function Trig_GryphonTraining_Func002A )
    call TriggerSleepAction( GetRandomReal(60.00, 180.00) )
    call ConditionalTriggerExecute( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_GryphonTraining takes nothing returns nothing
    set gg_trg_GryphonTraining = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_GryphonTraining, Condition( function Trig_GryphonTraining_Conditions ) )
    call TriggerAddAction( gg_trg_GryphonTraining, function Trig_GryphonTraining_Actions )
endfunction

//===========================================================================
// Trigger: GryphonTrained
//===========================================================================
function Trig_GryphonTrained_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetTrainedUnit()) == 'h60N' ) ) then
        return false
    endif
    return true
endfunction

function Trig_GryphonTrained_Actions takes nothing returns nothing
    call GroupAddUnitSimple( GetTrainedUnit(), udg_GryphonAttackGroup )
    call ConditionalTriggerExecute( gg_trg_GryphonAttackWaveSend )
endfunction

//===========================================================================
function InitTrig_GryphonTrained takes nothing returns nothing
    set gg_trg_GryphonTrained = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_GryphonTrained, EVENT_PLAYER_UNIT_TRAIN_FINISH )
    call TriggerAddCondition( gg_trg_GryphonTrained, Condition( function Trig_GryphonTrained_Conditions ) )
    call TriggerAddAction( gg_trg_GryphonTrained, function Trig_GryphonTrained_Actions )
endfunction

//===========================================================================
// Trigger: GryphonDies
//===========================================================================
function Trig_GryphonDies_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetDyingUnit(), udg_GryphonAttackGroup) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_GryphonDies_Func002C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_GryphonAttackGroup) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_GryphonDies_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_GryphonAttackGroup )
    if ( Trig_GryphonDies_Func002C() ) then
        set udg_GryphonsAttacking = false
    else
    endif
endfunction

//===========================================================================
function InitTrig_GryphonDies takes nothing returns nothing
    set gg_trg_GryphonDies = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_GryphonDies, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_GryphonDies, Condition( function Trig_GryphonDies_Conditions ) )
    call TriggerAddAction( gg_trg_GryphonDies, function Trig_GryphonDies_Actions )
endfunction

//===========================================================================
// Trigger: GryphonAttackWaveSend
//===========================================================================
function Trig_GryphonAttackWaveSend_Conditions takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_GryphonAttackGroup) >= udg_GryphonWaveSize ) ) then
        return false
    endif
    if ( not ( udg_GryphonsAttacking == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_GryphonAttackWaveSend_Func004002 takes nothing returns nothing
    call IssuePointOrderLocBJ( GetEnumUnit(), "attack", GetRectCenter(gg_rct_PlayerRelocate) )
endfunction

function Trig_GryphonAttackWaveSend_Actions takes nothing returns nothing
    set udg_GryphonsAttacking = true
    call ForGroupBJ( udg_GryphonAttackGroup, function Trig_GryphonAttackWaveSend_Func004002 )
endfunction

//===========================================================================
function InitTrig_GryphonAttackWaveSend takes nothing returns nothing
    set gg_trg_GryphonAttackWaveSend = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_GryphonAttackWaveSend, Condition( function Trig_GryphonAttackWaveSend_Conditions ) )
    call TriggerAddAction( gg_trg_GryphonAttackWaveSend, function Trig_GryphonAttackWaveSend_Actions )
endfunction

//===========================================================================
// Trigger: PlayerBaseCount
//===========================================================================
function Trig_PlayerBaseCount_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetTriggerUnit()) == udg_Player01 ) ) then
        return false
    endif
    return true
endfunction

function Trig_PlayerBaseCount_Func001Func001C takes nothing returns boolean
    if ( not ( GetPlayerState(udg_Player01, PLAYER_STATE_RESOURCE_FOOD_USED) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_PlayerBaseCount_Func001Func007001001002001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == true )
endfunction

function Trig_PlayerBaseCount_Func001Func007001001002002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_PlayerBaseCount_Func001Func007001001002002002 takes nothing returns boolean
    return ( RectContainsUnit(gg_rct_PlayerBase, GetFilterUnit()) == true )
endfunction

function Trig_PlayerBaseCount_Func001Func007001001002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_PlayerBaseCount_Func001Func007001001002002001(), Trig_PlayerBaseCount_Func001Func007001001002002002() )
endfunction

function Trig_PlayerBaseCount_Func001Func007001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_PlayerBaseCount_Func001Func007001001002001(), Trig_PlayerBaseCount_Func001Func007001001002002() )
endfunction

function Trig_PlayerBaseCount_Func001C takes nothing returns boolean
    if ( not ( IsUnitType(GetTriggerUnit(), UNIT_TYPE_STRUCTURE) == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsOfPlayerMatching(GetOwningPlayer(GetTriggerUnit()), Condition(function Trig_PlayerBaseCount_Func001Func007001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_PlayerBaseCount_Actions takes nothing returns nothing
    if ( Trig_PlayerBaseCount_Func001C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
        set udg_FailReason = 2
        call QueuedTriggerClearBJ(  )
        call QueuedTriggerAddBJ( gg_trg_Survive_Failed_Q, true )
    else
        if ( Trig_PlayerBaseCount_Func001Func001C() ) then
            call DisableTrigger( GetTriggeringTrigger() )
            set udg_FailReason = 1
            call QueuedTriggerClearBJ(  )
            call QueuedTriggerAddBJ( gg_trg_Survive_Failed_Q, true )
        else
        endif
    endif
endfunction

//===========================================================================
function InitTrig_PlayerBaseCount takes nothing returns nothing
    set gg_trg_PlayerBaseCount = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_PlayerBaseCount, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_PlayerBaseCount, Condition( function Trig_PlayerBaseCount_Conditions ) )
    call TriggerAddAction( gg_trg_PlayerBaseCount, function Trig_PlayerBaseCount_Actions )
endfunction

//===========================================================================
// Trigger: Next Level Prep
//===========================================================================
function Trig_Next_Level_Prep_Actions takes nothing returns nothing
    // Store hero data for the next level(s)
    call StoreUnitBJ( udg_Hero_Doomhammer, "Doomhammer", "WC2Orc08S", udg_Cache )
    call StoreUnitBJ( udg_Hero_Zuljin, "Zuljin", "WC2Orc08S", udg_Cache )
    call SaveGameCacheBJ( udg_Cache )
    // Enable the next level in the glue screens
    call ShowCustomCampaignButton( true, 14 )
    call SetNextLevelBJ( "WC2Orc09.w3x" )
    call ConditionalTriggerExecute( gg_trg_Victory )
endfunction

//===========================================================================
function InitTrig_Next_Level_Prep takes nothing returns nothing
    set gg_trg_Next_Level_Prep = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Next_Level_Prep, function Trig_Next_Level_Prep_Actions )
endfunction

//===========================================================================
// Trigger: Victory
//
// Save all heroes.
// Save the campaign game cache.
// Enable the next level.
// Start the next level.
//===========================================================================
function Trig_Victory_Conditions takes nothing returns boolean
    if ( not ( udg_GAMEOVER == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Victory_Actions takes nothing returns nothing
    // Start the next level
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 2, "ReplaceableTextures\\CameraMasks\\White_mask.blp", 0, 0, 0, 0 )
    call TriggerSleepAction( 2 )
    call EndThematicMusicBJ(  )
    call CustomVictoryBJ( Player(0), true, false )
endfunction

//===========================================================================
function InitTrig_Victory takes nothing returns nothing
    set gg_trg_Victory = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_Victory, Condition( function Trig_Victory_Conditions ) )
    call TriggerAddAction( gg_trg_Victory, function Trig_Victory_Actions )
endfunction

//===========================================================================
// Trigger: Defeat
//===========================================================================
function Trig_Defeat_Actions takes nothing returns nothing
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
    call CustomDefeatBJ( Player(0), "TRIGSTR_2678" )
endfunction

//===========================================================================
function InitTrig_Defeat takes nothing returns nothing
    set gg_trg_Defeat = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Defeat, function Trig_Defeat_Actions )
endfunction

//===========================================================================
// Trigger: Glittering Prizes
//===========================================================================
function Trig_Glittering_Prizes_Actions takes nothing returns nothing
    call SetPlayerStateBJ( Player(0), PLAYER_STATE_RESOURCE_GOLD, ( GetPlayerState(Player(0), PLAYER_STATE_RESOURCE_GOLD) + 10000 ) )
    call SetPlayerStateBJ( Player(0), PLAYER_STATE_RESOURCE_LUMBER, ( GetPlayerState(Player(0), PLAYER_STATE_RESOURCE_LUMBER) + 5000 ) )
    call playerAddOil(Player(0), 5000)
    call TriggerSleepAction( 1.00 )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_SECRET, "TRIGSTR_2700" )
endfunction

//===========================================================================
function InitTrig_Glittering_Prizes takes nothing returns nothing
    set gg_trg_Glittering_Prizes = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Glittering_Prizes, Player(0), "Glittering prizes", true )
    call TriggerAddAction( gg_trg_Glittering_Prizes, function Trig_Glittering_Prizes_Actions )
endfunction

//===========================================================================
// Trigger: Disco
//===========================================================================
function Trig_Disco_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    call PlayThematicMusicBJ( "Warcraft2\\Music\\WarCraft_2_Beyond_the_Dark_Portal_disco.mp3" )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_SECRET, "TRIGSTR_2699" )
    call TriggerSleepAction( 168.00 )
    call EnableTrigger( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Disco takes nothing returns nothing
    set gg_trg_Disco = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Disco, Player(0), "Disco", true )
    call TriggerAddAction( gg_trg_Disco, function Trig_Disco_Actions )
endfunction

//===========================================================================
// Trigger: Deck me out
//===========================================================================
function Trig_Deck_me_out_Actions takes nothing returns nothing
    call SetPlayerTechResearchedSwap( 'Rome', 2, Player(0) )
    call SetPlayerTechResearchedSwap( 'Rora', 2, Player(0) )
    call SetPlayerTechResearchedSwap( 'Roar', 2, Player(0) )
    call SetPlayerTechResearchedSwap( 'Rosp', 2, Player(0) )
    call SetPlayerTechResearchedSwap( 'R006', 2, Player(0) )
    call SetPlayerTechResearchedSwap( 'R008', 2, Player(0) )
    call SetPlayerTechResearchedSwap( 'R601', 2, Player(0) )
    call TriggerSleepAction( 1.00 )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_SECRET, "TRIGSTR_2698" )
endfunction

//===========================================================================
function InitTrig_Deck_me_out takes nothing returns nothing
    set gg_trg_Deck_me_out = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Deck_me_out, Player(0), "Deck me out", true )
    call TriggerAddAction( gg_trg_Deck_me_out, function Trig_Deck_me_out_Actions )
endfunction

//===========================================================================
// Trigger: Every little thing she does
//===========================================================================
function Trig_Every_little_thing_she_does_Actions takes nothing returns nothing
    call SetPlayerTechResearchedSwap( 'R003', 1, Player(0) )
    call SetPlayerTechResearchedSwap( 'R001', 2, Player(0) )
    call TriggerSleepAction( 1.00 )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_SECRET, "TRIGSTR_2697" )
endfunction

//===========================================================================
function InitTrig_Every_little_thing_she_does takes nothing returns nothing
    set gg_trg_Every_little_thing_she_does = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Every_little_thing_she_does, Player(0), "Every little thing she does", true )
    call TriggerAddAction( gg_trg_Every_little_thing_she_does, function Trig_Every_little_thing_she_does_Actions )
endfunction

//===========================================================================
// Trigger: Hatchet
//===========================================================================
function Trig_Hatchet_Actions takes nothing returns nothing
endfunction

//===========================================================================
function InitTrig_Hatchet takes nothing returns nothing
    set gg_trg_Hatchet = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Hatchet, Player(0), "Hatchet", true )
    call TriggerAddAction( gg_trg_Hatchet, function Trig_Hatchet_Actions )
endfunction

//===========================================================================
// Trigger: It is a good day to die
//===========================================================================
function Trig_It_is_a_good_day_to_die_Func001Func002A takes nothing returns nothing
    call SetUnitInvulnerable( GetEnumUnit(), false )
endfunction

function Trig_It_is_a_good_day_to_die_Func001Func004A takes nothing returns nothing
    call SetUnitInvulnerable( GetEnumUnit(), true )
endfunction

function Trig_It_is_a_good_day_to_die_Func001C takes nothing returns boolean
    if ( not ( udg_ItIsAGoodDayToDie == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_It_is_a_good_day_to_die_Actions takes nothing returns nothing
    if ( Trig_It_is_a_good_day_to_die_Func001C() ) then
        set udg_ItIsAGoodDayToDie = true
        call ForGroupBJ( GetUnitsInRectOfPlayer(GetPlayableMapRect(), Player(0)), function Trig_It_is_a_good_day_to_die_Func001Func004A )
    else
        set udg_ItIsAGoodDayToDie = false
        call ForGroupBJ( GetUnitsInRectOfPlayer(GetPlayableMapRect(), Player(0)), function Trig_It_is_a_good_day_to_die_Func001Func002A )
    endif
    call TriggerSleepAction( 1.00 )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_SECRET, "TRIGSTR_2696" )
endfunction

//===========================================================================
function InitTrig_It_is_a_good_day_to_die takes nothing returns nothing
    set gg_trg_It_is_a_good_day_to_die = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_It_is_a_good_day_to_die, Player(0), "It is a good day to die", true )
    call TriggerAddAction( gg_trg_It_is_a_good_day_to_die, function Trig_It_is_a_good_day_to_die_Actions )
endfunction

//===========================================================================
// Trigger: Make it so
//===========================================================================
function Trig_Make_it_so_Actions takes nothing returns nothing
endfunction

//===========================================================================
function InitTrig_Make_it_so takes nothing returns nothing
    set gg_trg_Make_it_so = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Make_it_so, Player(0), "Make it so", true )
    call TriggerAddAction( gg_trg_Make_it_so, function Trig_Make_it_so_Actions )
endfunction

//===========================================================================
// Trigger: Noglues
//===========================================================================
function Trig_Noglues_Actions takes nothing returns nothing
endfunction

//===========================================================================
function InitTrig_Noglues takes nothing returns nothing
    set gg_trg_Noglues = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Noglues, Player(0), "Noglues", true )
    call TriggerAddAction( gg_trg_Noglues, function Trig_Noglues_Actions )
endfunction

//===========================================================================
// Trigger: On screen
//===========================================================================
function Trig_On_screen_Func001C takes nothing returns boolean
    if ( not ( udg_OnScreen == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_On_screen_Actions takes nothing returns nothing
    if ( Trig_On_screen_Func001C() ) then
        set udg_OnScreen = true
        call FogMaskEnableOff(  )
        call FogEnableOff(  )
    else
        set udg_OnScreen = false
        call FogMaskEnableOn(  )
        call FogEnableOn(  )
    endif
    call TriggerSleepAction( 1.00 )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_SECRET, "TRIGSTR_2695" )
endfunction

//===========================================================================
function InitTrig_On_screen takes nothing returns nothing
    set gg_trg_On_screen = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_On_screen, Player(0), "On screen", true )
    call TriggerAddAction( gg_trg_On_screen, function Trig_On_screen_Actions )
endfunction

//===========================================================================
// Trigger: Showpath
//===========================================================================
function Trig_Showpath_Func001C takes nothing returns boolean
    if ( not ( udg_Showpath == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Showpath_Actions takes nothing returns nothing
    if ( Trig_Showpath_Func001C() ) then
        set udg_Showpath = true
        call FogMaskEnableOff(  )
    else
        set udg_Showpath = false
        call FogMaskEnableOn(  )
    endif
    call TriggerSleepAction( 1.00 )
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_SECRET, "TRIGSTR_2694" )
endfunction

//===========================================================================
function InitTrig_Showpath takes nothing returns nothing
    set gg_trg_Showpath = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Showpath, Player(0), "Showpath", true )
    call TriggerAddAction( gg_trg_Showpath, function Trig_Showpath_Actions )
endfunction

//===========================================================================
// Trigger: There can be only one
//===========================================================================
function Trig_There_can_be_only_one_Actions takes nothing returns nothing
endfunction

//===========================================================================
function InitTrig_There_can_be_only_one takes nothing returns nothing
    set gg_trg_There_can_be_only_one = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_There_can_be_only_one, Player(0), "There can be only one", true )
    call TriggerAddAction( gg_trg_There_can_be_only_one, function Trig_There_can_be_only_one_Actions )
endfunction

//===========================================================================
// Trigger: Unite the clans
//===========================================================================
function Trig_Unite_the_clans_Actions takes nothing returns nothing
    call QuestMessageBJ( GetPlayersAll(), bj_QUESTMESSAGE_SECRET, "TRIGSTR_2693" )
    call TriggerSleepAction( bj_QUEUE_DELAY_QUEST )
endfunction

//===========================================================================
function InitTrig_Unite_the_clans takes nothing returns nothing
    set gg_trg_Unite_the_clans = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Unite_the_clans, Player(0), "Unite the clans", true )
    call TriggerAddAction( gg_trg_Unite_the_clans, function Trig_Unite_the_clans_Actions )
endfunction

//===========================================================================
// Trigger: Tigerlily
//===========================================================================
function Trig_Tigerlily_Actions takes nothing returns nothing
endfunction

//===========================================================================
function InitTrig_Tigerlily takes nothing returns nothing
    set gg_trg_Tigerlily = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Tigerlily, function Trig_Tigerlily_Actions )
endfunction

//===========================================================================
// Trigger: OilSpentForBuildings01
//===========================================================================
function Trig_OilSpentForBuildings01_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetConstructingStructure()) == 'o60M' ) ) then
        return false
    endif
    return true
endfunction

function Trig_OilSpentForBuildings01_Actions takes nothing returns nothing
    // Check the amount of Oil for Player
    if getPlayerOil(Player(0)) < 400 then
    call PlaySoundBJ( gg_snd_GruntNoOil1 )
    call DisplayTextToForce( bj_FORCE_PLAYER[0], "TRIGSTR_2685" )
    call TriggerSleepAction( 0.00 )
    call IssueImmediateOrderById( GetTriggerUnit( ), 0xD0008 )
    // need to compensate return from valid canceling trigger
    call playerAddOil(Player(0), -400)
    else
    // need to decrease the oil if there was enough of it and ship started to build
    call playerAddOil(Player(0), -400)
    endif
endfunction

//===========================================================================
function InitTrig_OilSpentForBuildings01 takes nothing returns nothing
    set gg_trg_OilSpentForBuildings01 = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_OilSpentForBuildings01, Player(0), EVENT_PLAYER_UNIT_CONSTRUCT_START )
    call TriggerAddCondition( gg_trg_OilSpentForBuildings01, Condition( function Trig_OilSpentForBuildings01_Conditions ) )
    call TriggerAddAction( gg_trg_OilSpentForBuildings01, function Trig_OilSpentForBuildings01_Actions )
endfunction

//===========================================================================
// Trigger: OilSpentForBuildings02
//===========================================================================
function Trig_OilSpentForBuildings02_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetConstructingStructure()) == 'o60N' ) ) then
        return false
    endif
    return true
endfunction

function Trig_OilSpentForBuildings02_Actions takes nothing returns nothing
    // Check the amount of Oil for Player
    if getPlayerOil(Player(0)) < 200 then
    call PlaySoundBJ( gg_snd_GruntNoOil1 )
    call DisplayTextToForce( bj_FORCE_PLAYER[0], "TRIGSTR_2684" )
    call TriggerSleepAction( 0.00 )
    call IssueImmediateOrderById( GetTriggerUnit( ), 0xD0008 )
    // need to compensate return from valid canceling trigger
    call playerAddOil(Player(0), -200)
    else
    // need to decrease the oil if there was enough of it and ship started to build
    call playerAddOil(Player(0), -200)
    endif
endfunction

//===========================================================================
function InitTrig_OilSpentForBuildings02 takes nothing returns nothing
    set gg_trg_OilSpentForBuildings02 = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_OilSpentForBuildings02, Player(0), EVENT_PLAYER_UNIT_CONSTRUCT_START )
    call TriggerAddCondition( gg_trg_OilSpentForBuildings02, Condition( function Trig_OilSpentForBuildings02_Conditions ) )
    call TriggerAddAction( gg_trg_OilSpentForBuildings02, function Trig_OilSpentForBuildings02_Actions )
endfunction

//===========================================================================
// Trigger: OilSpentForBuildings03
//===========================================================================
function Trig_OilSpentForBuildings03_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetConstructingStructure()) == 'o60L' ) ) then
        return false
    endif
    return true
endfunction

function Trig_OilSpentForBuildings03_Actions takes nothing returns nothing
    // Check the amount of Oil for Player
    if getPlayerOil(Player(0)) < 100 then
    call PlaySoundBJ( gg_snd_GruntNoOil1 )
    call DisplayTextToForce( bj_FORCE_PLAYER[0], "TRIGSTR_2683" )
    call TriggerSleepAction( 0.00 )
    call IssueImmediateOrderById( GetTriggerUnit( ), 0xD0008 )
    // need to compensate return from valid canceling trigger
    call playerAddOil(Player(0), -100)
    else
    // need to decrease the oil if there was enough of it and ship started to build
    call playerAddOil(Player(0), -100)
    endif
endfunction

//===========================================================================
function InitTrig_OilSpentForBuildings03 takes nothing returns nothing
    set gg_trg_OilSpentForBuildings03 = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_OilSpentForBuildings03, Player(0), EVENT_PLAYER_UNIT_CONSTRUCT_START )
    call TriggerAddCondition( gg_trg_OilSpentForBuildings03, Condition( function Trig_OilSpentForBuildings03_Conditions ) )
    call TriggerAddAction( gg_trg_OilSpentForBuildings03, function Trig_OilSpentForBuildings03_Actions )
endfunction

//===========================================================================
// Trigger: OilSpentForBuildings04
//===========================================================================
function Trig_OilSpentForBuildings04_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetTriggerUnit()) == 'o613' ) ) then
        return false
    endif
    return true
endfunction

function Trig_OilSpentForBuildings04_Actions takes nothing returns nothing
    // Check the amount of Oil for Player
    if getPlayerOil(Player(0)) < 200 then
    call PlaySoundBJ( gg_snd_GruntNoOil1 )
    call DisplayTextToForce( bj_FORCE_PLAYER[0], "TRIGSTR_2682" )
    call TriggerSleepAction( 0.00 )
    call IssueImmediateOrderById( GetTriggerUnit( ), 0xD0008 )
    // need to compensate return from valid canceling trigger
    call playerAddOil(Player(0), -200)
    else
    // need to decrease the oil if there was enough of it and ship started to build
    call playerAddOil(Player(0), -200)
    endif
endfunction

//===========================================================================
function InitTrig_OilSpentForBuildings04 takes nothing returns nothing
    set gg_trg_OilSpentForBuildings04 = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_OilSpentForBuildings04, Player(0), EVENT_PLAYER_UNIT_UPGRADE_START )
    call TriggerAddCondition( gg_trg_OilSpentForBuildings04, Condition( function Trig_OilSpentForBuildings04_Conditions ) )
    call TriggerAddAction( gg_trg_OilSpentForBuildings04, function Trig_OilSpentForBuildings04_Actions )
endfunction

//===========================================================================
// Trigger: OilSpentForBuildings05
//===========================================================================
function Trig_OilSpentForBuildings05_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetTriggerUnit()) == 'o612' ) ) then
        return false
    endif
    return true
endfunction

function Trig_OilSpentForBuildings05_Actions takes nothing returns nothing
    // Check the amount of Oil for Player
    if getPlayerOil(Player(0)) < 500 then
    call PlaySoundBJ( gg_snd_GruntNoOil1 )
    call DisplayTextToForce( bj_FORCE_PLAYER[0], "TRIGSTR_2681" )
    call TriggerSleepAction( 0.00 )
    call IssueImmediateOrderById( GetTriggerUnit( ), 0xD0008 )
    // need to compensate return from valid canceling trigger
    call playerAddOil(Player(0), -500)
    else
    // need to decrease the oil if there was enough of it and ship started to build
    call playerAddOil(Player(0), -500)
    endif
endfunction

//===========================================================================
function InitTrig_OilSpentForBuildings05 takes nothing returns nothing
    set gg_trg_OilSpentForBuildings05 = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_OilSpentForBuildings05, Player(0), EVENT_PLAYER_UNIT_UPGRADE_START )
    call TriggerAddCondition( gg_trg_OilSpentForBuildings05, Condition( function Trig_OilSpentForBuildings05_Conditions ) )
    call TriggerAddAction( gg_trg_OilSpentForBuildings05, function Trig_OilSpentForBuildings05_Actions )
endfunction

//===========================================================================
// Trigger: OilReturnForBuildings01
//===========================================================================
function Trig_OilReturnForBuildings01_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetCancelledStructure()) == 'o60M' ) ) then
        return false
    endif
    return true
endfunction

function Trig_OilReturnForBuildings01_Actions takes nothing returns nothing
    call playerAddOil(Player(0), 400)
endfunction

//===========================================================================
function InitTrig_OilReturnForBuildings01 takes nothing returns nothing
    set gg_trg_OilReturnForBuildings01 = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_OilReturnForBuildings01, Player(0), EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL )
    call TriggerAddCondition( gg_trg_OilReturnForBuildings01, Condition( function Trig_OilReturnForBuildings01_Conditions ) )
    call TriggerAddAction( gg_trg_OilReturnForBuildings01, function Trig_OilReturnForBuildings01_Actions )
endfunction

//===========================================================================
// Trigger: OilReturnForBuildings02
//===========================================================================
function Trig_OilReturnForBuildings02_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetCancelledStructure()) == 'o60N' ) ) then
        return false
    endif
    return true
endfunction

function Trig_OilReturnForBuildings02_Actions takes nothing returns nothing
    call playerAddOil(Player(0), 200)
endfunction

//===========================================================================
function InitTrig_OilReturnForBuildings02 takes nothing returns nothing
    set gg_trg_OilReturnForBuildings02 = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_OilReturnForBuildings02, Player(0), EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL )
    call TriggerAddCondition( gg_trg_OilReturnForBuildings02, Condition( function Trig_OilReturnForBuildings02_Conditions ) )
    call TriggerAddAction( gg_trg_OilReturnForBuildings02, function Trig_OilReturnForBuildings02_Actions )
endfunction

//===========================================================================
// Trigger: OilReturnForBuildings03
//===========================================================================
function Trig_OilReturnForBuildings03_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetCancelledStructure()) == 'o60L' ) ) then
        return false
    endif
    return true
endfunction

function Trig_OilReturnForBuildings03_Actions takes nothing returns nothing
    call playerAddOil(Player(0), 100)
endfunction

//===========================================================================
function InitTrig_OilReturnForBuildings03 takes nothing returns nothing
    set gg_trg_OilReturnForBuildings03 = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_OilReturnForBuildings03, Player(0), EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL )
    call TriggerAddCondition( gg_trg_OilReturnForBuildings03, Condition( function Trig_OilReturnForBuildings03_Conditions ) )
    call TriggerAddAction( gg_trg_OilReturnForBuildings03, function Trig_OilReturnForBuildings03_Actions )
endfunction

//===========================================================================
// Trigger: OilReturnForBuildings04
//===========================================================================
function Trig_OilReturnForBuildings04_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetTriggerUnit()) == 'o614' ) ) then
        return false
    endif
    return true
endfunction

function Trig_OilReturnForBuildings04_Actions takes nothing returns nothing
    call playerAddOil(Player(0), 200)
endfunction

//===========================================================================
function InitTrig_OilReturnForBuildings04 takes nothing returns nothing
    set gg_trg_OilReturnForBuildings04 = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_OilReturnForBuildings04, Player(0), EVENT_PLAYER_UNIT_UPGRADE_CANCEL )
    call TriggerAddCondition( gg_trg_OilReturnForBuildings04, Condition( function Trig_OilReturnForBuildings04_Conditions ) )
    call TriggerAddAction( gg_trg_OilReturnForBuildings04, function Trig_OilReturnForBuildings04_Actions )
endfunction

//===========================================================================
// Trigger: OilReturnForBuildings05
//===========================================================================
function Trig_OilReturnForBuildings05_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetTriggerUnit()) == 'o613' ) ) then
        return false
    endif
    return true
endfunction

function Trig_OilReturnForBuildings05_Actions takes nothing returns nothing
    call playerAddOil(Player(0), 500)
endfunction

//===========================================================================
function InitTrig_OilReturnForBuildings05 takes nothing returns nothing
    set gg_trg_OilReturnForBuildings05 = CreateTrigger(  )
    call TriggerRegisterPlayerUnitEventSimple( gg_trg_OilReturnForBuildings05, Player(0), EVENT_PLAYER_UNIT_UPGRADE_CANCEL )
    call TriggerAddCondition( gg_trg_OilReturnForBuildings05, Condition( function Trig_OilReturnForBuildings05_Conditions ) )
    call TriggerAddAction( gg_trg_OilReturnForBuildings05, function Trig_OilReturnForBuildings05_Actions )
endfunction

//===========================================================================
// Trigger: OilUIHide
//===========================================================================
function Trig_OilUIHide_Actions takes nothing returns nothing
    call OilHarvest_setUIVisible(false)
endfunction

//===========================================================================
function InitTrig_OilUIHide takes nothing returns nothing
    set gg_trg_OilUIHide = CreateTrigger(  )
    call TriggerAddAction( gg_trg_OilUIHide, function Trig_OilUIHide_Actions )
endfunction

//===========================================================================
// Trigger: OilUIShow
//===========================================================================
function Trig_OilUIShow_Actions takes nothing returns nothing
    call OilHarvest_setUIVisible(true)
endfunction

//===========================================================================
function InitTrig_OilUIShow takes nothing returns nothing
    set gg_trg_OilUIShow = CreateTrigger(  )
    call TriggerAddAction( gg_trg_OilUIShow, function Trig_OilUIShow_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod01On
//===========================================================================
function Trig_VisibilityMod01On_Func001C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_Player01 ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return true
    endif
    return false
endfunction

function Trig_VisibilityMod01On_Conditions takes nothing returns boolean
    if ( not Trig_VisibilityMod01On_Func001C() ) then
        return false
    endif
    if ( not ( udg_VisibilityModOn[1] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod01On_Actions takes nothing returns nothing
    set udg_VisibilityModOn[1] = true
    call UnitShareVisionBJ( true, gg_unit_h006_0288, Player(0) )
    call EnableTrigger( gg_trg_VisibilityMod01Off )
endfunction

//===========================================================================
function InitTrig_VisibilityMod01On takes nothing returns nothing
    set gg_trg_VisibilityMod01On = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_VisibilityMod01On, gg_rct_VisibilityMod01 )
    call TriggerAddCondition( gg_trg_VisibilityMod01On, Condition( function Trig_VisibilityMod01On_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod01On, function Trig_VisibilityMod01On_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod01Off
//===========================================================================
function Trig_VisibilityMod01Off_Func002001001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_VisibilityMod01Off_Func002001001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_Player01 )
endfunction

function Trig_VisibilityMod01Off_Func002001001002002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_PlayerTribeWarriors )
endfunction

function Trig_VisibilityMod01Off_Func002001001002002 takes nothing returns boolean
    return GetBooleanOr( Trig_VisibilityMod01Off_Func002001001002002001(), Trig_VisibilityMod01Off_Func002001001002002002() )
endfunction

function Trig_VisibilityMod01Off_Func002001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_VisibilityMod01Off_Func002001001002001(), Trig_VisibilityMod01Off_Func002001001002002() )
endfunction

function Trig_VisibilityMod01Off_Conditions takes nothing returns boolean
    if ( not ( udg_VisibilityModOn[1] == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsInRectMatching(gg_rct_VisibilityMod01, Condition(function Trig_VisibilityMod01Off_Func002001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod01Off_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_VisibilityModOn[1] = false
    call UnitShareVisionBJ( false, gg_unit_h006_0288, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod01Off takes nothing returns nothing
    set gg_trg_VisibilityMod01Off = CreateTrigger(  )
    call DisableTrigger( gg_trg_VisibilityMod01Off )
    call TriggerRegisterTimerEventPeriodic( gg_trg_VisibilityMod01Off, 2 )
    call TriggerAddCondition( gg_trg_VisibilityMod01Off, Condition( function Trig_VisibilityMod01Off_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod01Off, function Trig_VisibilityMod01Off_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod02On
//===========================================================================
function Trig_VisibilityMod02On_Func001C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_Player01 ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return true
    endif
    return false
endfunction

function Trig_VisibilityMod02On_Conditions takes nothing returns boolean
    if ( not Trig_VisibilityMod02On_Func001C() ) then
        return false
    endif
    if ( not ( udg_VisibilityModOn[2] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod02On_Actions takes nothing returns nothing
    set udg_VisibilityModOn[2] = true
    call UnitShareVisionBJ( true, gg_unit_h006_0289, Player(0) )
    call EnableTrigger( gg_trg_VisibilityMod02Off )
endfunction

//===========================================================================
function InitTrig_VisibilityMod02On takes nothing returns nothing
    set gg_trg_VisibilityMod02On = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_VisibilityMod02On, gg_rct_VisibilityMod02 )
    call TriggerAddCondition( gg_trg_VisibilityMod02On, Condition( function Trig_VisibilityMod02On_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod02On, function Trig_VisibilityMod02On_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod02Off
//===========================================================================
function Trig_VisibilityMod02Off_Func006001001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_VisibilityMod02Off_Func006001001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_Player01 )
endfunction

function Trig_VisibilityMod02Off_Func006001001002002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_PlayerTribeWarriors )
endfunction

function Trig_VisibilityMod02Off_Func006001001002002 takes nothing returns boolean
    return GetBooleanOr( Trig_VisibilityMod02Off_Func006001001002002001(), Trig_VisibilityMod02Off_Func006001001002002002() )
endfunction

function Trig_VisibilityMod02Off_Func006001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_VisibilityMod02Off_Func006001001002001(), Trig_VisibilityMod02Off_Func006001001002002() )
endfunction

function Trig_VisibilityMod02Off_Conditions takes nothing returns boolean
    if ( not ( udg_VisibilityModOn[2] == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsInRectMatching(gg_rct_VisibilityMod02, Condition(function Trig_VisibilityMod02Off_Func006001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod02Off_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_VisibilityModOn[2] = false
    call UnitShareVisionBJ( false, gg_unit_h006_0289, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod02Off takes nothing returns nothing
    set gg_trg_VisibilityMod02Off = CreateTrigger(  )
    call DisableTrigger( gg_trg_VisibilityMod02Off )
    call TriggerRegisterTimerEventPeriodic( gg_trg_VisibilityMod02Off, 2 )
    call TriggerAddCondition( gg_trg_VisibilityMod02Off, Condition( function Trig_VisibilityMod02Off_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod02Off, function Trig_VisibilityMod02Off_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod03On
//===========================================================================
function Trig_VisibilityMod03On_Func001C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_Player01 ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return true
    endif
    return false
endfunction

function Trig_VisibilityMod03On_Conditions takes nothing returns boolean
    if ( not Trig_VisibilityMod03On_Func001C() ) then
        return false
    endif
    if ( not ( udg_VisibilityModOn[3] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod03On_Actions takes nothing returns nothing
    set udg_VisibilityModOn[3] = true
    call EnableTrigger( gg_trg_VisibilityMod03Off )
    call UnitShareVisionBJ( true, gg_unit_h006_0291, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod03On takes nothing returns nothing
    set gg_trg_VisibilityMod03On = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_VisibilityMod03On, gg_rct_VisibilityMod03 )
    call TriggerAddCondition( gg_trg_VisibilityMod03On, Condition( function Trig_VisibilityMod03On_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod03On, function Trig_VisibilityMod03On_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod03Off
//===========================================================================
function Trig_VisibilityMod03Off_Func006001001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_VisibilityMod03Off_Func006001001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_Player01 )
endfunction

function Trig_VisibilityMod03Off_Func006001001002002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_PlayerTribeWarriors )
endfunction

function Trig_VisibilityMod03Off_Func006001001002002 takes nothing returns boolean
    return GetBooleanOr( Trig_VisibilityMod03Off_Func006001001002002001(), Trig_VisibilityMod03Off_Func006001001002002002() )
endfunction

function Trig_VisibilityMod03Off_Func006001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_VisibilityMod03Off_Func006001001002001(), Trig_VisibilityMod03Off_Func006001001002002() )
endfunction

function Trig_VisibilityMod03Off_Conditions takes nothing returns boolean
    if ( not ( udg_VisibilityModOn[3] == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsInRectMatching(gg_rct_VisibilityMod03, Condition(function Trig_VisibilityMod03Off_Func006001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod03Off_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_VisibilityModOn[3] = false
    call UnitShareVisionBJ( false, gg_unit_h006_0291, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod03Off takes nothing returns nothing
    set gg_trg_VisibilityMod03Off = CreateTrigger(  )
    call DisableTrigger( gg_trg_VisibilityMod03Off )
    call TriggerRegisterTimerEventPeriodic( gg_trg_VisibilityMod03Off, 2 )
    call TriggerAddCondition( gg_trg_VisibilityMod03Off, Condition( function Trig_VisibilityMod03Off_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod03Off, function Trig_VisibilityMod03Off_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod04On
//===========================================================================
function Trig_VisibilityMod04On_Func001C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_Player01 ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return true
    endif
    return false
endfunction

function Trig_VisibilityMod04On_Conditions takes nothing returns boolean
    if ( not Trig_VisibilityMod04On_Func001C() ) then
        return false
    endif
    if ( not ( udg_VisibilityModOn[4] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod04On_Actions takes nothing returns nothing
    set udg_VisibilityModOn[4] = true
    call EnableTrigger( gg_trg_VisibilityMod04Off )
    call UnitShareVisionBJ( true, gg_unit_h006_0294, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod04On takes nothing returns nothing
    set gg_trg_VisibilityMod04On = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_VisibilityMod04On, gg_rct_VisibilityMod04 )
    call TriggerAddCondition( gg_trg_VisibilityMod04On, Condition( function Trig_VisibilityMod04On_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod04On, function Trig_VisibilityMod04On_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod04Off
//===========================================================================
function Trig_VisibilityMod04Off_Func006001001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_VisibilityMod04Off_Func006001001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_Player01 )
endfunction

function Trig_VisibilityMod04Off_Func006001001002002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_PlayerTribeWarriors )
endfunction

function Trig_VisibilityMod04Off_Func006001001002002 takes nothing returns boolean
    return GetBooleanOr( Trig_VisibilityMod04Off_Func006001001002002001(), Trig_VisibilityMod04Off_Func006001001002002002() )
endfunction

function Trig_VisibilityMod04Off_Func006001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_VisibilityMod04Off_Func006001001002001(), Trig_VisibilityMod04Off_Func006001001002002() )
endfunction

function Trig_VisibilityMod04Off_Conditions takes nothing returns boolean
    if ( not ( udg_VisibilityModOn[4] == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsInRectMatching(gg_rct_VisibilityMod04, Condition(function Trig_VisibilityMod04Off_Func006001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod04Off_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_VisibilityModOn[4] = false
    call UnitShareVisionBJ( false, gg_unit_h006_0294, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod04Off takes nothing returns nothing
    set gg_trg_VisibilityMod04Off = CreateTrigger(  )
    call DisableTrigger( gg_trg_VisibilityMod04Off )
    call TriggerRegisterTimerEventPeriodic( gg_trg_VisibilityMod04Off, 2 )
    call TriggerAddCondition( gg_trg_VisibilityMod04Off, Condition( function Trig_VisibilityMod04Off_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod04Off, function Trig_VisibilityMod04Off_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod05On
//===========================================================================
function Trig_VisibilityMod05On_Func001C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_Player01 ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return true
    endif
    return false
endfunction

function Trig_VisibilityMod05On_Conditions takes nothing returns boolean
    if ( not Trig_VisibilityMod05On_Func001C() ) then
        return false
    endif
    if ( not ( udg_VisibilityModOn[5] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod05On_Actions takes nothing returns nothing
    set udg_VisibilityModOn[5] = true
    call EnableTrigger( gg_trg_VisibilityMod05Off )
    call UnitShareVisionBJ( true, gg_unit_h006_0297, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod05On takes nothing returns nothing
    set gg_trg_VisibilityMod05On = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_VisibilityMod05On, gg_rct_VisibilityMod05 )
    call TriggerAddCondition( gg_trg_VisibilityMod05On, Condition( function Trig_VisibilityMod05On_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod05On, function Trig_VisibilityMod05On_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod05Off
//===========================================================================
function Trig_VisibilityMod05Off_Func006001001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_VisibilityMod05Off_Func006001001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_Player01 )
endfunction

function Trig_VisibilityMod05Off_Func006001001002002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_PlayerTribeWarriors )
endfunction

function Trig_VisibilityMod05Off_Func006001001002002 takes nothing returns boolean
    return GetBooleanOr( Trig_VisibilityMod05Off_Func006001001002002001(), Trig_VisibilityMod05Off_Func006001001002002002() )
endfunction

function Trig_VisibilityMod05Off_Func006001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_VisibilityMod05Off_Func006001001002001(), Trig_VisibilityMod05Off_Func006001001002002() )
endfunction

function Trig_VisibilityMod05Off_Conditions takes nothing returns boolean
    if ( not ( udg_VisibilityModOn[5] == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsInRectMatching(gg_rct_VisibilityMod05, Condition(function Trig_VisibilityMod05Off_Func006001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod05Off_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_VisibilityModOn[5] = false
    call UnitShareVisionBJ( false, gg_unit_h006_0297, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod05Off takes nothing returns nothing
    set gg_trg_VisibilityMod05Off = CreateTrigger(  )
    call DisableTrigger( gg_trg_VisibilityMod05Off )
    call TriggerRegisterTimerEventPeriodic( gg_trg_VisibilityMod05Off, 2 )
    call TriggerAddCondition( gg_trg_VisibilityMod05Off, Condition( function Trig_VisibilityMod05Off_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod05Off, function Trig_VisibilityMod05Off_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod06On
//===========================================================================
function Trig_VisibilityMod06On_Func001C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_Player01 ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return true
    endif
    return false
endfunction

function Trig_VisibilityMod06On_Conditions takes nothing returns boolean
    if ( not Trig_VisibilityMod06On_Func001C() ) then
        return false
    endif
    if ( not ( udg_VisibilityModOn[6] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod06On_Actions takes nothing returns nothing
    set udg_VisibilityModOn[6] = true
    call EnableTrigger( gg_trg_VisibilityMod06Off )
    call UnitShareVisionBJ( true, gg_unit_h006_0298, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod06On takes nothing returns nothing
    set gg_trg_VisibilityMod06On = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_VisibilityMod06On, gg_rct_VisibilityMod06 )
    call TriggerAddCondition( gg_trg_VisibilityMod06On, Condition( function Trig_VisibilityMod06On_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod06On, function Trig_VisibilityMod06On_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod06Off
//===========================================================================
function Trig_VisibilityMod06Off_Func006001001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_VisibilityMod06Off_Func006001001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_Player01 )
endfunction

function Trig_VisibilityMod06Off_Func006001001002002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_PlayerTribeWarriors )
endfunction

function Trig_VisibilityMod06Off_Func006001001002002 takes nothing returns boolean
    return GetBooleanOr( Trig_VisibilityMod06Off_Func006001001002002001(), Trig_VisibilityMod06Off_Func006001001002002002() )
endfunction

function Trig_VisibilityMod06Off_Func006001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_VisibilityMod06Off_Func006001001002001(), Trig_VisibilityMod06Off_Func006001001002002() )
endfunction

function Trig_VisibilityMod06Off_Conditions takes nothing returns boolean
    if ( not ( udg_VisibilityModOn[6] == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsInRectMatching(gg_rct_VisibilityMod06, Condition(function Trig_VisibilityMod06Off_Func006001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod06Off_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_VisibilityModOn[6] = false
    call UnitShareVisionBJ( false, gg_unit_h006_0298, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod06Off takes nothing returns nothing
    set gg_trg_VisibilityMod06Off = CreateTrigger(  )
    call DisableTrigger( gg_trg_VisibilityMod06Off )
    call TriggerRegisterTimerEventPeriodic( gg_trg_VisibilityMod06Off, 2 )
    call TriggerAddCondition( gg_trg_VisibilityMod06Off, Condition( function Trig_VisibilityMod06Off_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod06Off, function Trig_VisibilityMod06Off_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod07On
//===========================================================================
function Trig_VisibilityMod07On_Func001C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_Player01 ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return true
    endif
    return false
endfunction

function Trig_VisibilityMod07On_Conditions takes nothing returns boolean
    if ( not Trig_VisibilityMod07On_Func001C() ) then
        return false
    endif
    if ( not ( udg_VisibilityModOn[7] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod07On_Actions takes nothing returns nothing
    set udg_VisibilityModOn[7] = true
    call EnableTrigger( gg_trg_VisibilityMod07Off )
    call UnitShareVisionBJ( true, gg_unit_h006_0299, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod07On takes nothing returns nothing
    set gg_trg_VisibilityMod07On = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_VisibilityMod07On, gg_rct_VisibilityMod07 )
    call TriggerAddCondition( gg_trg_VisibilityMod07On, Condition( function Trig_VisibilityMod07On_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod07On, function Trig_VisibilityMod07On_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod07Off
//===========================================================================
function Trig_VisibilityMod07Off_Func006001001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_VisibilityMod07Off_Func006001001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_Player01 )
endfunction

function Trig_VisibilityMod07Off_Func006001001002002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_PlayerTribeWarriors )
endfunction

function Trig_VisibilityMod07Off_Func006001001002002 takes nothing returns boolean
    return GetBooleanOr( Trig_VisibilityMod07Off_Func006001001002002001(), Trig_VisibilityMod07Off_Func006001001002002002() )
endfunction

function Trig_VisibilityMod07Off_Func006001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_VisibilityMod07Off_Func006001001002001(), Trig_VisibilityMod07Off_Func006001001002002() )
endfunction

function Trig_VisibilityMod07Off_Conditions takes nothing returns boolean
    if ( not ( udg_VisibilityModOn[7] == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsInRectMatching(gg_rct_VisibilityMod07, Condition(function Trig_VisibilityMod07Off_Func006001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod07Off_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_VisibilityModOn[7] = false
    call UnitShareVisionBJ( false, gg_unit_h006_0299, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod07Off takes nothing returns nothing
    set gg_trg_VisibilityMod07Off = CreateTrigger(  )
    call DisableTrigger( gg_trg_VisibilityMod07Off )
    call TriggerRegisterTimerEventPeriodic( gg_trg_VisibilityMod07Off, 2 )
    call TriggerAddCondition( gg_trg_VisibilityMod07Off, Condition( function Trig_VisibilityMod07Off_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod07Off, function Trig_VisibilityMod07Off_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod08On
//===========================================================================
function Trig_VisibilityMod08On_Func001C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_Player01 ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return true
    endif
    return false
endfunction

function Trig_VisibilityMod08On_Conditions takes nothing returns boolean
    if ( not Trig_VisibilityMod08On_Func001C() ) then
        return false
    endif
    if ( not ( udg_VisibilityModOn[8] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod08On_Actions takes nothing returns nothing
    set udg_VisibilityModOn[8] = true
    call EnableTrigger( gg_trg_VisibilityMod08Off )
    call UnitShareVisionBJ( true, gg_unit_h006_0300, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod08On takes nothing returns nothing
    set gg_trg_VisibilityMod08On = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_VisibilityMod08On, gg_rct_VisibilityMod08 )
    call TriggerAddCondition( gg_trg_VisibilityMod08On, Condition( function Trig_VisibilityMod08On_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod08On, function Trig_VisibilityMod08On_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod08Off
//===========================================================================
function Trig_VisibilityMod08Off_Func006001001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_VisibilityMod08Off_Func006001001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_Player01 )
endfunction

function Trig_VisibilityMod08Off_Func006001001002002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_PlayerTribeWarriors )
endfunction

function Trig_VisibilityMod08Off_Func006001001002002 takes nothing returns boolean
    return GetBooleanOr( Trig_VisibilityMod08Off_Func006001001002002001(), Trig_VisibilityMod08Off_Func006001001002002002() )
endfunction

function Trig_VisibilityMod08Off_Func006001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_VisibilityMod08Off_Func006001001002001(), Trig_VisibilityMod08Off_Func006001001002002() )
endfunction

function Trig_VisibilityMod08Off_Conditions takes nothing returns boolean
    if ( not ( udg_VisibilityModOn[8] == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsInRectMatching(gg_rct_VisibilityMod08, Condition(function Trig_VisibilityMod08Off_Func006001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod08Off_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_VisibilityModOn[8] = false
    call UnitShareVisionBJ( false, gg_unit_h006_0300, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod08Off takes nothing returns nothing
    set gg_trg_VisibilityMod08Off = CreateTrigger(  )
    call DisableTrigger( gg_trg_VisibilityMod08Off )
    call TriggerRegisterTimerEventPeriodic( gg_trg_VisibilityMod08Off, 2 )
    call TriggerAddCondition( gg_trg_VisibilityMod08Off, Condition( function Trig_VisibilityMod08Off_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod08Off, function Trig_VisibilityMod08Off_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod09On
//===========================================================================
function Trig_VisibilityMod09On_Func001C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_Player01 ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return true
    endif
    return false
endfunction

function Trig_VisibilityMod09On_Conditions takes nothing returns boolean
    if ( not Trig_VisibilityMod09On_Func001C() ) then
        return false
    endif
    if ( not ( udg_VisibilityModOn[9] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod09On_Actions takes nothing returns nothing
    set udg_VisibilityModOn[9] = true
    call EnableTrigger( gg_trg_VisibilityMod09Off )
    call UnitShareVisionBJ( true, gg_unit_h006_0302, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod09On takes nothing returns nothing
    set gg_trg_VisibilityMod09On = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_VisibilityMod09On, gg_rct_VisibilityMod09 )
    call TriggerAddCondition( gg_trg_VisibilityMod09On, Condition( function Trig_VisibilityMod09On_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod09On, function Trig_VisibilityMod09On_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod09Off
//===========================================================================
function Trig_VisibilityMod09Off_Func006001001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_VisibilityMod09Off_Func006001001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_Player01 )
endfunction

function Trig_VisibilityMod09Off_Func006001001002002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_PlayerTribeWarriors )
endfunction

function Trig_VisibilityMod09Off_Func006001001002002 takes nothing returns boolean
    return GetBooleanOr( Trig_VisibilityMod09Off_Func006001001002002001(), Trig_VisibilityMod09Off_Func006001001002002002() )
endfunction

function Trig_VisibilityMod09Off_Func006001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_VisibilityMod09Off_Func006001001002001(), Trig_VisibilityMod09Off_Func006001001002002() )
endfunction

function Trig_VisibilityMod09Off_Conditions takes nothing returns boolean
    if ( not ( udg_VisibilityModOn[9] == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsInRectMatching(gg_rct_VisibilityMod09, Condition(function Trig_VisibilityMod09Off_Func006001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod09Off_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_VisibilityModOn[9] = false
    call UnitShareVisionBJ( false, gg_unit_h006_0302, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod09Off takes nothing returns nothing
    set gg_trg_VisibilityMod09Off = CreateTrigger(  )
    call DisableTrigger( gg_trg_VisibilityMod09Off )
    call TriggerRegisterTimerEventPeriodic( gg_trg_VisibilityMod09Off, 2 )
    call TriggerAddCondition( gg_trg_VisibilityMod09Off, Condition( function Trig_VisibilityMod09Off_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod09Off, function Trig_VisibilityMod09Off_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod10On
//===========================================================================
function Trig_VisibilityMod10On_Func001C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_Player01 ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return true
    endif
    return false
endfunction

function Trig_VisibilityMod10On_Conditions takes nothing returns boolean
    if ( not Trig_VisibilityMod10On_Func001C() ) then
        return false
    endif
    if ( not ( udg_VisibilityModOn[10] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod10On_Actions takes nothing returns nothing
    set udg_VisibilityModOn[10] = true
    call EnableTrigger( gg_trg_VisibilityMod10Off )
    call UnitShareVisionBJ( true, gg_unit_h006_0305, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod10On takes nothing returns nothing
    set gg_trg_VisibilityMod10On = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_VisibilityMod10On, gg_rct_VisibilityMod10 )
    call TriggerAddCondition( gg_trg_VisibilityMod10On, Condition( function Trig_VisibilityMod10On_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod10On, function Trig_VisibilityMod10On_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod10Off
//===========================================================================
function Trig_VisibilityMod10Off_Func006001001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_VisibilityMod10Off_Func006001001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_Player01 )
endfunction

function Trig_VisibilityMod10Off_Func006001001002002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_PlayerTribeWarriors )
endfunction

function Trig_VisibilityMod10Off_Func006001001002002 takes nothing returns boolean
    return GetBooleanOr( Trig_VisibilityMod10Off_Func006001001002002001(), Trig_VisibilityMod10Off_Func006001001002002002() )
endfunction

function Trig_VisibilityMod10Off_Func006001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_VisibilityMod10Off_Func006001001002001(), Trig_VisibilityMod10Off_Func006001001002002() )
endfunction

function Trig_VisibilityMod10Off_Conditions takes nothing returns boolean
    if ( not ( udg_VisibilityModOn[10] == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsInRectMatching(gg_rct_VisibilityMod10, Condition(function Trig_VisibilityMod10Off_Func006001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod10Off_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_VisibilityModOn[10] = false
    call UnitShareVisionBJ( false, gg_unit_h006_0305, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod10Off takes nothing returns nothing
    set gg_trg_VisibilityMod10Off = CreateTrigger(  )
    call DisableTrigger( gg_trg_VisibilityMod10Off )
    call TriggerRegisterTimerEventPeriodic( gg_trg_VisibilityMod10Off, 2 )
    call TriggerAddCondition( gg_trg_VisibilityMod10Off, Condition( function Trig_VisibilityMod10Off_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod10Off, function Trig_VisibilityMod10Off_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod11On
//===========================================================================
function Trig_VisibilityMod11On_Func001C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_Player01 ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return true
    endif
    return false
endfunction

function Trig_VisibilityMod11On_Conditions takes nothing returns boolean
    if ( not Trig_VisibilityMod11On_Func001C() ) then
        return false
    endif
    if ( not ( udg_VisibilityModOn[11] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod11On_Actions takes nothing returns nothing
    set udg_VisibilityModOn[11] = true
    call EnableTrigger( gg_trg_VisibilityMod11Off )
    call UnitShareVisionBJ( true, gg_unit_h006_0313, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod11On takes nothing returns nothing
    set gg_trg_VisibilityMod11On = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_VisibilityMod11On, gg_rct_VisibilityMod11 )
    call TriggerAddCondition( gg_trg_VisibilityMod11On, Condition( function Trig_VisibilityMod11On_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod11On, function Trig_VisibilityMod11On_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod11Off
//===========================================================================
function Trig_VisibilityMod11Off_Func006001001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_VisibilityMod11Off_Func006001001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_Player01 )
endfunction

function Trig_VisibilityMod11Off_Func006001001002002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_PlayerTribeWarriors )
endfunction

function Trig_VisibilityMod11Off_Func006001001002002 takes nothing returns boolean
    return GetBooleanOr( Trig_VisibilityMod11Off_Func006001001002002001(), Trig_VisibilityMod11Off_Func006001001002002002() )
endfunction

function Trig_VisibilityMod11Off_Func006001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_VisibilityMod11Off_Func006001001002001(), Trig_VisibilityMod11Off_Func006001001002002() )
endfunction

function Trig_VisibilityMod11Off_Conditions takes nothing returns boolean
    if ( not ( udg_VisibilityModOn[11] == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsInRectMatching(gg_rct_VisibilityMod11, Condition(function Trig_VisibilityMod11Off_Func006001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod11Off_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_VisibilityModOn[11] = false
    call UnitShareVisionBJ( false, gg_unit_h006_0313, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod11Off takes nothing returns nothing
    set gg_trg_VisibilityMod11Off = CreateTrigger(  )
    call DisableTrigger( gg_trg_VisibilityMod11Off )
    call TriggerRegisterTimerEventPeriodic( gg_trg_VisibilityMod11Off, 2 )
    call TriggerAddCondition( gg_trg_VisibilityMod11Off, Condition( function Trig_VisibilityMod11Off_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod11Off, function Trig_VisibilityMod11Off_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod12On
//===========================================================================
function Trig_VisibilityMod12On_Func001C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_Player01 ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return true
    endif
    return false
endfunction

function Trig_VisibilityMod12On_Conditions takes nothing returns boolean
    if ( not Trig_VisibilityMod12On_Func001C() ) then
        return false
    endif
    if ( not ( udg_VisibilityModOn[12] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod12On_Actions takes nothing returns nothing
    set udg_VisibilityModOn[12] = true
    call EnableTrigger( gg_trg_VisibilityMod12Off )
    call UnitShareVisionBJ( true, gg_unit_o61I_0074, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod12On takes nothing returns nothing
    set gg_trg_VisibilityMod12On = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_VisibilityMod12On, gg_rct_VisibilityMod12 )
    call TriggerAddCondition( gg_trg_VisibilityMod12On, Condition( function Trig_VisibilityMod12On_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod12On, function Trig_VisibilityMod12On_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod12Off
//===========================================================================
function Trig_VisibilityMod12Off_Func006001001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_VisibilityMod12Off_Func006001001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_Player01 )
endfunction

function Trig_VisibilityMod12Off_Func006001001002002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_PlayerTribeWarriors )
endfunction

function Trig_VisibilityMod12Off_Func006001001002002 takes nothing returns boolean
    return GetBooleanOr( Trig_VisibilityMod12Off_Func006001001002002001(), Trig_VisibilityMod12Off_Func006001001002002002() )
endfunction

function Trig_VisibilityMod12Off_Func006001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_VisibilityMod12Off_Func006001001002001(), Trig_VisibilityMod12Off_Func006001001002002() )
endfunction

function Trig_VisibilityMod12Off_Conditions takes nothing returns boolean
    if ( not ( udg_VisibilityModOn[12] == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsInRectMatching(gg_rct_VisibilityMod12, Condition(function Trig_VisibilityMod12Off_Func006001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod12Off_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_VisibilityModOn[12] = false
    call UnitShareVisionBJ( false, gg_unit_o61I_0074, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod12Off takes nothing returns nothing
    set gg_trg_VisibilityMod12Off = CreateTrigger(  )
    call DisableTrigger( gg_trg_VisibilityMod12Off )
    call TriggerRegisterTimerEventPeriodic( gg_trg_VisibilityMod12Off, 2 )
    call TriggerAddCondition( gg_trg_VisibilityMod12Off, Condition( function Trig_VisibilityMod12Off_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod12Off, function Trig_VisibilityMod12Off_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod13On
//===========================================================================
function Trig_VisibilityMod13On_Func001C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_Player01 ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return true
    endif
    return false
endfunction

function Trig_VisibilityMod13On_Conditions takes nothing returns boolean
    if ( not Trig_VisibilityMod13On_Func001C() ) then
        return false
    endif
    if ( not ( udg_VisibilityModOn[13] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod13On_Actions takes nothing returns nothing
    set udg_VisibilityModOn[13] = true
    call EnableTrigger( gg_trg_VisibilityMod13Off )
    call UnitShareVisionBJ( true, gg_unit_h006_0315, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod13On takes nothing returns nothing
    set gg_trg_VisibilityMod13On = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_VisibilityMod13On, gg_rct_VisibilityMod13 )
    call TriggerAddCondition( gg_trg_VisibilityMod13On, Condition( function Trig_VisibilityMod13On_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod13On, function Trig_VisibilityMod13On_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod13Off
//===========================================================================
function Trig_VisibilityMod13Off_Func006001001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_VisibilityMod13Off_Func006001001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_Player01 )
endfunction

function Trig_VisibilityMod13Off_Func006001001002002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_PlayerTribeWarriors )
endfunction

function Trig_VisibilityMod13Off_Func006001001002002 takes nothing returns boolean
    return GetBooleanOr( Trig_VisibilityMod13Off_Func006001001002002001(), Trig_VisibilityMod13Off_Func006001001002002002() )
endfunction

function Trig_VisibilityMod13Off_Func006001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_VisibilityMod13Off_Func006001001002001(), Trig_VisibilityMod13Off_Func006001001002002() )
endfunction

function Trig_VisibilityMod13Off_Conditions takes nothing returns boolean
    if ( not ( udg_VisibilityModOn[13] == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsInRectMatching(gg_rct_VisibilityMod13, Condition(function Trig_VisibilityMod13Off_Func006001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod13Off_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_VisibilityModOn[13] = false
    call UnitShareVisionBJ( false, gg_unit_h006_0315, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod13Off takes nothing returns nothing
    set gg_trg_VisibilityMod13Off = CreateTrigger(  )
    call DisableTrigger( gg_trg_VisibilityMod13Off )
    call TriggerRegisterTimerEventPeriodic( gg_trg_VisibilityMod13Off, 2 )
    call TriggerAddCondition( gg_trg_VisibilityMod13Off, Condition( function Trig_VisibilityMod13Off_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod13Off, function Trig_VisibilityMod13Off_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod14On
//===========================================================================
function Trig_VisibilityMod14On_Func001C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_Player01 ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return true
    endif
    return false
endfunction

function Trig_VisibilityMod14On_Conditions takes nothing returns boolean
    if ( not Trig_VisibilityMod14On_Func001C() ) then
        return false
    endif
    if ( not ( udg_VisibilityModOn[14] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod14On_Actions takes nothing returns nothing
    set udg_VisibilityModOn[14] = true
    call EnableTrigger( gg_trg_VisibilityMod14Off )
    call UnitShareVisionBJ( true, gg_unit_h006_0363, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod14On takes nothing returns nothing
    set gg_trg_VisibilityMod14On = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_VisibilityMod14On, gg_rct_PlayerRelocateNoA )
    call TriggerAddCondition( gg_trg_VisibilityMod14On, Condition( function Trig_VisibilityMod14On_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod14On, function Trig_VisibilityMod14On_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod14Off
//===========================================================================
function Trig_VisibilityMod14Off_Func006001001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_VisibilityMod14Off_Func006001001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_Player01 )
endfunction

function Trig_VisibilityMod14Off_Func006001001002002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_PlayerTribeWarriors )
endfunction

function Trig_VisibilityMod14Off_Func006001001002002 takes nothing returns boolean
    return GetBooleanOr( Trig_VisibilityMod14Off_Func006001001002002001(), Trig_VisibilityMod14Off_Func006001001002002002() )
endfunction

function Trig_VisibilityMod14Off_Func006001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_VisibilityMod14Off_Func006001001002001(), Trig_VisibilityMod14Off_Func006001001002002() )
endfunction

function Trig_VisibilityMod14Off_Conditions takes nothing returns boolean
    if ( not ( udg_VisibilityModOn[14] == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsInRectMatching(gg_rct_PlayerRelocateNoA, Condition(function Trig_VisibilityMod14Off_Func006001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod14Off_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_VisibilityModOn[14] = false
    call UnitShareVisionBJ( false, gg_unit_h006_0363, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod14Off takes nothing returns nothing
    set gg_trg_VisibilityMod14Off = CreateTrigger(  )
    call DisableTrigger( gg_trg_VisibilityMod14Off )
    call TriggerRegisterTimerEventPeriodic( gg_trg_VisibilityMod14Off, 2 )
    call TriggerAddCondition( gg_trg_VisibilityMod14Off, Condition( function Trig_VisibilityMod14Off_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod14Off, function Trig_VisibilityMod14Off_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod15On
//===========================================================================
function Trig_VisibilityMod15On_Func001C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_Player01 ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return true
    endif
    return false
endfunction

function Trig_VisibilityMod15On_Conditions takes nothing returns boolean
    if ( not Trig_VisibilityMod15On_Func001C() ) then
        return false
    endif
    if ( not ( udg_VisibilityModOn[15] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod15On_Actions takes nothing returns nothing
    set udg_VisibilityModOn[15] = true
    call EnableTrigger( gg_trg_VisibilityMod15Off )
    call UnitShareVisionBJ( true, gg_unit_h006_0343, Player(0) )
    call UnitShareVisionBJ( true, gg_unit_h006_0344, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod15On takes nothing returns nothing
    set gg_trg_VisibilityMod15On = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_VisibilityMod15On, gg_rct_SnowedTrees07 )
    call TriggerAddCondition( gg_trg_VisibilityMod15On, Condition( function Trig_VisibilityMod15On_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod15On, function Trig_VisibilityMod15On_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod15Off
//===========================================================================
function Trig_VisibilityMod15Off_Func007001001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_VisibilityMod15Off_Func007001001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_Player01 )
endfunction

function Trig_VisibilityMod15Off_Func007001001002002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_PlayerTribeWarriors )
endfunction

function Trig_VisibilityMod15Off_Func007001001002002 takes nothing returns boolean
    return GetBooleanOr( Trig_VisibilityMod15Off_Func007001001002002001(), Trig_VisibilityMod15Off_Func007001001002002002() )
endfunction

function Trig_VisibilityMod15Off_Func007001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_VisibilityMod15Off_Func007001001002001(), Trig_VisibilityMod15Off_Func007001001002002() )
endfunction

function Trig_VisibilityMod15Off_Conditions takes nothing returns boolean
    if ( not ( udg_VisibilityModOn[15] == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsInRectMatching(gg_rct_SnowedTrees07, Condition(function Trig_VisibilityMod15Off_Func007001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod15Off_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_VisibilityModOn[15] = false
    call UnitShareVisionBJ( false, gg_unit_h006_0343, Player(0) )
    call UnitShareVisionBJ( false, gg_unit_h006_0344, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod15Off takes nothing returns nothing
    set gg_trg_VisibilityMod15Off = CreateTrigger(  )
    call DisableTrigger( gg_trg_VisibilityMod15Off )
    call TriggerRegisterTimerEventPeriodic( gg_trg_VisibilityMod15Off, 2 )
    call TriggerAddCondition( gg_trg_VisibilityMod15Off, Condition( function Trig_VisibilityMod15Off_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod15Off, function Trig_VisibilityMod15Off_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod16On
//===========================================================================
function Trig_VisibilityMod16On_Func001C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_Player01 ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return true
    endif
    return false
endfunction

function Trig_VisibilityMod16On_Conditions takes nothing returns boolean
    if ( not Trig_VisibilityMod16On_Func001C() ) then
        return false
    endif
    if ( not ( udg_VisibilityModOn[16] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod16On_Actions takes nothing returns nothing
    set udg_VisibilityModOn[16] = true
    call EnableTrigger( gg_trg_VisibilityMod16Off )
    call UnitShareVisionBJ( true, gg_unit_h006_0330, Player(0) )
    call UnitShareVisionBJ( true, gg_unit_h006_0341, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod16On takes nothing returns nothing
    set gg_trg_VisibilityMod16On = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_VisibilityMod16On, gg_rct_WaterSounds01 )
    call TriggerAddCondition( gg_trg_VisibilityMod16On, Condition( function Trig_VisibilityMod16On_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod16On, function Trig_VisibilityMod16On_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod16Off
//===========================================================================
function Trig_VisibilityMod16Off_Func007001001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_VisibilityMod16Off_Func007001001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_Player01 )
endfunction

function Trig_VisibilityMod16Off_Func007001001002002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_PlayerTribeWarriors )
endfunction

function Trig_VisibilityMod16Off_Func007001001002002 takes nothing returns boolean
    return GetBooleanOr( Trig_VisibilityMod16Off_Func007001001002002001(), Trig_VisibilityMod16Off_Func007001001002002002() )
endfunction

function Trig_VisibilityMod16Off_Func007001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_VisibilityMod16Off_Func007001001002001(), Trig_VisibilityMod16Off_Func007001001002002() )
endfunction

function Trig_VisibilityMod16Off_Conditions takes nothing returns boolean
    if ( not ( udg_VisibilityModOn[16] == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsInRectMatching(gg_rct_WaterSounds01, Condition(function Trig_VisibilityMod16Off_Func007001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod16Off_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_VisibilityModOn[16] = false
    call UnitShareVisionBJ( false, gg_unit_h006_0330, Player(0) )
    call UnitShareVisionBJ( false, gg_unit_h006_0341, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod16Off takes nothing returns nothing
    set gg_trg_VisibilityMod16Off = CreateTrigger(  )
    call DisableTrigger( gg_trg_VisibilityMod16Off )
    call TriggerRegisterTimerEventPeriodic( gg_trg_VisibilityMod16Off, 2 )
    call TriggerAddCondition( gg_trg_VisibilityMod16Off, Condition( function Trig_VisibilityMod16Off_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod16Off, function Trig_VisibilityMod16Off_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod17On
//===========================================================================
function Trig_VisibilityMod17On_Func001C takes nothing returns boolean
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_Player01 ) ) then
        return true
    endif
    if ( ( GetOwningPlayer(GetEnteringUnit()) == udg_PlayerTribeWarriors ) ) then
        return true
    endif
    return false
endfunction

function Trig_VisibilityMod17On_Conditions takes nothing returns boolean
    if ( not Trig_VisibilityMod17On_Func001C() ) then
        return false
    endif
    if ( not ( udg_VisibilityModOn[17] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod17On_Actions takes nothing returns nothing
    set udg_VisibilityModOn[17] = true
    call EnableTrigger( gg_trg_VisibilityMod17Off )
    call UnitShareVisionBJ( true, gg_unit_h006_0364, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod17On takes nothing returns nothing
    set gg_trg_VisibilityMod17On = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_VisibilityMod17On, gg_rct_VisibilityMod14 )
    call TriggerAddCondition( gg_trg_VisibilityMod17On, Condition( function Trig_VisibilityMod17On_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod17On, function Trig_VisibilityMod17On_Actions )
endfunction

//===========================================================================
// Trigger: VisibilityMod17Off
//===========================================================================
function Trig_VisibilityMod17Off_Func006001001002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_VisibilityMod17Off_Func006001001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_Player01 )
endfunction

function Trig_VisibilityMod17Off_Func006001001002002002 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == udg_PlayerTribeWarriors )
endfunction

function Trig_VisibilityMod17Off_Func006001001002002 takes nothing returns boolean
    return GetBooleanOr( Trig_VisibilityMod17Off_Func006001001002002001(), Trig_VisibilityMod17Off_Func006001001002002002() )
endfunction

function Trig_VisibilityMod17Off_Func006001001002 takes nothing returns boolean
    return GetBooleanAnd( Trig_VisibilityMod17Off_Func006001001002001(), Trig_VisibilityMod17Off_Func006001001002002() )
endfunction

function Trig_VisibilityMod17Off_Conditions takes nothing returns boolean
    if ( not ( udg_VisibilityModOn[17] == true ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(GetUnitsInRectMatching(gg_rct_VisibilityMod14, Condition(function Trig_VisibilityMod17Off_Func006001001002))) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_VisibilityMod17Off_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    set udg_VisibilityModOn[17] = false
    call UnitShareVisionBJ( false, gg_unit_h006_0364, Player(0) )
endfunction

//===========================================================================
function InitTrig_VisibilityMod17Off takes nothing returns nothing
    set gg_trg_VisibilityMod17Off = CreateTrigger(  )
    call DisableTrigger( gg_trg_VisibilityMod17Off )
    call TriggerRegisterTimerEventPeriodic( gg_trg_VisibilityMod17Off, 2 )
    call TriggerAddCondition( gg_trg_VisibilityMod17Off, Condition( function Trig_VisibilityMod17Off_Conditions ) )
    call TriggerAddAction( gg_trg_VisibilityMod17Off, function Trig_VisibilityMod17Off_Actions )
endfunction

//===========================================================================
function InitCustomTriggers takes nothing returns nothing
    call InitTrig_Unit_Event_Config(  )
    call InitTrig_Unit_Event(  )
    call InitTrig_SunderArmor(  )
    call InitTrig_HeavyHammersResearched(  )
    call InitTrig_Doomhammer_I_Doomstrike(  )
    call InitTrig_Doomhammer_I_Warbanner(  )
    call InitTrig_Doohmammer_I_For_the_Horde(  )
    call InitTrig_Zuljin_I_Grievous_Throw(  )
    call InitTrig_Zuljin_I_Locust_Jar_I_Launch(  )
    call InitTrig_Zuljin_I_Locust_Jar_I_Land(  )
    call InitTrig_Zuljin_I_Locust_Jar_I_Mana(  )
    call InitTrig_Zuljin_I_TazDingo(  )
    call InitTrig_Tharbek_I_Whiplash(  )
    call InitTrig_Tharbek_I_Intimidating_Shout(  )
    call InitTrig_Mid(  )
    call InitTrig_Outro(  )
    call InitTrig_HiddenUnitAssault(  )
    call InitTrig_KillUnit(  )
    call InitTrig_Failed(  )
    call InitTrig_PeonWeightOn(  )
    call InitTrig_PeonWeightOff(  )
    call InitTrig_PeonSwap(  )
    call InitTrig_Creep_Multiplier(  )
    call InitTrig_Initialization(  )
    call InitTrig_FaceAnimLoader(  )
    call InitTrig_InitMusic(  )
    call InitTrig_SetupUnits(  )
    call InitTrig_LoadHeroes(  )
    call InitTrig_SetupQuests(  )
    call InitTrig_SetupVO(  )
    call InitTrig_SetupPlayers(  )
    call InitTrig_SetupDestructibles(  )
    call InitTrig_Neutral_Smart_Attack(  )
    call InitTrig_LevelCap(  )
    call InitTrig_Easy(  )
    call InitTrig_Medium(  )
    call InitTrig_Hard(  )
    call InitTrig_SnowOn(  )
    call InitTrig_SnowOff(  )
    call InitTrig_SettlementsTimerCreate(  )
    call InitTrig_SettlementsTimerDestroy(  )
    call InitTrig_LodgeAttackTimerCreate(  )
    call InitTrig_SurviveTimerCreate(  )
    call InitTrig_SurviveTimerDestroy(  )
    call InitTrig_SurviveMusicTheme(  )
    call InitTrig_IntroCinQ(  )
    call InitTrig_IntroSkipped(  )
    call InitTrig_IntroCleanUp(  )
    call InitTrig_IntroDRPivot(  )
    call InitTrig_IntroDHPivot(  )
    call InitTrig_IntroUTPivot(  )
    call InitTrig_IntroZJPivot(  )
    call InitTrig_IntroTHPivot(  )
    call InitTrig_IntroGrunt01Pivot(  )
    call InitTrig_IntroGrunt02Pivot(  )
    call InitTrig_IntroTHAnim(  )
    call InitTrig_IntroT1Anim(  )
    call InitTrig_IntroT2Anim(  )
    call InitTrig_IntroPig(  )
    call InitTrig_IntroGroupExit(  )
    call InitTrig_IntroETMove(  )
    call InitTrig_IntroAnimReset(  )
    call InitTrig_MidCinQ(  )
    call InitTrig_MidSetup(  )
    call InitTrig_MidSkipped(  )
    call InitTrig_MidZuljinAnim(  )
    call InitTrig_MidCleanUp(  )
    call InitTrig_MidAnimReset(  )
    call InitTrig_MidChase(  )
    call InitTrig_MidInsurance(  )
    call InitTrig_MidHeroesAttack(  )
    call InitTrig_MidHeroesMove01(  )
    call InitTrig_MidHeroesMove02(  )
    call InitTrig_MidHeroesMove03Alliance(  )
    call InitTrig_MidHeroesMove03Hoard(  )
    call InitTrig_MidHeroesMove04(  )
    call InitTrig_OrcsLeavingWithDoomhammer(  )
    call InitTrig_MidHeroesExit01Jass(  )
    call InitTrig_MidHeroLife(  )
    call InitTrig_MidSpawnControl(  )
    call InitTrig_MidSpawner(  )
    call InitTrig_MidSpawnOrder(  )
    call InitTrig_AllianceGuardReplace(  )
    call InitTrig_OutroCinQ(  )
    call InitTrig_OutroSetup(  )
    call InitTrig_OutroSkipped(  )
    call InitTrig_OutroSway(  )
    call InitTrig_EitriggDeathSequence(  )
    call InitTrig_FailureCinQ(  )
    call InitTrig_FailureSetup(  )
    call InitTrig_FailureArmyCreate(  )
    call InitTrig_FailureSkipped(  )
    call InitTrig_EitriggAquire(  )
    call InitTrig_EitriggLife(  )
    call InitTrig_Eitrigg_Patrol_A(  )
    call InitTrig_Eitrigg_Patrol_B(  )
    call InitTrig_Eitrigg_Patrol_C(  )
    call InitTrig_Eitrigg_Patrol_D(  )
    call InitTrig_ReturnEitrigToCamp(  )
    call InitTrig_EitrigKillsEnemies(  )
    call InitTrig_Garona_Patrol_A(  )
    call InitTrig_Garona_Patrol_B(  )
    call InitTrig_Garona_Patrol_C(  )
    call InitTrig_Garona_Patrol_D(  )
    call InitTrig_GaronaFlee(  )
    call InitTrig_GaronaExit(  )
    call InitTrig_GaronaClick(  )
    call InitTrig_GaronaClickResponse(  )
    call InitTrig_Quests_Create(  )
    call InitTrig_Settlements_Discover_Q(  )
    call InitTrig_Settlements_Update_Q(  )
    call InitTrig_Settlements_Completed_Q(  )
    call InitTrig_Settlements_Optional_Discover_Q(  )
    call InitTrig_Settlements_Optional_Completed_Q(  )
    call InitTrig_Settlements_Failed_Q(  )
    call InitTrig_Trolls_Discover_Q(  )
    call InitTrig_Trolls_Update_Q(  )
    call InitTrig_Trolls_Completed_Q(  )
    call InitTrig_Trolls_Failed_Q(  )
    call InitTrig_Trolls_Optional_Discover_Q(  )
    call InitTrig_Trolls_Optional_Update_Q(  )
    call InitTrig_Trolls_Optional_Completed_Q(  )
    call InitTrig_Trolls_Optional_Failed_Q(  )
    call InitTrig_Elves_Discover_Q(  )
    call InitTrig_Elves_Completed_Q(  )
    call InitTrig_Survive_Discover_Q(  )
    call InitTrig_Survive_Update_Q(  )
    call InitTrig_Survive_Completed_Q(  )
    call InitTrig_Survive_Failed_Q(  )
    call InitTrig_LodgeVOTrigger(  )
    call InitTrig_LodgeDestroyed(  )
    call InitTrig_SettlementCount(  )
    call InitTrig_Settement04GreenDiscoverDoor(  )
    call InitTrig_Settlement04GreenDiscoverQuest(  )
    call InitTrig_Settlement04GreenKill(  )
    call InitTrig_SettementDruidsDiscoverDoor(  )
    call InitTrig_HiddenPing01(  )
    call InitTrig_HiddenPing02(  )
    call InitTrig_TrollCount(  )
    call InitTrig_TrollRegion01(  )
    call InitTrig_TrollRegion02(  )
    call InitTrig_TrollRegion03(  )
    call InitTrig_TrollRegion04(  )
    call InitTrig_TrollRegion05(  )
    call InitTrig_TrollCamp03Open(  )
    call InitTrig_TrollCampDeath01(  )
    call InitTrig_TrollCampDeath02(  )
    call InitTrig_TrollCampDeath03(  )
    call InitTrig_TrollCampDeath04(  )
    call InitTrig_TrollCampDeath05(  )
    call InitTrig_TrollsExit01(  )
    call InitTrig_TrollsExit02(  )
    call InitTrig_TrollsExit03(  )
    call InitTrig_TrollsExit04(  )
    call InitTrig_TrollsExit05(  )
    call InitTrig_TrollsExit06(  )
    call InitTrig_TrollsExit07(  )
    call InitTrig_TrollsExit08(  )
    call InitTrig_TrollsExit09(  )
    call InitTrig_TrollsExit10(  )
    call InitTrig_EnoughTrolls(  )
    call InitTrig_TrollResetSounds(  )
    call InitTrig_TrollPlaySounds(  )
    call InitTrig_WildhammerAttackedVO(  )
    call InitTrig_WilhammerVO01(  )
    call InitTrig_WilhammerVO02(  )
    call InitTrig_RedShirtGuyTriggered(  )
    call InitTrig_WildhammerGreenVO(  )
    call InitTrig_RedShirtGuyHides(  )
    call InitTrig_LodgeIntroVO(  )
    call InitTrig_LodgeDestroyedVO(  )
    call InitTrig_TrollsAquiredVO1(  )
    call InitTrig_TrollsAquiredVO2(  )
    call InitTrig_TrollsAquiredVO3(  )
    call InitTrig_TrollsCompletedVO(  )
    call InitTrig_Goblins01VO(  )
    call InitTrig_Goblins02VO(  )
    call InitTrig_Garona01VO(  )
    call InitTrig_Garona02VO(  )
    call InitTrig_LodgeAttackTimerDestroy(  )
    call InitTrig_LodgeAttackedStart(  )
    call InitTrig_LodgeAttackWaves(  )
    call InitTrig_LodgeAttackRecurring(  )
    call InitTrig_ElvenTrollResponse01(  )
    call InitTrig_ElvenTrollResponse02(  )
    call InitTrig_ElvenTrollResponse03(  )
    call InitTrig_ElvenTrollResponse04(  )
    call InitTrig_ElvenTrollResponse05(  )
    call InitTrig_HiddenAssault(  )
    call InitTrig_SettlementsFailedAI(  )
    call InitTrig_GryphonTraining(  )
    call InitTrig_GryphonTrained(  )
    call InitTrig_GryphonDies(  )
    call InitTrig_GryphonAttackWaveSend(  )
    call InitTrig_PlayerBaseCount(  )
    call InitTrig_Next_Level_Prep(  )
    call InitTrig_Victory(  )
    call InitTrig_Defeat(  )
    call InitTrig_Glittering_Prizes(  )
    call InitTrig_Disco(  )
    call InitTrig_Deck_me_out(  )
    call InitTrig_Every_little_thing_she_does(  )
    call InitTrig_Hatchet(  )
    call InitTrig_It_is_a_good_day_to_die(  )
    call InitTrig_Make_it_so(  )
    call InitTrig_Noglues(  )
    call InitTrig_On_screen(  )
    call InitTrig_Showpath(  )
    call InitTrig_There_can_be_only_one(  )
    call InitTrig_Unite_the_clans(  )
    call InitTrig_Tigerlily(  )
    call InitTrig_OilSpentForBuildings01(  )
    call InitTrig_OilSpentForBuildings02(  )
    call InitTrig_OilSpentForBuildings03(  )
    call InitTrig_OilSpentForBuildings04(  )
    call InitTrig_OilSpentForBuildings05(  )
    call InitTrig_OilReturnForBuildings01(  )
    call InitTrig_OilReturnForBuildings02(  )
    call InitTrig_OilReturnForBuildings03(  )
    call InitTrig_OilReturnForBuildings04(  )
    call InitTrig_OilReturnForBuildings05(  )
    call InitTrig_OilUIHide(  )
    call InitTrig_OilUIShow(  )
    call InitTrig_VisibilityMod01On(  )
    call InitTrig_VisibilityMod01Off(  )
    call InitTrig_VisibilityMod02On(  )
    call InitTrig_VisibilityMod02Off(  )
    call InitTrig_VisibilityMod03On(  )
    call InitTrig_VisibilityMod03Off(  )
    call InitTrig_VisibilityMod04On(  )
    call InitTrig_VisibilityMod04Off(  )
    call InitTrig_VisibilityMod05On(  )
    call InitTrig_VisibilityMod05Off(  )
    call InitTrig_VisibilityMod06On(  )
    call InitTrig_VisibilityMod06Off(  )
    call InitTrig_VisibilityMod07On(  )
    call InitTrig_VisibilityMod07Off(  )
    call InitTrig_VisibilityMod08On(  )
    call InitTrig_VisibilityMod08Off(  )
    call InitTrig_VisibilityMod09On(  )
    call InitTrig_VisibilityMod09Off(  )
    call InitTrig_VisibilityMod10On(  )
    call InitTrig_VisibilityMod10Off(  )
    call InitTrig_VisibilityMod11On(  )
    call InitTrig_VisibilityMod11Off(  )
    call InitTrig_VisibilityMod12On(  )
    call InitTrig_VisibilityMod12Off(  )
    call InitTrig_VisibilityMod13On(  )
    call InitTrig_VisibilityMod13Off(  )
    call InitTrig_VisibilityMod14On(  )
    call InitTrig_VisibilityMod14Off(  )
    call InitTrig_VisibilityMod15On(  )
    call InitTrig_VisibilityMod15Off(  )
    call InitTrig_VisibilityMod16On(  )
    call InitTrig_VisibilityMod16Off(  )
    call InitTrig_VisibilityMod17On(  )
    call InitTrig_VisibilityMod17Off(  )
endfunction

//===========================================================================
function RunInitializationTriggers takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_Unit_Event_Config )
    call ConditionalTriggerExecute( gg_trg_Creep_Multiplier )
    call ConditionalTriggerExecute( gg_trg_Initialization )
    call ConditionalTriggerExecute( gg_trg_Easy )
    call ConditionalTriggerExecute( gg_trg_Medium )
    call ConditionalTriggerExecute( gg_trg_Hard )
endfunction

//***************************************************************************
//*
//*  Upgrades
//*
//***************************************************************************

function InitUpgrades_Player0 takes nothing returns nothing
    call SetPlayerTechMaxAllowed( Player(0), 'R003', 1 )
    call SetPlayerTechMaxAllowed( Player(0), 'R60D', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'R60C', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'Robf', 0 )
endfunction

function InitUpgrades takes nothing returns nothing
    call InitUpgrades_Player0(  )
endfunction

//***************************************************************************
//*
//*  TechTree
//*
//***************************************************************************

function InitTechTree_Player0 takes nothing returns nothing
    call SetPlayerTechMaxAllowed( Player(0), 'A64B', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'A62N', 0 )
    call SetPlayerAbilityAvailable( Player(0), 'S600', false )
    call SetPlayerAbilityAvailable( Player(0), 'A61J', false )
    call SetPlayerAbilityAvailable( Player(0), 'A64C', false )
    call SetPlayerTechMaxAllowed( Player(0), 'A61X', 0 )
    call SetPlayerAbilityAvailable( Player(0), 'A003', false )
    call SetPlayerAbilityAvailable( Player(0), 'A608', false )
    call SetPlayerTechMaxAllowed( Player(0), 'A62O', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'A62P', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'A62Q', 0 )
    call SetPlayerAbilityAvailable( Player(0), 'A606', false )
    call SetPlayerAbilityAvailable( Player(0), 'A002', false )
    call SetPlayerAbilityAvailable( Player(0), 'A61G', false )
    call SetPlayerAbilityAvailable( Player(0), 'A64G', false )
    call SetPlayerAbilityAvailable( Player(0), 'Aast', false )
    call SetPlayerAbilityAvailable( Player(0), 'Aobs', false )
    call SetPlayerAbilityAvailable( Player(0), 'Abof', false )
    call SetPlayerAbilityAvailable( Player(0), 'Acn2', false )
    call SetPlayerAbilityAvailable( Player(0), 'Sch3', false )
    call SetPlayerAbilityAvailable( Player(0), 'Abun', false )
    call SetPlayerTechMaxAllowed( Player(0), 'A60X', 0 )
    call SetPlayerAbilityAvailable( Player(0), 'A62F', false )
    call SetPlayerAbilityAvailable( Player(0), 'Sca6', false )
    call SetPlayerAbilityAvailable( Player(0), 'Sca1', false )
    call SetPlayerAbilityAvailable( Player(0), 'Sca4', false )
    call SetPlayerAbilityAvailable( Player(0), 'Sca5', false )
    call SetPlayerAbilityAvailable( Player(0), 'Sca2', false )
    call SetPlayerAbilityAvailable( Player(0), 'Sca3', false )
    call SetPlayerAbilityAvailable( Player(0), 'Achl', false )
    call SetPlayerAbilityAvailable( Player(0), 'Acpf', false )
    call SetPlayerTechMaxAllowed( Player(0), 'S601', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'A60I', 0 )
    call SetPlayerAbilityAvailable( Player(0), 'Aloa', false )
    call SetPlayerAbilityAvailable( Player(0), 'Sloa', false )
    call SetPlayerAbilityAvailable( Player(0), 'Apak', false )
    call SetPlayerAbilityAvailable( Player(0), 'A62E', false )
    call SetPlayerAbilityAvailable( Player(0), 'A62D', false )
    call SetPlayerAbilityAvailable( Player(0), 'Arbr', false )
    call SetPlayerAbilityAvailable( Player(0), 'Aorb', false )
    call SetPlayerAbilityAvailable( Player(0), 'Aspi', false )
    call SetPlayerAbilityAvailable( Player(0), 'Aosp', false )
    call SetPlayerTechMaxAllowed( Player(0), 'A60H', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'n000', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'n60H', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'o604', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'o60S', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'o60R', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'o60Q', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'h600', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'h001', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'u000', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'oshm', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'odoc', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'otbr', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'owyv', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'okod', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'ocat', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'ohun', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'otau', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'orai', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'ogru', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'n609', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'ospm', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'ogre', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'ostr', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'ofrt', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'oalt', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'obar', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'ofor', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'otto', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'osld', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'obea', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'otrb', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'owtw', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'ovln', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'n60L', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'u001', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'o60M', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'u002', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'o60N', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'o60V', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'n002', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'otbk', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'o60T', 0 )
    call SetPlayerTechMaxAllowed( Player(0), 'o611', 0 )
endfunction

function InitTechTree takes nothing returns nothing
    call InitTechTree_Player0(  )
endfunction

//***************************************************************************
//*
//*  Players
//*
//***************************************************************************

function InitCustomPlayerSlots takes nothing returns nothing

    // Player 0
    call SetPlayerStartLocation( Player(0), 0 )
    call ForcePlayerStartLocation( Player(0), 0 )
    call SetPlayerColor( Player(0), ConvertPlayerColor(0) )
    call SetPlayerRacePreference( Player(0), RACE_PREF_ORC )
    call SetPlayerRaceSelectable( Player(0), false )
    call SetPlayerController( Player(0), MAP_CONTROL_USER )

    // Player 1
    call SetPlayerStartLocation( Player(1), 1 )
    call ForcePlayerStartLocation( Player(1), 1 )
    call SetPlayerColor( Player(1), ConvertPlayerColor(1) )
    call SetPlayerRacePreference( Player(1), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(1), false )
    call SetPlayerController( Player(1), MAP_CONTROL_COMPUTER )

    // Player 2
    call SetPlayerStartLocation( Player(2), 2 )
    call ForcePlayerStartLocation( Player(2), 2 )
    call SetPlayerColor( Player(2), ConvertPlayerColor(2) )
    call SetPlayerRacePreference( Player(2), RACE_PREF_ORC )
    call SetPlayerRaceSelectable( Player(2), false )
    call SetPlayerController( Player(2), MAP_CONTROL_COMPUTER )

    // Player 3
    call SetPlayerStartLocation( Player(3), 3 )
    call ForcePlayerStartLocation( Player(3), 3 )
    call SetPlayerColor( Player(3), ConvertPlayerColor(3) )
    call SetPlayerRacePreference( Player(3), RACE_PREF_ORC )
    call SetPlayerRaceSelectable( Player(3), false )
    call SetPlayerController( Player(3), MAP_CONTROL_COMPUTER )

    // Player 4
    call SetPlayerStartLocation( Player(4), 4 )
    call ForcePlayerStartLocation( Player(4), 4 )
    call SetPlayerColor( Player(4), ConvertPlayerColor(4) )
    call SetPlayerRacePreference( Player(4), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(4), false )
    call SetPlayerController( Player(4), MAP_CONTROL_COMPUTER )

    // Player 5
    call SetPlayerStartLocation( Player(5), 5 )
    call ForcePlayerStartLocation( Player(5), 5 )
    call SetPlayerColor( Player(5), ConvertPlayerColor(5) )
    call SetPlayerRacePreference( Player(5), RACE_PREF_ORC )
    call SetPlayerRaceSelectable( Player(5), false )
    call SetPlayerController( Player(5), MAP_CONTROL_COMPUTER )

    // Player 6
    call SetPlayerStartLocation( Player(6), 6 )
    call ForcePlayerStartLocation( Player(6), 6 )
    call SetPlayerColor( Player(6), ConvertPlayerColor(6) )
    call SetPlayerRacePreference( Player(6), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(6), false )
    call SetPlayerController( Player(6), MAP_CONTROL_COMPUTER )

    // Player 9
    call SetPlayerStartLocation( Player(9), 7 )
    call ForcePlayerStartLocation( Player(9), 7 )
    call SetPlayerColor( Player(9), ConvertPlayerColor(9) )
    call SetPlayerRacePreference( Player(9), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(9), false )
    call SetPlayerController( Player(9), MAP_CONTROL_COMPUTER )

    // Player 11
    call SetPlayerStartLocation( Player(11), 8 )
    call ForcePlayerStartLocation( Player(11), 8 )
    call SetPlayerColor( Player(11), ConvertPlayerColor(11) )
    call SetPlayerRacePreference( Player(11), RACE_PREF_ORC )
    call SetPlayerRaceSelectable( Player(11), false )
    call SetPlayerController( Player(11), MAP_CONTROL_COMPUTER )

    // Player 12
    call SetPlayerStartLocation( Player(12), 9 )
    call ForcePlayerStartLocation( Player(12), 9 )
    call SetPlayerColor( Player(12), ConvertPlayerColor(12) )
    call SetPlayerRacePreference( Player(12), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(12), false )
    call SetPlayerController( Player(12), MAP_CONTROL_COMPUTER )

    // Player 13
    call SetPlayerStartLocation( Player(13), 10 )
    call ForcePlayerStartLocation( Player(13), 10 )
    call SetPlayerColor( Player(13), ConvertPlayerColor(13) )
    call SetPlayerRacePreference( Player(13), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(13), false )
    call SetPlayerController( Player(13), MAP_CONTROL_COMPUTER )

    // Player 14
    call SetPlayerStartLocation( Player(14), 11 )
    call ForcePlayerStartLocation( Player(14), 11 )
    call SetPlayerColor( Player(14), ConvertPlayerColor(14) )
    call SetPlayerRacePreference( Player(14), RACE_PREF_NIGHTELF )
    call SetPlayerRaceSelectable( Player(14), false )
    call SetPlayerController( Player(14), MAP_CONTROL_COMPUTER )

    // Player 16
    call SetPlayerStartLocation( Player(16), 12 )
    call ForcePlayerStartLocation( Player(16), 12 )
    call SetPlayerColor( Player(16), ConvertPlayerColor(16) )
    call SetPlayerRacePreference( Player(16), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(16), false )
    call SetPlayerController( Player(16), MAP_CONTROL_COMPUTER )

    // Player 17
    call SetPlayerStartLocation( Player(17), 13 )
    call ForcePlayerStartLocation( Player(17), 13 )
    call SetPlayerColor( Player(17), ConvertPlayerColor(17) )
    call SetPlayerRacePreference( Player(17), RACE_PREF_ORC )
    call SetPlayerRaceSelectable( Player(17), false )
    call SetPlayerController( Player(17), MAP_CONTROL_COMPUTER )

    // Player 18
    call SetPlayerStartLocation( Player(18), 14 )
    call ForcePlayerStartLocation( Player(18), 14 )
    call SetPlayerColor( Player(18), ConvertPlayerColor(18) )
    call SetPlayerRacePreference( Player(18), RACE_PREF_ORC )
    call SetPlayerRaceSelectable( Player(18), false )
    call SetPlayerController( Player(18), MAP_CONTROL_COMPUTER )

    // Player 19
    call SetPlayerStartLocation( Player(19), 15 )
    call ForcePlayerStartLocation( Player(19), 15 )
    call SetPlayerColor( Player(19), ConvertPlayerColor(19) )
    call SetPlayerRacePreference( Player(19), RACE_PREF_ORC )
    call SetPlayerRaceSelectable( Player(19), false )
    call SetPlayerController( Player(19), MAP_CONTROL_COMPUTER )

    // Player 20
    call SetPlayerStartLocation( Player(20), 16 )
    call ForcePlayerStartLocation( Player(20), 16 )
    call SetPlayerColor( Player(20), ConvertPlayerColor(20) )
    call SetPlayerRacePreference( Player(20), RACE_PREF_ORC )
    call SetPlayerRaceSelectable( Player(20), false )
    call SetPlayerController( Player(20), MAP_CONTROL_COMPUTER )

    // Player 21
    call SetPlayerStartLocation( Player(21), 17 )
    call ForcePlayerStartLocation( Player(21), 17 )
    call SetPlayerColor( Player(21), ConvertPlayerColor(21) )
    call SetPlayerRacePreference( Player(21), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(21), false )
    call SetPlayerController( Player(21), MAP_CONTROL_COMPUTER )

    // Player 22
    call SetPlayerStartLocation( Player(22), 18 )
    call ForcePlayerStartLocation( Player(22), 18 )
    call SetPlayerColor( Player(22), ConvertPlayerColor(22) )
    call SetPlayerRacePreference( Player(22), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(22), false )
    call SetPlayerController( Player(22), MAP_CONTROL_COMPUTER )

endfunction

function InitCustomTeams takes nothing returns nothing
    // Force: TRIGSTR_013
    call SetPlayerTeam( Player(0), 0 )
    call SetPlayerTeam( Player(2), 0 )
    call SetPlayerTeam( Player(3), 0 )
    call SetPlayerTeam( Player(5), 0 )
    call SetPlayerTeam( Player(11), 0 )
    call SetPlayerTeam( Player(16), 0 )
    call SetPlayerTeam( Player(17), 0 )
    call SetPlayerTeam( Player(18), 0 )
    call SetPlayerTeam( Player(19), 0 )
    call SetPlayerTeam( Player(20), 0 )

    //   Allied
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(16), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(17), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(18), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(19), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(20), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(16), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(17), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(18), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(19), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(20), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(16), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(17), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(18), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(19), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(20), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(16), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(17), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(18), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(19), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(20), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(16), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(17), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(18), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(19), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(20), true )
    call SetPlayerAllianceStateAllyBJ( Player(16), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(16), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(16), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(16), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(16), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(16), Player(17), true )
    call SetPlayerAllianceStateAllyBJ( Player(16), Player(18), true )
    call SetPlayerAllianceStateAllyBJ( Player(16), Player(19), true )
    call SetPlayerAllianceStateAllyBJ( Player(16), Player(20), true )
    call SetPlayerAllianceStateAllyBJ( Player(17), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(17), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(17), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(17), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(17), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(17), Player(16), true )
    call SetPlayerAllianceStateAllyBJ( Player(17), Player(18), true )
    call SetPlayerAllianceStateAllyBJ( Player(17), Player(19), true )
    call SetPlayerAllianceStateAllyBJ( Player(17), Player(20), true )
    call SetPlayerAllianceStateAllyBJ( Player(18), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(18), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(18), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(18), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(18), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(18), Player(16), true )
    call SetPlayerAllianceStateAllyBJ( Player(18), Player(17), true )
    call SetPlayerAllianceStateAllyBJ( Player(18), Player(19), true )
    call SetPlayerAllianceStateAllyBJ( Player(18), Player(20), true )
    call SetPlayerAllianceStateAllyBJ( Player(19), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(19), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(19), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(19), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(19), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(19), Player(16), true )
    call SetPlayerAllianceStateAllyBJ( Player(19), Player(17), true )
    call SetPlayerAllianceStateAllyBJ( Player(19), Player(18), true )
    call SetPlayerAllianceStateAllyBJ( Player(19), Player(20), true )
    call SetPlayerAllianceStateAllyBJ( Player(20), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(20), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(20), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(20), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(20), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(20), Player(16), true )
    call SetPlayerAllianceStateAllyBJ( Player(20), Player(17), true )
    call SetPlayerAllianceStateAllyBJ( Player(20), Player(18), true )
    call SetPlayerAllianceStateAllyBJ( Player(20), Player(19), true )

    // Force: TRIGSTR_014
    call SetPlayerTeam( Player(1), 1 )
    call SetPlayerTeam( Player(4), 1 )
    call SetPlayerTeam( Player(6), 1 )
    call SetPlayerTeam( Player(9), 1 )
    call SetPlayerTeam( Player(12), 1 )
    call SetPlayerTeam( Player(13), 1 )
    call SetPlayerTeam( Player(14), 1 )
    call SetPlayerTeam( Player(21), 1 )
    call SetPlayerTeam( Player(22), 1 )

    //   Allied
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(12), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(13), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(14), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(21), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(22), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(12), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(13), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(14), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(21), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(22), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(12), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(13), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(14), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(21), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(22), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(12), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(13), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(14), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(21), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(22), true )
    call SetPlayerAllianceStateAllyBJ( Player(12), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(12), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(12), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(12), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(12), Player(13), true )
    call SetPlayerAllianceStateAllyBJ( Player(12), Player(14), true )
    call SetPlayerAllianceStateAllyBJ( Player(12), Player(21), true )
    call SetPlayerAllianceStateAllyBJ( Player(12), Player(22), true )
    call SetPlayerAllianceStateAllyBJ( Player(13), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(13), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(13), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(13), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(13), Player(12), true )
    call SetPlayerAllianceStateAllyBJ( Player(13), Player(14), true )
    call SetPlayerAllianceStateAllyBJ( Player(13), Player(21), true )
    call SetPlayerAllianceStateAllyBJ( Player(13), Player(22), true )
    call SetPlayerAllianceStateAllyBJ( Player(14), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(14), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(14), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(14), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(14), Player(12), true )
    call SetPlayerAllianceStateAllyBJ( Player(14), Player(13), true )
    call SetPlayerAllianceStateAllyBJ( Player(14), Player(21), true )
    call SetPlayerAllianceStateAllyBJ( Player(14), Player(22), true )
    call SetPlayerAllianceStateAllyBJ( Player(21), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(21), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(21), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(21), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(21), Player(12), true )
    call SetPlayerAllianceStateAllyBJ( Player(21), Player(13), true )
    call SetPlayerAllianceStateAllyBJ( Player(21), Player(14), true )
    call SetPlayerAllianceStateAllyBJ( Player(21), Player(22), true )
    call SetPlayerAllianceStateAllyBJ( Player(22), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(22), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(22), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(22), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(22), Player(12), true )
    call SetPlayerAllianceStateAllyBJ( Player(22), Player(13), true )
    call SetPlayerAllianceStateAllyBJ( Player(22), Player(14), true )
    call SetPlayerAllianceStateAllyBJ( Player(22), Player(21), true )

endfunction

function InitAllyPriorities takes nothing returns nothing

    call SetEnemyStartLocPrioCount( 1, 1 )
    call SetEnemyStartLocPrio( 1, 0, 5, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 2, 14 )
    call SetStartLocPrio( 2, 0, 3, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 2, 1, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 2, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 3, 6, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 2, 4, 7, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 5, 10, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 2, 6, 11, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 7, 13, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 8, 14, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 9, 15, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 10, 16, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 11, 17, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 12, 18, MAP_LOC_PRIO_HIGH )

    call SetEnemyStartLocPrioCount( 2, 3 )
    call SetEnemyStartLocPrio( 2, 0, 4, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 2, 1, 6, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 3, 6 )
    call SetStartLocPrio( 3, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 3, 1, 1, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 3, 2, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 3, 3, 5, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 3, 4, 10, MAP_LOC_PRIO_LOW )

    call SetEnemyStartLocPrioCount( 3, 15 )
    call SetEnemyStartLocPrio( 3, 0, 0, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 3, 1, 1, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 3, 2, 4, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 3, 3, 5, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 3, 4, 6, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 3, 5, 8, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 3, 6, 9, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 3, 7, 11, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 3, 8, 12, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 3, 9, 13, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 3, 10, 14, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 3, 11, 15, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 3, 12, 16, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 3, 13, 17, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 3, 14, 18, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 4, 13 )
    call SetStartLocPrio( 4, 0, 2, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 4, 1, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 2, 5, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 4, 3, 6, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 4, 4, 7, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 4, 5, 8, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 4, 6, 11, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 7, 14, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 8, 15, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 4, 9, 16, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 4, 10, 17, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 11, 18, MAP_LOC_PRIO_HIGH )

    call SetEnemyStartLocPrioCount( 4, 11 )
    call SetEnemyStartLocPrio( 4, 0, 1, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 4, 1, 2, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 4, 2, 5, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 4, 3, 6, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 4, 4, 7, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 4, 5, 8, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 4, 6, 14, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 4, 7, 15, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 4, 8, 16, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 4, 9, 17, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 5, 2 )
    call SetStartLocPrio( 5, 0, 10, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 5, 1, 12, MAP_LOC_PRIO_LOW )

    call SetEnemyStartLocPrioCount( 5, 7 )
    call SetEnemyStartLocPrio( 5, 0, 1, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 5, 1, 2, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 5, 2, 3, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 5, 3, 4, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 5, 4, 6, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 5, 5, 7, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 6, 11 )
    call SetStartLocPrio( 6, 0, 0, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 6, 1, 3, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 6, 2, 5, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 6, 3, 7, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 6, 4, 8, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 6, 5, 9, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 6, 6, 12, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 6, 7, 13, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 6, 8, 14, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 6, 9, 17, MAP_LOC_PRIO_HIGH )

    call SetEnemyStartLocPrioCount( 6, 11 )
    call SetEnemyStartLocPrio( 6, 0, 0, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 6, 1, 2, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 6, 2, 3, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 6, 3, 5, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 6, 4, 7, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 6, 5, 8, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 6, 6, 9, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 6, 7, 13, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 6, 8, 14, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 6, 9, 18, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 7, 1 )
    call SetStartLocPrio( 7, 0, 5, MAP_LOC_PRIO_LOW )

    call SetEnemyStartLocPrioCount( 7, 4 )
    call SetEnemyStartLocPrio( 7, 0, 4, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 7, 1, 6, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 7, 2, 10, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 8, 14 )
    call SetStartLocPrio( 8, 0, 0, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 8, 1, 1, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 8, 2, 2, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 8, 3, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 8, 4, 6, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 8, 5, 7, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 8, 6, 9, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 8, 7, 11, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 8, 8, 13, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 8, 9, 14, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 8, 10, 15, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 8, 11, 16, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 8, 12, 18, MAP_LOC_PRIO_LOW )

    call SetEnemyStartLocPrioCount( 8, 11 )
    call SetEnemyStartLocPrio( 8, 0, 0, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 8, 1, 1, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 8, 2, 2, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 8, 3, 4, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 8, 4, 7, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 8, 5, 11, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 8, 6, 14, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 8, 7, 15, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 8, 8, 16, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 8, 9, 18, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 9, 11 )
    call SetStartLocPrio( 9, 0, 1, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 9, 1, 2, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 9, 2, 4, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 9, 3, 5, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 9, 4, 6, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 9, 5, 7, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 9, 6, 8, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 9, 7, 14, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 9, 8, 15, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 9, 9, 16, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 9, 10, 17, MAP_LOC_PRIO_LOW )

    call SetEnemyStartLocPrioCount( 9, 15 )
    call SetEnemyStartLocPrio( 9, 0, 1, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 9, 1, 2, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 9, 2, 3, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 9, 3, 4, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 9, 4, 5, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 9, 5, 6, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 9, 6, 7, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 9, 7, 8, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 9, 8, 11, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 9, 9, 12, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 9, 10, 14, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 9, 11, 15, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 9, 12, 16, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 9, 13, 17, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 9, 14, 18, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 10, 19 )
    call SetStartLocPrio( 10, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 1, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 2, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 3, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 4, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 5, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 6, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 7, 7, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 8, 8, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 9, 9, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 10, 11, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 11, 12, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 12, 13, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 13, 14, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 14, 15, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 15, 16, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 16, 17, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 17, 18, MAP_LOC_PRIO_HIGH )

    call SetEnemyStartLocPrioCount( 10, 7 )
    call SetEnemyStartLocPrio( 10, 0, 0, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 10, 1, 1, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 10, 2, 2, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 10, 3, 3, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 10, 4, 4, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 10, 5, 5, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 10, 6, 6, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 11, 12 )
    call SetStartLocPrio( 11, 0, 1, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 11, 1, 2, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 11, 2, 4, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 11, 3, 7, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 11, 4, 8, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 11, 5, 9, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 11, 6, 12, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 11, 7, 13, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 11, 8, 14, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 11, 9, 16, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 11, 10, 18, MAP_LOC_PRIO_HIGH )

    call SetEnemyStartLocPrioCount( 11, 11 )
    call SetEnemyStartLocPrio( 11, 0, 0, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 11, 1, 1, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 11, 2, 4, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 11, 3, 5, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 11, 4, 6, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 11, 5, 8, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 11, 6, 9, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 11, 7, 12, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 11, 8, 13, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 11, 9, 15, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 12, 15 )
    call SetStartLocPrio( 12, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 12, 1, 1, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 12, 2, 2, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 12, 3, 3, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 12, 4, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 12, 5, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 12, 6, 6, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 12, 7, 7, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 12, 8, 8, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 12, 9, 9, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 12, 10, 11, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 12, 11, 13, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 12, 12, 14, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 12, 13, 15, MAP_LOC_PRIO_LOW )

    call SetEnemyStartLocPrioCount( 12, 11 )
    call SetEnemyStartLocPrio( 12, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 12, 1, 3, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 12, 2, 4, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 12, 3, 6, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 12, 4, 7, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 12, 5, 9, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 12, 6, 14, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 12, 7, 15, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 12, 8, 16, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 12, 9, 17, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 12, 10, 18, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 13, 14 )
    call SetStartLocPrio( 13, 0, 0, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 13, 1, 1, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 13, 2, 3, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 13, 3, 4, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 13, 4, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 13, 5, 6, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 13, 6, 7, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 13, 7, 8, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 13, 8, 9, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 13, 9, 11, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 13, 10, 12, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 13, 11, 17, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 13, 12, 18, MAP_LOC_PRIO_LOW )

    call SetEnemyStartLocPrioCount( 13, 9 )
    call SetEnemyStartLocPrio( 13, 0, 1, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 13, 1, 2, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 13, 2, 5, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 13, 3, 6, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 13, 4, 7, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 13, 5, 11, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 13, 6, 12, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 13, 7, 16, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 13, 8, 18, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 14, 14 )
    call SetStartLocPrio( 14, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 14, 1, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 14, 2, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 14, 3, 4, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 14, 4, 6, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 14, 5, 7, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 14, 6, 8, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 14, 7, 9, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 14, 8, 11, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 14, 9, 13, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 14, 10, 15, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 14, 11, 16, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 14, 12, 18, MAP_LOC_PRIO_LOW )

    call SetEnemyStartLocPrioCount( 14, 14 )
    call SetEnemyStartLocPrio( 14, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 14, 1, 1, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 14, 2, 2, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 14, 3, 3, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 14, 4, 4, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 14, 5, 7, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 14, 6, 8, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 14, 7, 9, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 14, 8, 11, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 14, 9, 13, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 14, 10, 15, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 14, 11, 16, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 14, 12, 17, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 15, 12 )
    call SetStartLocPrio( 15, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 15, 1, 1, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 15, 2, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 15, 3, 4, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 15, 4, 5, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 15, 5, 8, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 15, 6, 9, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 15, 7, 11, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 15, 8, 16, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 15, 9, 17, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 15, 10, 18, MAP_LOC_PRIO_LOW )

    call SetEnemyStartLocPrioCount( 15, 15 )
    call SetEnemyStartLocPrio( 15, 0, 0, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 15, 1, 1, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 15, 2, 2, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 15, 3, 4, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 15, 4, 5, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 15, 5, 6, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 15, 6, 7, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 15, 7, 8, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 15, 8, 9, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 15, 9, 11, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 15, 10, 12, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 15, 11, 16, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 15, 12, 17, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 15, 13, 18, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 16, 11 )
    call SetStartLocPrio( 16, 0, 0, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 16, 1, 1, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 16, 2, 4, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 16, 3, 5, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 16, 4, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 16, 5, 7, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 16, 6, 9, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 16, 7, 11, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 16, 8, 13, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 16, 9, 14, MAP_LOC_PRIO_HIGH )

    call SetEnemyStartLocPrioCount( 16, 13 )
    call SetEnemyStartLocPrio( 16, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 16, 1, 1, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 16, 2, 2, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 16, 3, 3, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 16, 4, 4, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 16, 5, 5, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 16, 6, 6, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 16, 7, 7, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 16, 8, 9, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 16, 9, 13, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 16, 10, 15, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 16, 11, 17, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 16, 12, 18, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 17, 12 )
    call SetStartLocPrio( 17, 0, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 17, 1, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 17, 2, 3, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 17, 3, 4, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 17, 4, 6, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 17, 5, 7, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 17, 6, 8, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 17, 7, 9, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 17, 8, 11, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 17, 9, 15, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 17, 10, 16, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 17, 11, 18, MAP_LOC_PRIO_LOW )

    call SetEnemyStartLocPrioCount( 17, 16 )
    call SetEnemyStartLocPrio( 17, 0, 0, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 17, 1, 1, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 17, 2, 2, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 17, 3, 3, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 17, 4, 4, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 17, 5, 6, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 17, 6, 7, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 17, 7, 8, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 17, 8, 9, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 17, 9, 11, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 17, 10, 13, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 17, 11, 14, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 17, 12, 15, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 17, 13, 16, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 17, 14, 18, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 18, 8 )
    call SetStartLocPrio( 18, 0, 0, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 18, 1, 7, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 18, 2, 9, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 18, 3, 11, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 18, 4, 13, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 18, 5, 14, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 18, 6, 15, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 18, 7, 16, MAP_LOC_PRIO_HIGH )

    call SetEnemyStartLocPrioCount( 18, 9 )
    call SetEnemyStartLocPrio( 18, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 18, 1, 2, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 18, 2, 7, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 18, 3, 9, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 18, 4, 11, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 18, 5, 13, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 18, 6, 14, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 18, 7, 15, MAP_LOC_PRIO_HIGH )
endfunction

//***************************************************************************
//*
//*  Main Initialization
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
    call SetCameraBounds( -11776.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), -7680.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 11520.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 7168.0 - GetCameraMargin(CAMERA_MARGIN_TOP), -11776.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), 7168.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 11520.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), -7680.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM) )
    call SetDayNightModels( "Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl" )
    call SetTerrainFogEx( 0, 2500.0, 8000.0, 0.500, 0.804, 1.000, 1.000 )
    call NewSoundEnvironment( "Default" )
    call SetAmbientDaySound( "VillageDay" )
    call SetAmbientNightSound( "VillageNight" )
    call SetMapMusic( "Music", true, 0 )
    call InitSounds(  )
    call CreateRegions(  )
    call CreateCameras(  )
    call InitUpgrades(  )
    call InitTechTree(  )
    call CreateAllDestructables(  )
    call CreateAllUnits(  )
    call InitBlizzard(  )
    call InitGlobals(  )
    call InitCustomTriggers(  )
    call RunInitializationTriggers(  )

endfunction

//***************************************************************************
//*
//*  Map Configuration
//*
//***************************************************************************

function config takes nothing returns nothing
    call SetMapName( "TRIGSTR_001" )
    call SetMapDescription( "TRIGSTR_002" )
    call SetPlayers( 19 )
    call SetTeams( 19 )
    call SetGamePlacement( MAP_PLACEMENT_USE_MAP_SETTINGS )

    call DefineStartLocation( 0, 8768.0, 5888.0 )
    call DefineStartLocation( 1, -10176.0, -128.0 )
    call DefineStartLocation( 2, -5312.0, 1792.0 )
    call DefineStartLocation( 3, -4992.0, 1664.0 )
    call DefineStartLocation( 4, 7168.0, -4864.0 )
    call DefineStartLocation( 5, -5824.0, 6848.0 )
    call DefineStartLocation( 6, -10496.0, -2944.0 )
    call DefineStartLocation( 7, -11008.0, -1984.0 )
    call DefineStartLocation( 8, 3904.0, -640.0 )
    call DefineStartLocation( 9, -10048.0, -6720.0 )
    call DefineStartLocation( 10, -10112.0, -2368.0 )
    call DefineStartLocation( 11, 8832.0, 5248.0 )
    call DefineStartLocation( 12, -3392.0, 2304.0 )
    call DefineStartLocation( 13, -512.0, -6464.0 )
    call DefineStartLocation( 14, 10560.0, -1792.0 )
    call DefineStartLocation( 15, 10048.0, -6016.0 )
    call DefineStartLocation( 16, -2176.0, 1152.0 )
    call DefineStartLocation( 17, -8000.0, -3520.0 )
    call DefineStartLocation( 18, -6720.0, -1408.0 )

    // Player setup
    call InitCustomPlayerSlots(  )
    call InitCustomTeams(  )
    call InitAllyPriorities(  )
endfunction

